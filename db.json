{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner2.jpg","path":"css/images/banner2.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/static/docker.pdf","path":"static/docker.pdf","modified":0,"renderable":0},{"_id":"source/static/go.jpg","path":"static/go.jpg","modified":0,"renderable":0},{"_id":"source/static/wechat_qr.jpg","path":"static/wechat_qr.jpg","modified":0,"renderable":0},{"_id":"source/static/k8s.pdf","path":"static/k8s.pdf","modified":0,"renderable":0},{"_id":"source/static/images/img.png","path":"static/images/img.png","modified":0,"renderable":0},{"_id":"source/static/images/img_1.png","path":"static/images/img_1.png","modified":0,"renderable":0},{"_id":"source/static/images/img_2.png","path":"static/images/img_2.png","modified":0,"renderable":0},{"_id":"source/README","path":"README","modified":0,"renderable":0},{"_id":"source/static/zhile_agent_po.zip","path":"static/zhile_agent_po.zip","modified":0,"renderable":0},{"_id":"source/Dockerfile","path":"Dockerfile","modified":0,"renderable":0},{"_id":"source/nginx.conf","path":"nginx.conf","modified":0,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"8b74f35a2a1907f11ffe0bfd81031d2e33c4d261","modified":1656297711813},{"_id":"source/baidu_verify_code-XMUS2hM8te.html","hash":"e4e901784ad4f8f917113677053873f80fc5287e","modified":1660816152406},{"_id":"source/google0b057d6516ddf64a.html","hash":"47d2ae9f68e8339b2d06432a36f03a524c166f5d","modified":1670331581111},{"_id":"source/_posts/antdPro简单介绍.md","hash":"bd9a08e707807a6ef14e46b4122ac3ff36a68b41","modified":1656953187385},{"_id":"source/_posts/go 环境的安装.md","hash":"775ccd3563d1194dd092c18cdf471f74a8453bc7","modified":1657556546266},{"_id":"source/_posts/go的学习路线.md","hash":"f6d240a6eba1edf37cda79c8872a7a39841ad2d0","modified":1686656067799},{"_id":"source/_posts/js-replaceAll方法有兼容性问题.md","hash":"c88d821d0c253527cc029645e4149e72d89d1163","modified":1661253339069},{"_id":"source/_posts/git知识点.md","hash":"0e13b6749b4a492466ddbe8cdc51ea644e784e47","modified":1686656067839},{"_id":"source/_posts/mysql相关知识.md","hash":"a0bef33fed07638920a7799c4a9fbb5b8e7d5792","modified":1658196588113},{"_id":"source/_posts/postMan设置切换本地开发线上环境.md","hash":"01ac993a612eeec60daa6568d9be11be4e8e5c75","modified":1661148405180},{"_id":"source/_posts/回调接口高并发.md","hash":"facfac43cba8bf61644f6efc9d3f4ba48999ead1","modified":1657467263073},{"_id":"source/_posts/博客第一篇文章.md","hash":"0ed62e01d262651fd4ae8cdc14afd16dfcdb4194","modified":1656555179097},{"_id":"source/_posts/层次划分.md","hash":"1932d9cd117d89230991e734d4064790059d562f","modified":1660743934232},{"_id":"source/about/index.md","hash":"35407d899f753a200b3b4133ddb290fa7044c4b7","modified":1689558368664},{"_id":"source/categories/index.md","hash":"5f26d7896a6630c2bc7776d7d33b21e8f0fe6dc2","modified":1656297079564},{"_id":"source/favorites/index.md","hash":"8d7d4d6e653d31e526073f1ec534022637ac6a15","modified":1688727550584},{"_id":"source/openCode/index.md","hash":"bdafdc297fcf6b20ea2178822e45975bbd470919","modified":1661140183378},{"_id":"source/_posts/jetbrains编辑器快捷键.md","hash":"13f4fe91e1a3611087d07044e7ccfca5a214a195","modified":1658456622000},{"_id":"source/static/wechat_qr.jpg","hash":"6dc637bddc9ed1e9ce0675f1f7b0c0904be48974","modified":1657040480482},{"_id":"source/tags/index.md","hash":"a6ac15d249ca2329fac58a56beb81d11a13cf161","modified":1656297079587},{"_id":"source/static/images/img.png","hash":"9e77404ce8100b241befee50b37ef5a8dff5fa35","modified":1661148357340},{"_id":"source/_posts/laravel-route缓存坑.md","hash":"c7bf520615781912375af3bd3456df9231ea8e1e","modified":1657158645828},{"_id":"source/static/images/img_1.png","hash":"1bc5857ffd0d5f2b2a5e9a7045c369bf6bdf4137","modified":1661148465499},{"_id":"source/static/go.jpg","hash":"7a10452b9b929b8eda231bf2f4bfb451323e6d62","modified":1647502493769},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":499162500000},{"_id":"source/static/images/img_2.png","hash":"c3535f2dd2ccbc6da2366c6a86cfc044e6e1b332","modified":1661148386268},{"_id":"source/_posts/laravel多对多关联.md","hash":"a13a4ac4468ea6f2eaeb643af5441fa62784c368","modified":1686656067839},{"_id":"themes/landscape/_config.yml","hash":"18b363ae01aa900807ce473f3a9579fd7657625f","modified":1657469647246},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":499162500000},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":499162500000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":499162500000},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":499162500000},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":499162500000},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":499162500000},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":499162500000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":499162500000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":499162500000},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":499162500000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":499162500000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b438d0bb3376da33ca23492b3f9cc3331cd04d3c","modified":1655914849506},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":499162500000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":499162500000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":499162500000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":499162500000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1655916934660},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":499162500000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":499162500000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"afbd356c599eb1cc420b24ddcd626484368bb6d9","modified":1656342700685},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":499162500000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":499162500000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":499162500000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"7b7d0e74b00716fe9361a82fe5d4799831487817","modified":1656232290429},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":499162500000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":499162500000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1656232554422},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"ce79bc00b92c32f7b3d25ca63e2821c913858643","modified":1656234024883},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":499162500000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":499162500000},{"_id":"themes/landscape/layout/_widget/about.ejs","hash":"8d7dafdea8f488932228af5aa5eafa07b89c57d2","modified":1670331581147},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":499162500000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":499162500000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":499162500000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":499162500000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":499162500000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":499162500000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":499162500000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":499162500000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":499162500000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"39021201cd3d2e7d0c6dea4b629cdde982f338b1","modified":1656294634589},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":499162500000},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":499162500000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":499162500000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"3d070c804fb3b86dc3771cd66825394cd133678a","modified":1656294705463},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":499162500000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":499162500000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":499162500000},{"_id":"themes/landscape/source/css/images/banner2.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":499162500000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"284e28f981c1ec00e44e9879614e4ad8dac4b147","modified":1656294243156},{"_id":"source/static/docker.pdf","hash":"c5d3c84a6873ff1779e8f7ecc7fd0c078efae009","modified":1656229586520},{"_id":"source/static/k8s.pdf","hash":"b277bdcec114e8b0595d311f8bbc3c1f34ecb2c2","modified":1656229572531},{"_id":"public/google0b057d6516ddf64a.html","hash":"d789fe79b17b032330c81c94a832338d31ebfabe","modified":1661255280477},{"_id":"public/baidusitemap.xml","hash":"4230657902e4fa91453179c972d4dd2fa910b80c","modified":1693971558623},{"_id":"public/search.xml","hash":"f3a68f5e422ead4e0badd1d82145a7de3da2b7e5","modified":1693971558623},{"_id":"public/baidu_verify_code-XMUS2hM8te.html","hash":"ecad4125d6f6cdab4841564a21ddf75aa6222170","modified":1693971558623},{"_id":"public/about/index.html","hash":"e479f5d924677b7dd8b9c1ab89373861ff17eacb","modified":1693971558623},{"_id":"public/categories/index.html","hash":"59b27eb2771004a4268999b8f01ab2ff83830b31","modified":1693971558623},{"_id":"public/openCode/index.html","hash":"05e8cb2a29ce468a72e2a8d54d894c2b3104aca1","modified":1693971558623},{"_id":"public/favorites/index.html","hash":"a1db0fa34cf9cc3e460b7aa440f3496960c4dd72","modified":1693971558623},{"_id":"public/tags/index.html","hash":"41a4e458142cc88c37acd91c84c889c0a5f4f09a","modified":1693971558623},{"_id":"public/2022/08/23/js-replaceAll方法有兼容性问题/index.html","hash":"cb253125ba5747aa69ecb5c58bb171a2b9993659","modified":1693971558623},{"_id":"public/2022/08/22/postMan设置切换本地开发线上环境/index.html","hash":"dc2af4a1feff8bea626fd8773ea398bf6087b309","modified":1693971558623},{"_id":"public/2022/08/17/层次划分/index.html","hash":"7b0ae435b71014358e8c07e790a01a189878a73e","modified":1693971558623},{"_id":"public/2022/07/11/mysql相关知识/index.html","hash":"321dd7ef65773d086f9f52e266af789a58eaf471","modified":1693971558623},{"_id":"public/2022/07/10/go的学习路线/index.html","hash":"6bdb97d6455bd773c392e405ace307bbbc2a71c6","modified":1693971558623},{"_id":"public/2022/07/05/laravel-route缓存坑/index.html","hash":"b47a7b7515fa15d40c4d7fc634d3dc94f83f4e5f","modified":1693971558623},{"_id":"public/2022/07/04/antdPro简单介绍/index.html","hash":"fc0e4df0d5d8d0e4e425d2e0d8d53c5b07a30589","modified":1693971558623},{"_id":"public/2022/07/04/git知识点/index.html","hash":"1cb3af7951d90da7c1300025dda0b5d1b2afca50","modified":1693971558623},{"_id":"public/2022/07/01/回调接口高并发/index.html","hash":"e806c7e09d4690d27b2f94e18a7c59c22b203c3b","modified":1693971558623},{"_id":"public/2022/06/23/go 环境的安装/index.html","hash":"e3d02f386101fb42cfc5c13e41d43a9063592960","modified":1693971558623},{"_id":"public/2022/06/22/博客第一篇文章/index.html","hash":"a934b5559265509b020a7a40b2c3a596a4c5c964","modified":1693971558623},{"_id":"public/archives/index.html","hash":"84f0a86ebcc8be68917ac2b8e4d98a7e309c848c","modified":1693971558623},{"_id":"public/archives/page/2/index.html","hash":"705866da33c1536843e4b132bd89a2bcb22f66b0","modified":1693971558623},{"_id":"public/archives/2022/index.html","hash":"4217251d9837b932da061c89747f305cb96b88b9","modified":1693971558623},{"_id":"public/archives/2022/page/2/index.html","hash":"efb0e126d3311f4685a4e501be335b8e96c789f3","modified":1693971558623},{"_id":"public/archives/2022/06/index.html","hash":"d8bb55fadf9e64df44d466ef105c4dccb388adac","modified":1693971558623},{"_id":"public/archives/2022/07/index.html","hash":"2654839e44277dda63c2320fcd437391e1f75465","modified":1693971558623},{"_id":"public/archives/2022/08/index.html","hash":"47ac10fadee14553dd3ce32dbd4495f23bb92b65","modified":1693971558623},{"_id":"public/page/2/index.html","hash":"7519c4edc78b2d992847df6a04031ffeeca24af8","modified":1693971558623},{"_id":"public/categories/go/index.html","hash":"36abe6cb5cfbf264726a6af11ab5a1597e4ecb5a","modified":1693971558623},{"_id":"public/categories/laravel/index.html","hash":"7acbf9a092160126a534bd648e342941668c8438","modified":1693971558623},{"_id":"public/categories/数据库/index.html","hash":"5537d8b5701e08b8020dbc34a7f3e57a5e5649f7","modified":1693971558623},{"_id":"public/tags/git/index.html","hash":"2254b5ab534b83f50c02e5586cb2887fdf0cac7a","modified":1693971558623},{"_id":"public/tags/go/index.html","hash":"493d11ba79fff1c44c144511a34a999503ad215e","modified":1693971558623},{"_id":"public/tags/laravel/index.html","hash":"a8c6f636b1424a0a1427d68ec6e71f4a82cc43b6","modified":1693971558623},{"_id":"public/tags/js/index.html","hash":"723c37e061d2f3def8f2a8555c26e5f9eb5bb4f3","modified":1693971558623},{"_id":"public/tags/mysql/index.html","hash":"8bd2d1f852b064c158510b334f12b54bab6830be","modified":1693971558623},{"_id":"public/tags/postman-环境变量/index.html","hash":"c041e554d6a4a2a8cbe91b4401b91aaccfbce3d9","modified":1693971558623},{"_id":"public/tags/hexo/index.html","hash":"a17f4352459aa51f733b1ef250c4a481ca06c992","modified":1693971558623},{"_id":"public/tags/php/index.html","hash":"6df441d62bb704964e1f02dd85efdba49245ad46","modified":1693971558623},{"_id":"public/2022/07/22/jetbrains编辑器快捷键/index.html","hash":"9134f8c607ab7136713bf03848bacb3415ef688a","modified":1693971558623},{"_id":"public/2022/07/15/laravel多对多关联/index.html","hash":"a360e4baedd3c90b4515da59f3fd5fd19fc0c184","modified":1693971558623},{"_id":"public/index.html","hash":"7360ef26dcc99aa09fb4105392891c037c00444c","modified":1693971558623},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1661255280477},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1661255280477},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1661255280477},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1661255280477},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1661255280477},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1661255280477},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1661255280477},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1661255280477},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1661255280477},{"_id":"public/css/images/banner.jpg","hash":"284e28f981c1ec00e44e9879614e4ad8dac4b147","modified":1661255280477},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1661255280477},{"_id":"public/CNAME","hash":"8b74f35a2a1907f11ffe0bfd81031d2e33c4d261","modified":1661255280477},{"_id":"public/static/wechat_qr.jpg","hash":"6dc637bddc9ed1e9ce0675f1f7b0c0904be48974","modified":1661255280477},{"_id":"public/static/images/img.png","hash":"9e77404ce8100b241befee50b37ef5a8dff5fa35","modified":1661255280477},{"_id":"public/static/images/img_1.png","hash":"1bc5857ffd0d5f2b2a5e9a7045c369bf6bdf4137","modified":1661255280477},{"_id":"public/static/images/img_2.png","hash":"c3535f2dd2ccbc6da2366c6a86cfc044e6e1b332","modified":1661255280477},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1661255280477},{"_id":"public/static/go.jpg","hash":"7a10452b9b929b8eda231bf2f4bfb451323e6d62","modified":1661255280477},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1661255280477},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1661255280477},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1661255280477},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1661255280477},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1661255280477},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1661255280477},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1661255280477},{"_id":"public/css/style.css","hash":"a0ca458269f1f0bfcb9f81ad2ffcb6afa7e476b0","modified":1661255280477},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1661255280477},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1661255280477},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1661255280477},{"_id":"public/css/images/banner2.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1661255280477},{"_id":"public/static/docker.pdf","hash":"c5d3c84a6873ff1779e8f7ecc7fd0c078efae009","modified":1661255280477},{"_id":"public/static/k8s.pdf","hash":"b277bdcec114e8b0595d311f8bbc3c1f34ecb2c2","modified":1661255280477},{"_id":"source/_posts/go运行的DockerFile文件.md","hash":"34d969cf2241b2cfe6d7e88b350864f618f6bbf6","modified":1686656067824},{"_id":"public/2022/09/07/go运行的DockerFile文件/index.html","hash":"b275116f3775924b524a8bb4a4f5be0032a95afc","modified":1693971558623},{"_id":"public/archives/2022/09/index.html","hash":"560e1bad95df2ba694695d0205c50ff756bda8ef","modified":1693971558623},{"_id":"public/tags/docker/index.html","hash":"61ece28bbb71d040ce4050bbdc401322e224b4e9","modified":1693971558623},{"_id":"public/tags/dockerFile/index.html","hash":"3c1f282c49097d737f3247bf175ccba5e6bca441","modified":1693971558623},{"_id":"source/_posts/计算东西-分类.md","hash":"fc93499502d444ec371f92434a982cfffd86514b","modified":1670403972718},{"_id":"public/2022/09/23/计算东西-分类/index.html","hash":"e518ee7150ebd5ab51aa0289f2a1b81468fd419d","modified":1693971558623},{"_id":"source/_posts/科学上网.md","hash":"cd2c9e63cdf8758e39a4f1dafa5a495d975ae64c","modified":1670403972718},{"_id":"public/2022/09/25/科学上网/index.html","hash":"c9801a906a2bdb1032f710f2c0285c2eec15c836","modified":1693971558623},{"_id":"source/README.md","hash":"9b13ca6b41b0ec160b305341ffe6e21967f5f874","modified":1670381598992},{"_id":"public/README.html","hash":"7ff5652926261b7c1b9608ab6b5a8571124cdde8","modified":1670381698840},{"_id":"source/README","hash":"9b13ca6b41b0ec160b305341ffe6e21967f5f874","modified":1670381598992},{"_id":"public/README","hash":"9b13ca6b41b0ec160b305341ffe6e21967f5f874","modified":1670381776403},{"_id":"source/_posts/goland2021-3破解.md","hash":"0aefb95b6fbd418ad3891b14d8dc54f4819b5bf7","modified":1670899917587},{"_id":"source/static/zhile_agent_po.zip","hash":"2a8caff1a337f4d943a98eb8d7a43e61d74dacfd","modified":1670899694470},{"_id":"public/2022/12/13/goland2021-3破解/index.html","hash":"01e3bd63966814d71fa80e24a74eb407ff50012e","modified":1693971558623},{"_id":"public/archives/2022/12/index.html","hash":"86ea79e5a6af57eafb1c99ddb558df0ed2c8656a","modified":1693971558623},{"_id":"public/tags/goland/index.html","hash":"a5e6b4bef6488464dec4bc19b87d298ab76ef54d","modified":1693971558623},{"_id":"public/static/zhile_agent_po.zip","hash":"2a8caff1a337f4d943a98eb8d7a43e61d74dacfd","modified":1670899935039},{"_id":"source/_posts/apiPost自动获取token.md","hash":"8fdc6515af38acf5d514110137d5e3d9e552f2c1","modified":1686556398989},{"_id":"source/_posts/docker常用命令.md","hash":"b6e582c61972f406d447ddfe5006f21a01e4be90","modified":1686656067807},{"_id":"source/_posts/docker安装mysql8远程访问.md","hash":"53b04dd74bfe70744a581986fd2243b5f6e77036","modified":1686656067824},{"_id":"source/_posts/花生壳内网穿透.md","hash":"56d5cfc83e3139ea95c6eb28705a5c1d2005200a","modified":1693932329774},{"_id":"public/2023/06/12/docker常用命令/index.html","hash":"f047f3ff12a0be9d52cb3d47469056215d64284f","modified":1693971558623},{"_id":"public/2023/06/08/apiPost自动获取token/index.html","hash":"c09b03076cc870d894e6cabee56a5ee37f8beb4e","modified":1693971558623},{"_id":"public/2023/06/08/docker安装mysql8远程访问/index.html","hash":"50ebb8f1e9384c2de3d8eccf514f8ce4adfd8019","modified":1693971558623},{"_id":"public/2023/06/08/花生壳内网穿透/index.html","hash":"211bd4595202b54c7b038bee5a1c25bf9814aad8","modified":1693971558623},{"_id":"public/archives/page/3/index.html","hash":"c783bb9b0409b1a4ab42b027694a8a30bb051392","modified":1693971558623},{"_id":"public/archives/2023/index.html","hash":"cc16424ce55b8842b6a151ac92a2cd4387dadb77","modified":1693971558623},{"_id":"public/archives/2023/06/index.html","hash":"666f72b73631a1bdd20d13e74e797112142b3fd2","modified":1693971558623},{"_id":"public/page/3/index.html","hash":"bec952e4d39a8074e8483f8c7fb9a4e328d1dca1","modified":1693971558623},{"_id":"public/tags/容器/index.html","hash":"770f9028229853ceaac6046f5f3d3fc58cc60863","modified":1693971558623},{"_id":"public/tags/apiPost/index.html","hash":"e0e3d707ddddfb2f76a0cee8a197ac1c15bcda99","modified":1693971558623},{"_id":"public/tags/花生壳/index.html","hash":"efa722dad9d9e85341fb4c6ddbcc8466e0f1ee81","modified":1693971558623},{"_id":"public/tags/内网穿透/index.html","hash":"72a69afefb8ca3ddb0b1bde1cbf05a2414b8f0f9","modified":1693971558623},{"_id":"public/tags/mysql8/index.html","hash":"0cca43989c50451f89b64c800a62345af4520c54","modified":1693971558623},{"_id":"source/_posts/docker安装RabbitMQ.md","hash":"e01d2cd4c9cd9517acca0581e11a9291addfbeed","modified":1686657013667},{"_id":"public/2023/06/13/docker安装RabbitMQ/index.html","hash":"718acfd3e61a8ace02bed50384f38de8eb7ee8a8","modified":1693971558623},{"_id":"public/categories/RabbitMQ/index.html","hash":"c75fa84c0da62b5778693fa77202a896451e05af","modified":1693971558623},{"_id":"public/categories/docker/index.html","hash":"54906f536d21c556ac4e53088c0f22544b94ac23","modified":1693971558623},{"_id":"public/categories/git/index.html","hash":"66e5b21c3f3d1b6adee7eb30d109960b1fecba70","modified":1693971558623},{"_id":"public/tags/RabbitMQ/index.html","hash":"8aa0f42f1e091a084499c71b1090eda8718e10b7","modified":1693971558623},{"_id":"source/Dockerfile","hash":"179510906346f0578a6753d71185bfa69b3f62cd","modified":1687745570223},{"_id":"source/nginx.conf","hash":"164caf57bdec18f7f326752855968f0a604eff57","modified":1670557796062},{"_id":"source/_posts/坚持学习.md","hash":"84bc7636b4c6ac64694722324d1f16bd48233e83","modified":1687169177877},{"_id":"public/2023/06/19/坚持学习/index.html","hash":"7c8e382b963919d12ea3f15e60061085f73a8979","modified":1693971558623},{"_id":"public/nginx.conf","hash":"164caf57bdec18f7f326752855968f0a604eff57","modified":1687745591381},{"_id":"public/Dockerfile","hash":"179510906346f0578a6753d71185bfa69b3f62cd","modified":1687745591381},{"_id":"source/_posts/阿里云云解析DNSapi.md","hash":"e4c7dcf76eb7b32ac16824ea292d3905d04fdf27","modified":1689651561920},{"_id":"public/2023/07/18/阿里云云解析DNSapi/index.html","hash":"dcc0ccff8303f9bdf96de183dcd411aae3f28344","modified":1693971558623},{"_id":"public/archives/2023/07/index.html","hash":"ca68e0b9d0cd675ef9a5a3b26e4b8f88dfb51b6b","modified":1693971558623},{"_id":"source/_posts/Ubuntu安装docker.md","hash":"2b5e3f63e6e361e399d712f9c3b293a8ea6ae211","modified":1693846211866},{"_id":"source/_posts/docker阿里云镜像加速.md","hash":"8f10f61cf226294f0c39b7369a68dac84d83a2ec","modified":1693933590362},{"_id":"source/_posts/分类-标签.md","hash":"abcf8bc71461ee96ac8d3b2e894a8d2bb235685e","modified":1693846626599},{"_id":"source/_posts/linux常用命令.md","hash":"2fa494285be88bc3a144b49fc8e1ab277d415321","modified":1693934020167},{"_id":"source/_posts/【Ubuntu-22-04-LTS】设置笔记本合并盖子不休眠.md","hash":"9947f58dab9ac6021fd9d668266bc1b333ae9b26","modified":1693846164113},{"_id":"public/2023/09/06/linux常用命令/index.html","hash":"90c60bdfa9a0c6a90771a3d49622b52f3c270148","modified":1693971558623},{"_id":"public/2023/09/06/docker阿里云镜像加速/index.html","hash":"27bbced1027ef184fc8698b5f3f73420bd1ccc9d","modified":1693971558623},{"_id":"public/2023/09/05/分类-标签/index.html","hash":"a7443d0fccd03900a7eefc63b77b87d78e29229c","modified":1693971558623},{"_id":"public/2023/09/05/【Ubuntu-22-04-LTS】设置笔记本合并盖子不休眠/index.html","hash":"5a5ab6caf989fff1ae3886db822c594f3f9a8d55","modified":1693971558623},{"_id":"public/2023/09/05/Ubuntu安装docker/index.html","hash":"7224c83665d0805aa3c29acfb9f9900174664775","modified":1693971558623},{"_id":"public/categories/运维/index.html","hash":"3a080dd9753f98b5de090034c5db8b3fb81fe160","modified":1693971558623},{"_id":"public/archives/2023/page/2/index.html","hash":"78629ff646b4c0b07f154ee27da976ac1ca55294","modified":1693971558623},{"_id":"public/archives/2023/09/index.html","hash":"92098409e46715ea48f94d513612216867432e06","modified":1693971558623},{"_id":"public/tags/ubuntu/index.html","hash":"303f2886168dd9a2760a97c7e4bb013b50c045bd","modified":1693971558623}],"Category":[{"name":"go","_id":"cl764i3n10009jww58b5qhhq6"},{"name":"laravel","_id":"cl764i3nf000njww5fswa3pea"},{"name":"数据库","_id":"cl764i3ni000rjww5g3gw6hi0"},{"name":"RabbitMQ","_id":"cliu81n7x0001ygv1hfuabbo7"},{"name":"docker","_id":"cliu81n8a0006ygv16rp8awwq"},{"name":"git","_id":"cliu81n8h0009ygv1e5pwg9bf"},{"name":"运维","_id":"clm76xgn50003bwv19l14d1oh"}],"Data":[],"Page":[{"_content":"d69f94fd4ddcb48ea5916af7ad747199","source":"baidu_verify_code-XMUS2hM8te.html","raw":"d69f94fd4ddcb48ea5916af7ad747199","date":"2022-08-18T09:49:12.406Z","updated":"2022-08-18T09:49:12.406Z","path":"baidu_verify_code-XMUS2hM8te.html","title":"","comments":1,"layout":"page","_id":"cl764i3md0000jww56wj68ze3","content":"d69f94fd4ddcb48ea5916af7ad747199","site":{"data":{}},"excerpt":"","more":"d69f94fd4ddcb48ea5916af7ad747199"},{"title":"作者","_content":"姓名:庞学军\n性别:男\n手机(微信同号):13124929171\n邮箱:570580380@qq.com\n故乡:广东湛江\n学校:广州大学华软软件学院(现:广州软件学院)\n专业: 网络工程\n博客:(https://pangxuejun.cn)\ngithub:(https://github.com/Longjunzhi)\n<span style=\"\">微信:</span>\n\n---\n<div style=\"display: inline-block\">\n<img src=\"https://pangxuejun.cn/static/wechat_qr.jpg\" width=\"30%\" style=\"float: left\">\n</div>\n\n### 仓库\n---\n后台管理: (https://pangxuejun.cn)\n\n### 个人简介:\n热爱工作,工作认真负责,有较强的责任心,有良好的沟通能力.计算机体系知识整体都有了解,热爱计算机.\n### 个人技能:\n\n* 力扣算法 (题解20,提交数106)\n* php (熟练laravel框架,一年的项目经验,有队列使用经验)\n* go (熟练,使用gin和gorm搭建项目,三个月的项目经验)\n* docker (容器技术,搭建php,nginx项目及jenkins和confluence知识库,go的docker环境)\n* linux系统 (熟悉使用过ubuntu,centos系统搭建服务器及开发环境)\n* git (熟悉应用于工作)\n* vue (使用vue-admin搭建后台)\n* react (使用antd pro 搭建公司的后台)\n* java (学习过相关的语法,编程思想设计模式,没有项目经验)\n* node (使用express框架,搭建项目的api,很久没有使用过.不太熟悉)\n\n\n### 工作经历\n现在职:广州千知网络科技有限公司\n\n2022.4 ~ 至今\n\n项目：\n1.负责crm后台系统的api开发\n2.负责部分crm后台前端antDesign开发\n3.对接第三方接口开发\n4.教学系统的设计、开发\n5.维护测试服务器nginx、mysql\n6.容器的部署\n\n\n广州蜜影信息科技有限公司\n\n2021.7 ~ 2022.3\n\n项目:\n1. 超级意见箱小程序后端 php+laravel\n2. 超级意见箱后台管理系统前端Vue-admin\n3. 超级意见箱APP接口 Go+gin+gorm\n内容:\n负责微信小程序的API,使用PHP和Laravel框架作为API接口.以及钉钉小程序接口对接.官网接口对接.熟悉掌握Laravel框架内容,熟悉Model层.\n后端使用Docker部署\nGO语言重构项目,使用GIN框架和gorm的ORM.\n","source":"about/index.md","raw":"---\ntitle: 作者\n---\n姓名:庞学军\n性别:男\n手机(微信同号):13124929171\n邮箱:570580380@qq.com\n故乡:广东湛江\n学校:广州大学华软软件学院(现:广州软件学院)\n专业: 网络工程\n博客:(https://pangxuejun.cn)\ngithub:(https://github.com/Longjunzhi)\n<span style=\"\">微信:</span>\n\n---\n<div style=\"display: inline-block\">\n<img src=\"https://pangxuejun.cn/static/wechat_qr.jpg\" width=\"30%\" style=\"float: left\">\n</div>\n\n### 仓库\n---\n后台管理: (https://pangxuejun.cn)\n\n### 个人简介:\n热爱工作,工作认真负责,有较强的责任心,有良好的沟通能力.计算机体系知识整体都有了解,热爱计算机.\n### 个人技能:\n\n* 力扣算法 (题解20,提交数106)\n* php (熟练laravel框架,一年的项目经验,有队列使用经验)\n* go (熟练,使用gin和gorm搭建项目,三个月的项目经验)\n* docker (容器技术,搭建php,nginx项目及jenkins和confluence知识库,go的docker环境)\n* linux系统 (熟悉使用过ubuntu,centos系统搭建服务器及开发环境)\n* git (熟悉应用于工作)\n* vue (使用vue-admin搭建后台)\n* react (使用antd pro 搭建公司的后台)\n* java (学习过相关的语法,编程思想设计模式,没有项目经验)\n* node (使用express框架,搭建项目的api,很久没有使用过.不太熟悉)\n\n\n### 工作经历\n现在职:广州千知网络科技有限公司\n\n2022.4 ~ 至今\n\n项目：\n1.负责crm后台系统的api开发\n2.负责部分crm后台前端antDesign开发\n3.对接第三方接口开发\n4.教学系统的设计、开发\n5.维护测试服务器nginx、mysql\n6.容器的部署\n\n\n广州蜜影信息科技有限公司\n\n2021.7 ~ 2022.3\n\n项目:\n1. 超级意见箱小程序后端 php+laravel\n2. 超级意见箱后台管理系统前端Vue-admin\n3. 超级意见箱APP接口 Go+gin+gorm\n内容:\n负责微信小程序的API,使用PHP和Laravel框架作为API接口.以及钉钉小程序接口对接.官网接口对接.熟悉掌握Laravel框架内容,熟悉Model层.\n后端使用Docker部署\nGO语言重构项目,使用GIN框架和gorm的ORM.\n","date":"2023-07-17T01:46:08.664Z","updated":"2023-07-17T01:46:08.664Z","path":"about/index.html","_id":"cl764i3mr0002jww536yfbhls","comments":1,"layout":"page","content":"<p>姓名:庞学军<br>性别:男<br>手机(微信同号):13124929171<br>邮箱:<a href=\"mailto:&#x35;&#x37;&#x30;&#53;&#x38;&#48;&#x33;&#x38;&#x30;&#x40;&#113;&#x71;&#46;&#99;&#111;&#x6d;\">&#x35;&#x37;&#x30;&#53;&#x38;&#48;&#x33;&#x38;&#x30;&#x40;&#113;&#x71;&#46;&#99;&#111;&#x6d;</a><br>故乡:广东湛江<br>学校:广州大学华软软件学院(现:广州软件学院)<br>专业: 网络工程<br>博客:(<a href=\"https://pangxuejun.cn/\">https://pangxuejun.cn</a>)<br>github:(<a href=\"https://github.com/Longjunzhi\">https://github.com/Longjunzhi</a>)<br><span style=\"\">微信:</span></p>\n<hr>\n<div style=\"display: inline-block\">\n<img src=\"https://pangxuejun.cn/static/wechat_qr.jpg\" width=\"30%\" style=\"float: left\">\n</div>\n\n<h3 id=\"仓库\"><a href=\"#仓库\" class=\"headerlink\" title=\"仓库\"></a>仓库</h3><hr>\n<p>后台管理: (<a href=\"https://pangxuejun.cn/\">https://pangxuejun.cn</a>)</p>\n<h3 id=\"个人简介\"><a href=\"#个人简介\" class=\"headerlink\" title=\"个人简介:\"></a>个人简介:</h3><p>热爱工作,工作认真负责,有较强的责任心,有良好的沟通能力.计算机体系知识整体都有了解,热爱计算机.</p>\n<h3 id=\"个人技能\"><a href=\"#个人技能\" class=\"headerlink\" title=\"个人技能:\"></a>个人技能:</h3><ul>\n<li>力扣算法 (题解20,提交数106)</li>\n<li>php (熟练laravel框架,一年的项目经验,有队列使用经验)</li>\n<li>go (熟练,使用gin和gorm搭建项目,三个月的项目经验)</li>\n<li>docker (容器技术,搭建php,nginx项目及jenkins和confluence知识库,go的docker环境)</li>\n<li>linux系统 (熟悉使用过ubuntu,centos系统搭建服务器及开发环境)</li>\n<li>git (熟悉应用于工作)</li>\n<li>vue (使用vue-admin搭建后台)</li>\n<li>react (使用antd pro 搭建公司的后台)</li>\n<li>java (学习过相关的语法,编程思想设计模式,没有项目经验)</li>\n<li>node (使用express框架,搭建项目的api,很久没有使用过.不太熟悉)</li>\n</ul>\n<h3 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h3><p>现在职:广州千知网络科技有限公司</p>\n<p>2022.4 ~ 至今</p>\n<p>项目：<br>1.负责crm后台系统的api开发<br>2.负责部分crm后台前端antDesign开发<br>3.对接第三方接口开发<br>4.教学系统的设计、开发<br>5.维护测试服务器nginx、mysql<br>6.容器的部署</p>\n<p>广州蜜影信息科技有限公司</p>\n<p>2021.7 ~ 2022.3</p>\n<p>项目:</p>\n<ol>\n<li>超级意见箱小程序后端 php+laravel</li>\n<li>超级意见箱后台管理系统前端Vue-admin</li>\n<li>超级意见箱APP接口 Go+gin+gorm<br>内容:<br>负责微信小程序的API,使用PHP和Laravel框架作为API接口.以及钉钉小程序接口对接.官网接口对接.熟悉掌握Laravel框架内容,熟悉Model层.<br>后端使用Docker部署<br>GO语言重构项目,使用GIN框架和gorm的ORM.</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>姓名:庞学军<br>性别:男<br>手机(微信同号):13124929171<br>邮箱:<a href=\"mailto:&#x35;&#x37;&#x30;&#53;&#x38;&#48;&#x33;&#x38;&#x30;&#x40;&#113;&#x71;&#46;&#99;&#111;&#x6d;\">&#x35;&#x37;&#x30;&#53;&#x38;&#48;&#x33;&#x38;&#x30;&#x40;&#113;&#x71;&#46;&#99;&#111;&#x6d;</a><br>故乡:广东湛江<br>学校:广州大学华软软件学院(现:广州软件学院)<br>专业: 网络工程<br>博客:(<a href=\"https://pangxuejun.cn/\">https://pangxuejun.cn</a>)<br>github:(<a href=\"https://github.com/Longjunzhi\">https://github.com/Longjunzhi</a>)<br><span style=\"\">微信:</span></p>\n<hr>\n<div style=\"display: inline-block\">\n<img src=\"https://pangxuejun.cn/static/wechat_qr.jpg\" width=\"30%\" style=\"float: left\">\n</div>\n\n<h3 id=\"仓库\"><a href=\"#仓库\" class=\"headerlink\" title=\"仓库\"></a>仓库</h3><hr>\n<p>后台管理: (<a href=\"https://pangxuejun.cn/\">https://pangxuejun.cn</a>)</p>\n<h3 id=\"个人简介\"><a href=\"#个人简介\" class=\"headerlink\" title=\"个人简介:\"></a>个人简介:</h3><p>热爱工作,工作认真负责,有较强的责任心,有良好的沟通能力.计算机体系知识整体都有了解,热爱计算机.</p>\n<h3 id=\"个人技能\"><a href=\"#个人技能\" class=\"headerlink\" title=\"个人技能:\"></a>个人技能:</h3><ul>\n<li>力扣算法 (题解20,提交数106)</li>\n<li>php (熟练laravel框架,一年的项目经验,有队列使用经验)</li>\n<li>go (熟练,使用gin和gorm搭建项目,三个月的项目经验)</li>\n<li>docker (容器技术,搭建php,nginx项目及jenkins和confluence知识库,go的docker环境)</li>\n<li>linux系统 (熟悉使用过ubuntu,centos系统搭建服务器及开发环境)</li>\n<li>git (熟悉应用于工作)</li>\n<li>vue (使用vue-admin搭建后台)</li>\n<li>react (使用antd pro 搭建公司的后台)</li>\n<li>java (学习过相关的语法,编程思想设计模式,没有项目经验)</li>\n<li>node (使用express框架,搭建项目的api,很久没有使用过.不太熟悉)</li>\n</ul>\n<h3 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h3><p>现在职:广州千知网络科技有限公司</p>\n<p>2022.4 ~ 至今</p>\n<p>项目：<br>1.负责crm后台系统的api开发<br>2.负责部分crm后台前端antDesign开发<br>3.对接第三方接口开发<br>4.教学系统的设计、开发<br>5.维护测试服务器nginx、mysql<br>6.容器的部署</p>\n<p>广州蜜影信息科技有限公司</p>\n<p>2021.7 ~ 2022.3</p>\n<p>项目:</p>\n<ol>\n<li>超级意见箱小程序后端 php+laravel</li>\n<li>超级意见箱后台管理系统前端Vue-admin</li>\n<li>超级意见箱APP接口 Go+gin+gorm<br>内容:<br>负责微信小程序的API,使用PHP和Laravel框架作为API接口.以及钉钉小程序接口对接.官网接口对接.熟悉掌握Laravel框架内容,熟悉Model层.<br>后端使用Docker部署<br>GO语言重构项目,使用GIN框架和gorm的ORM.</li>\n</ol>\n"},{"layout":"false","_content":"google-site-verification: google0b057d6516ddf64a.html","source":"google0b057d6516ddf64a.html","raw":"---\nlayout: false\n---\ngoogle-site-verification: google0b057d6516ddf64a.html","date":"2022-12-06T12:59:41.111Z","updated":"2022-12-06T12:59:41.111Z","path":"google0b057d6516ddf64a.html","_id":"cl764i3mu0004jww55vr18323","title":"","comments":1,"content":"google-site-verification: google0b057d6516ddf64a.html","site":{"data":{}},"excerpt":"","more":"google-site-verification: google0b057d6516ddf64a.html"},{"title":"categories","date":"2022-06-22T16:10:42.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-06-23 00:10:42\ntype: \"categories\"\n---","updated":"2022-06-27T02:31:19.564Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl764i3mz0007jww5ftmk32e0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"开源仓库","date":"2022-07-10T16:07:10.000Z","_content":"\n### 博主的开源仓库\n\n* [go+gin+gorm选课系统](https://github.com/Longjunzhi/courseSystem)\n---\n技术栈\ngo+gin+gorm\ndocker+k8s\ngrpc+rabbitMQ\n\n* [antDesign选课系统](https://github.com/Longjunzhi/courseSystemWWW)\n---\n  技术栈\n  react+antd pro\n\n* [go开发的基础语法代码和设计模式的实现代码](https://github.com/Longjunzhi/goDev)\n---\n技术栈\n学习go的基础代码、框架和设计模式代码等\n\n","source":"openCode/index.md","raw":"---\ntitle: 开源仓库\ndate: 2022-07-11 00:07:10\n---\n\n### 博主的开源仓库\n\n* [go+gin+gorm选课系统](https://github.com/Longjunzhi/courseSystem)\n---\n技术栈\ngo+gin+gorm\ndocker+k8s\ngrpc+rabbitMQ\n\n* [antDesign选课系统](https://github.com/Longjunzhi/courseSystemWWW)\n---\n  技术栈\n  react+antd pro\n\n* [go开发的基础语法代码和设计模式的实现代码](https://github.com/Longjunzhi/goDev)\n---\n技术栈\n学习go的基础代码、框架和设计模式代码等\n\n","updated":"2022-08-22T03:49:43.378Z","path":"openCode/index.html","comments":1,"layout":"page","_id":"cl764i3n2000ajww5ga1035e0","content":"<h3 id=\"博主的开源仓库\"><a href=\"#博主的开源仓库\" class=\"headerlink\" title=\"博主的开源仓库\"></a>博主的开源仓库</h3><ul>\n<li><a href=\"https://github.com/Longjunzhi/courseSystem\">go+gin+gorm选课系统</a></li>\n</ul>\n<hr>\n<p>技术栈<br>go+gin+gorm<br>docker+k8s<br>grpc+rabbitMQ</p>\n<ul>\n<li><a href=\"https://github.com/Longjunzhi/courseSystemWWW\">antDesign选课系统</a></li>\n</ul>\n<hr>\n<p>  技术栈<br>  react+antd pro</p>\n<ul>\n<li><a href=\"https://github.com/Longjunzhi/goDev\">go开发的基础语法代码和设计模式的实现代码</a></li>\n</ul>\n<hr>\n<p>技术栈<br>学习go的基础代码、框架和设计模式代码等</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"博主的开源仓库\"><a href=\"#博主的开源仓库\" class=\"headerlink\" title=\"博主的开源仓库\"></a>博主的开源仓库</h3><ul>\n<li><a href=\"https://github.com/Longjunzhi/courseSystem\">go+gin+gorm选课系统</a></li>\n</ul>\n<hr>\n<p>技术栈<br>go+gin+gorm<br>docker+k8s<br>grpc+rabbitMQ</p>\n<ul>\n<li><a href=\"https://github.com/Longjunzhi/courseSystemWWW\">antDesign选课系统</a></li>\n</ul>\n<hr>\n<p>  技术栈<br>  react+antd pro</p>\n<ul>\n<li><a href=\"https://github.com/Longjunzhi/goDev\">go开发的基础语法代码和设计模式的实现代码</a></li>\n</ul>\n<hr>\n<p>技术栈<br>学习go的基础代码、框架和设计模式代码等</p>\n"},{"title":"favorites","date":"2022-07-08T11:17:02.000Z","_content":"\n### 私人收藏书签\n\n|   工作    |  |\n| ----------- | ----------- |\n|[uat-crm](https://uat-crm.qzyyds.com/)|[crm](https://crm.qzyyds.com/)|\n|[TAPD看板](https://www.tapd.cn/my_dashboard)|[TAPD工作项目文档](https://www.tapd.cn/48570041/markdown_wikis/show/#1148570041001000033)|\n|[tapd需求](https://www.tapd.cn/48570041/prong/stories/stories_list)|[探鲸文档](http://docs.op.opsdns.cc:8081/note/)|\n|[测试商家后台](http://merchant.manage.opsdns.cc:8081)|[正式商家后台](http://merchant-manage.tanjingpaas.com:8081)|\n|[gitlab](https://gitlab.com/)|[原型图](https://axhub.im/ax9/0b91ef6f07ca07a0/#g=1&id=95k0oz&p=%E5%AD%A6%E5%91%98%E5%88%97%E8%A1%A8)|\n|[蓝湖UI图](https://lanhuapp.com/web/#/item?tid=7bc6a146-1f06-459f-907c-46650fd250d0&fid=all)|[阿里云RAM](https://signin.aliyun.com/1172332297421385.onaliyun.com/login.htm?accounttraceid=9134cee91b1349ff814cc7577f48c976dpqv&cspNonce=UY7LJndJHU&spma=a2c44&spmb=11131515#/main)|\n|[微信公众平台](https://mp.weixin.qq.com/)|[百度翻译](https://fanyi.baidu.com/)|\n|[需求表](https://bzm5yprwaq.feishu.cn/base/bascnkuieHD1QeHGieq5v6Mrzgg?table=tbll7EOKizxq8Qk6&view=vewuBn4pQg)|[技术方案](https://bzm5yprwaq.feishu.cn/wiki/wikcn1CEdxkuhmNRdBIFmaM32gc)|\n|[bing](https://www.bing.com/)|[codeup](https://codeup.aliyun.com/61f10dca73741507cb7cf6ec/qzyyds)|\n|[钉钉知识库](https://alidocs.dingtalk.com/i/nodes/7dx2rn0JbAOr0daGs1rk3y67VMGjLRb3)|[json](https://www.json.cn/)|\n|[vultr](https://www.vultr.com/)|[uat-referer](https://uat-api.qzyyds.com/admin/websites/referer)|\n\n|   文档    |  |\n| ----------- | ----------- |\n| [learnKuLaravel文档](https://learnku.com/docs/laravel/8.x)| [Laravel学院文档](https://laravelacademy.org/books/laravel-docs-8)|\n| [react中文文档](https://react.docschina.org/docs/getting-started.html)|[企业微信开发者文档](https://developer.work.weixin.qq.com/document/path/90664)|\n| [antdPro官网](https://pro.ant.design/)|[antdPro组件](https://procomponents.ant.design/components/)|\n| [VUE3文档](https://v3.cn.vuejs.org/guide/installation.html) |[git官方中文文档](https://git-scm.com/book/zh/v2)\n|[markdown官网文档](https://markdown.com.cn/)|[golang中文文档](https://studygolang.com/pkgdoc)|\n|[Gorm文档](https://gorm.io/zh_CN/docs/)|[微信官方文档](https://developers.weixin.qq.com/miniprogram/dev/framework/)|\n|[GO设计模式](https://www.topgoer.cn/docs/golang-design-pattern/golang-design-pattern-1cbgha2ltg796)|[goDev](https://go.dev/)|\n\n|   资源    |  |\n| ----------- | ----------- |\n|[阿里云大学](https://developer.aliyun.com/course/explore?spm=a2c6h.17661847.0.0.16676fb289Qirw&tags=,,,)|[阿里巴巴开源镜像站](https://developer.aliyun.com/mirror/?spm=a2c6h.12883283.1362934.3.5ddd201c9PSndh)|\n|[gitee](https://gitee.com/)|[github](https://github.com/)|\n|[力扣](https://leetcode.cn/leetbook/)|[go学习资源](https://www.topgoer.com/)|\n|[谷歌](https://www.google.com/)|[脸书](https://www.facebook.com/)|\n|[php包](https://packagist.org//)|[掘金](https://juejin.cn/)|\n\n\n面试题\n\n[go面试题](https://zhuanlan.zhihu.com/p/471490292)\n[php面试题](https://zhuanlan.zhihu.com/p/385093242)\n\n电子书\n\n[kubernetes](https://pangxuejun.cn/static/k8s.pdf)\n[docker](https://pangxuejun.cn/static/docker.pdf)\n","source":"favorites/index.md","raw":"---\ntitle: favorites\ndate: 2022-07-08 19:17:02\n---\n\n### 私人收藏书签\n\n|   工作    |  |\n| ----------- | ----------- |\n|[uat-crm](https://uat-crm.qzyyds.com/)|[crm](https://crm.qzyyds.com/)|\n|[TAPD看板](https://www.tapd.cn/my_dashboard)|[TAPD工作项目文档](https://www.tapd.cn/48570041/markdown_wikis/show/#1148570041001000033)|\n|[tapd需求](https://www.tapd.cn/48570041/prong/stories/stories_list)|[探鲸文档](http://docs.op.opsdns.cc:8081/note/)|\n|[测试商家后台](http://merchant.manage.opsdns.cc:8081)|[正式商家后台](http://merchant-manage.tanjingpaas.com:8081)|\n|[gitlab](https://gitlab.com/)|[原型图](https://axhub.im/ax9/0b91ef6f07ca07a0/#g=1&id=95k0oz&p=%E5%AD%A6%E5%91%98%E5%88%97%E8%A1%A8)|\n|[蓝湖UI图](https://lanhuapp.com/web/#/item?tid=7bc6a146-1f06-459f-907c-46650fd250d0&fid=all)|[阿里云RAM](https://signin.aliyun.com/1172332297421385.onaliyun.com/login.htm?accounttraceid=9134cee91b1349ff814cc7577f48c976dpqv&cspNonce=UY7LJndJHU&spma=a2c44&spmb=11131515#/main)|\n|[微信公众平台](https://mp.weixin.qq.com/)|[百度翻译](https://fanyi.baidu.com/)|\n|[需求表](https://bzm5yprwaq.feishu.cn/base/bascnkuieHD1QeHGieq5v6Mrzgg?table=tbll7EOKizxq8Qk6&view=vewuBn4pQg)|[技术方案](https://bzm5yprwaq.feishu.cn/wiki/wikcn1CEdxkuhmNRdBIFmaM32gc)|\n|[bing](https://www.bing.com/)|[codeup](https://codeup.aliyun.com/61f10dca73741507cb7cf6ec/qzyyds)|\n|[钉钉知识库](https://alidocs.dingtalk.com/i/nodes/7dx2rn0JbAOr0daGs1rk3y67VMGjLRb3)|[json](https://www.json.cn/)|\n|[vultr](https://www.vultr.com/)|[uat-referer](https://uat-api.qzyyds.com/admin/websites/referer)|\n\n|   文档    |  |\n| ----------- | ----------- |\n| [learnKuLaravel文档](https://learnku.com/docs/laravel/8.x)| [Laravel学院文档](https://laravelacademy.org/books/laravel-docs-8)|\n| [react中文文档](https://react.docschina.org/docs/getting-started.html)|[企业微信开发者文档](https://developer.work.weixin.qq.com/document/path/90664)|\n| [antdPro官网](https://pro.ant.design/)|[antdPro组件](https://procomponents.ant.design/components/)|\n| [VUE3文档](https://v3.cn.vuejs.org/guide/installation.html) |[git官方中文文档](https://git-scm.com/book/zh/v2)\n|[markdown官网文档](https://markdown.com.cn/)|[golang中文文档](https://studygolang.com/pkgdoc)|\n|[Gorm文档](https://gorm.io/zh_CN/docs/)|[微信官方文档](https://developers.weixin.qq.com/miniprogram/dev/framework/)|\n|[GO设计模式](https://www.topgoer.cn/docs/golang-design-pattern/golang-design-pattern-1cbgha2ltg796)|[goDev](https://go.dev/)|\n\n|   资源    |  |\n| ----------- | ----------- |\n|[阿里云大学](https://developer.aliyun.com/course/explore?spm=a2c6h.17661847.0.0.16676fb289Qirw&tags=,,,)|[阿里巴巴开源镜像站](https://developer.aliyun.com/mirror/?spm=a2c6h.12883283.1362934.3.5ddd201c9PSndh)|\n|[gitee](https://gitee.com/)|[github](https://github.com/)|\n|[力扣](https://leetcode.cn/leetbook/)|[go学习资源](https://www.topgoer.com/)|\n|[谷歌](https://www.google.com/)|[脸书](https://www.facebook.com/)|\n|[php包](https://packagist.org//)|[掘金](https://juejin.cn/)|\n\n\n面试题\n\n[go面试题](https://zhuanlan.zhihu.com/p/471490292)\n[php面试题](https://zhuanlan.zhihu.com/p/385093242)\n\n电子书\n\n[kubernetes](https://pangxuejun.cn/static/k8s.pdf)\n[docker](https://pangxuejun.cn/static/docker.pdf)\n","updated":"2023-07-07T10:59:10.584Z","path":"favorites/index.html","_id":"cl764i3n5000cjww50c0k5kpn","comments":1,"layout":"page","content":"<h3 id=\"私人收藏书签\"><a href=\"#私人收藏书签\" class=\"headerlink\" title=\"私人收藏书签\"></a>私人收藏书签</h3><table>\n<thead>\n<tr>\n<th>工作</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://uat-crm.qzyyds.com/\">uat-crm</a></td>\n<td><a href=\"https://crm.qzyyds.com/\">crm</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.tapd.cn/my_dashboard\">TAPD看板</a></td>\n<td><a href=\"https://www.tapd.cn/48570041/markdown_wikis/show/#1148570041001000033\">TAPD工作项目文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.tapd.cn/48570041/prong/stories/stories_list\">tapd需求</a></td>\n<td><a href=\"http://docs.op.opsdns.cc:8081/note/\">探鲸文档</a></td>\n</tr>\n<tr>\n<td><a href=\"http://merchant.manage.opsdns.cc:8081/\">测试商家后台</a></td>\n<td><a href=\"http://merchant-manage.tanjingpaas.com:8081/\">正式商家后台</a></td>\n</tr>\n<tr>\n<td><a href=\"https://gitlab.com/\">gitlab</a></td>\n<td><a href=\"https://axhub.im/ax9/0b91ef6f07ca07a0/#g=1&id=95k0oz&p=%E5%AD%A6%E5%91%98%E5%88%97%E8%A1%A8\">原型图</a></td>\n</tr>\n<tr>\n<td><a href=\"https://lanhuapp.com/web/#/item?tid=7bc6a146-1f06-459f-907c-46650fd250d0&fid=all\">蓝湖UI图</a></td>\n<td><a href=\"https://signin.aliyun.com/1172332297421385.onaliyun.com/login.htm?accounttraceid=9134cee91b1349ff814cc7577f48c976dpqv&cspNonce=UY7LJndJHU&spma=a2c44&spmb=11131515#/main\">阿里云RAM</a></td>\n</tr>\n<tr>\n<td><a href=\"https://mp.weixin.qq.com/\">微信公众平台</a></td>\n<td><a href=\"https://fanyi.baidu.com/\">百度翻译</a></td>\n</tr>\n<tr>\n<td><a href=\"https://bzm5yprwaq.feishu.cn/base/bascnkuieHD1QeHGieq5v6Mrzgg?table=tbll7EOKizxq8Qk6&view=vewuBn4pQg\">需求表</a></td>\n<td><a href=\"https://bzm5yprwaq.feishu.cn/wiki/wikcn1CEdxkuhmNRdBIFmaM32gc\">技术方案</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.bing.com/\">bing</a></td>\n<td><a href=\"https://codeup.aliyun.com/61f10dca73741507cb7cf6ec/qzyyds\">codeup</a></td>\n</tr>\n<tr>\n<td><a href=\"https://alidocs.dingtalk.com/i/nodes/7dx2rn0JbAOr0daGs1rk3y67VMGjLRb3\">钉钉知识库</a></td>\n<td><a href=\"https://www.json.cn/\">json</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.vultr.com/\">vultr</a></td>\n<td><a href=\"https://uat-api.qzyyds.com/admin/websites/referer\">uat-referer</a></td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>文档</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://learnku.com/docs/laravel/8.x\">learnKuLaravel文档</a></td>\n<td><a href=\"https://laravelacademy.org/books/laravel-docs-8\">Laravel学院文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://react.docschina.org/docs/getting-started.html\">react中文文档</a></td>\n<td><a href=\"https://developer.work.weixin.qq.com/document/path/90664\">企业微信开发者文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://pro.ant.design/\">antdPro官网</a></td>\n<td><a href=\"https://procomponents.ant.design/components/\">antdPro组件</a></td>\n</tr>\n<tr>\n<td><a href=\"https://v3.cn.vuejs.org/guide/installation.html\">VUE3文档</a></td>\n<td><a href=\"https://git-scm.com/book/zh/v2\">git官方中文文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://markdown.com.cn/\">markdown官网文档</a></td>\n<td><a href=\"https://studygolang.com/pkgdoc\">golang中文文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://gorm.io/zh_CN/docs/\">Gorm文档</a></td>\n<td><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/\">微信官方文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.topgoer.cn/docs/golang-design-pattern/golang-design-pattern-1cbgha2ltg796\">GO设计模式</a></td>\n<td><a href=\"https://go.dev/\">goDev</a></td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>资源</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://developer.aliyun.com/course/explore?spm=a2c6h.17661847.0.0.16676fb289Qirw&tags=,,,\">阿里云大学</a></td>\n<td><a href=\"https://developer.aliyun.com/mirror/?spm=a2c6h.12883283.1362934.3.5ddd201c9PSndh\">阿里巴巴开源镜像站</a></td>\n</tr>\n<tr>\n<td><a href=\"https://gitee.com/\">gitee</a></td>\n<td><a href=\"https://github.com/\">github</a></td>\n</tr>\n<tr>\n<td><a href=\"https://leetcode.cn/leetbook/\">力扣</a></td>\n<td><a href=\"https://www.topgoer.com/\">go学习资源</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.google.com/\">谷歌</a></td>\n<td><a href=\"https://www.facebook.com/\">脸书</a></td>\n</tr>\n<tr>\n<td><a href=\"https://packagist.org//\">php包</a></td>\n<td><a href=\"https://juejin.cn/\">掘金</a></td>\n</tr>\n</tbody></table>\n<p>面试题</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/471490292\">go面试题</a><br><a href=\"https://zhuanlan.zhihu.com/p/385093242\">php面试题</a></p>\n<p>电子书</p>\n<p><a href=\"https://pangxuejun.cn/static/k8s.pdf\">kubernetes</a><br><a href=\"https://pangxuejun.cn/static/docker.pdf\">docker</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"私人收藏书签\"><a href=\"#私人收藏书签\" class=\"headerlink\" title=\"私人收藏书签\"></a>私人收藏书签</h3><table>\n<thead>\n<tr>\n<th>工作</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://uat-crm.qzyyds.com/\">uat-crm</a></td>\n<td><a href=\"https://crm.qzyyds.com/\">crm</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.tapd.cn/my_dashboard\">TAPD看板</a></td>\n<td><a href=\"https://www.tapd.cn/48570041/markdown_wikis/show/#1148570041001000033\">TAPD工作项目文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.tapd.cn/48570041/prong/stories/stories_list\">tapd需求</a></td>\n<td><a href=\"http://docs.op.opsdns.cc:8081/note/\">探鲸文档</a></td>\n</tr>\n<tr>\n<td><a href=\"http://merchant.manage.opsdns.cc:8081/\">测试商家后台</a></td>\n<td><a href=\"http://merchant-manage.tanjingpaas.com:8081/\">正式商家后台</a></td>\n</tr>\n<tr>\n<td><a href=\"https://gitlab.com/\">gitlab</a></td>\n<td><a href=\"https://axhub.im/ax9/0b91ef6f07ca07a0/#g=1&id=95k0oz&p=%E5%AD%A6%E5%91%98%E5%88%97%E8%A1%A8\">原型图</a></td>\n</tr>\n<tr>\n<td><a href=\"https://lanhuapp.com/web/#/item?tid=7bc6a146-1f06-459f-907c-46650fd250d0&fid=all\">蓝湖UI图</a></td>\n<td><a href=\"https://signin.aliyun.com/1172332297421385.onaliyun.com/login.htm?accounttraceid=9134cee91b1349ff814cc7577f48c976dpqv&cspNonce=UY7LJndJHU&spma=a2c44&spmb=11131515#/main\">阿里云RAM</a></td>\n</tr>\n<tr>\n<td><a href=\"https://mp.weixin.qq.com/\">微信公众平台</a></td>\n<td><a href=\"https://fanyi.baidu.com/\">百度翻译</a></td>\n</tr>\n<tr>\n<td><a href=\"https://bzm5yprwaq.feishu.cn/base/bascnkuieHD1QeHGieq5v6Mrzgg?table=tbll7EOKizxq8Qk6&view=vewuBn4pQg\">需求表</a></td>\n<td><a href=\"https://bzm5yprwaq.feishu.cn/wiki/wikcn1CEdxkuhmNRdBIFmaM32gc\">技术方案</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.bing.com/\">bing</a></td>\n<td><a href=\"https://codeup.aliyun.com/61f10dca73741507cb7cf6ec/qzyyds\">codeup</a></td>\n</tr>\n<tr>\n<td><a href=\"https://alidocs.dingtalk.com/i/nodes/7dx2rn0JbAOr0daGs1rk3y67VMGjLRb3\">钉钉知识库</a></td>\n<td><a href=\"https://www.json.cn/\">json</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.vultr.com/\">vultr</a></td>\n<td><a href=\"https://uat-api.qzyyds.com/admin/websites/referer\">uat-referer</a></td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>文档</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://learnku.com/docs/laravel/8.x\">learnKuLaravel文档</a></td>\n<td><a href=\"https://laravelacademy.org/books/laravel-docs-8\">Laravel学院文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://react.docschina.org/docs/getting-started.html\">react中文文档</a></td>\n<td><a href=\"https://developer.work.weixin.qq.com/document/path/90664\">企业微信开发者文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://pro.ant.design/\">antdPro官网</a></td>\n<td><a href=\"https://procomponents.ant.design/components/\">antdPro组件</a></td>\n</tr>\n<tr>\n<td><a href=\"https://v3.cn.vuejs.org/guide/installation.html\">VUE3文档</a></td>\n<td><a href=\"https://git-scm.com/book/zh/v2\">git官方中文文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://markdown.com.cn/\">markdown官网文档</a></td>\n<td><a href=\"https://studygolang.com/pkgdoc\">golang中文文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://gorm.io/zh_CN/docs/\">Gorm文档</a></td>\n<td><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/\">微信官方文档</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.topgoer.cn/docs/golang-design-pattern/golang-design-pattern-1cbgha2ltg796\">GO设计模式</a></td>\n<td><a href=\"https://go.dev/\">goDev</a></td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>资源</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://developer.aliyun.com/course/explore?spm=a2c6h.17661847.0.0.16676fb289Qirw&tags=,,,\">阿里云大学</a></td>\n<td><a href=\"https://developer.aliyun.com/mirror/?spm=a2c6h.12883283.1362934.3.5ddd201c9PSndh\">阿里巴巴开源镜像站</a></td>\n</tr>\n<tr>\n<td><a href=\"https://gitee.com/\">gitee</a></td>\n<td><a href=\"https://github.com/\">github</a></td>\n</tr>\n<tr>\n<td><a href=\"https://leetcode.cn/leetbook/\">力扣</a></td>\n<td><a href=\"https://www.topgoer.com/\">go学习资源</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.google.com/\">谷歌</a></td>\n<td><a href=\"https://www.facebook.com/\">脸书</a></td>\n</tr>\n<tr>\n<td><a href=\"https://packagist.org//\">php包</a></td>\n<td><a href=\"https://juejin.cn/\">掘金</a></td>\n</tr>\n</tbody></table>\n<p>面试题</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/471490292\">go面试题</a><br><a href=\"https://zhuanlan.zhihu.com/p/385093242\">php面试题</a></p>\n<p>电子书</p>\n<p><a href=\"https://pangxuejun.cn/static/k8s.pdf\">kubernetes</a><br><a href=\"https://pangxuejun.cn/static/docker.pdf\">docker</a></p>\n"},{"title":"tags","date":"2022-06-22T16:13:20.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-06-23 00:13:20\ntype: \"tags\"\n---","updated":"2022-06-27T02:31:19.587Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl764i3n9000gjww5c95d2aom","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"antdPro简单介绍","date":"2022-07-04T12:58:22.000Z","_content":"\n安装：\n```angular2html\n# 使用 npm\nnpm i @ant-design/pro-cli -g\n# 使用 yarn\npro create myapp\n$ cd myapp && tyarn\n// 或\n$ cd myapp && npm install\n\n```\n\n相关文档\n\n[antdPro官网](https://pro.ant.design/)\n[antdPro组件](https://procomponents.ant.design/components/)","source":"_posts/antdPro简单介绍.md","raw":"---\ntitle: antdPro简单介绍\ndate: 2022-07-04 20:58:22\ntags:\n---\n\n安装：\n```angular2html\n# 使用 npm\nnpm i @ant-design/pro-cli -g\n# 使用 yarn\npro create myapp\n$ cd myapp && tyarn\n// 或\n$ cd myapp && npm install\n\n```\n\n相关文档\n\n[antdPro官网](https://pro.ant.design/)\n[antdPro组件](https://procomponents.ant.design/components/)","slug":"antdPro简单介绍","published":1,"updated":"2022-07-04T16:46:27.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl764i3mk0001jww5cstgacqr","content":"<p>安装：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用 npm</span><br><span class=\"line\">npm i @ant-design/pro-cli -g</span><br><span class=\"line\"># 使用 yarn</span><br><span class=\"line\">pro create myapp</span><br><span class=\"line\">$ cd myapp &amp;&amp; tyarn</span><br><span class=\"line\">// 或</span><br><span class=\"line\">$ cd myapp &amp;&amp; npm install</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>相关文档</p>\n<p><a href=\"https://pro.ant.design/\">antdPro官网</a><br><a href=\"https://procomponents.ant.design/components/\">antdPro组件</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>安装：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用 npm</span><br><span class=\"line\">npm i @ant-design/pro-cli -g</span><br><span class=\"line\"># 使用 yarn</span><br><span class=\"line\">pro create myapp</span><br><span class=\"line\">$ cd myapp &amp;&amp; tyarn</span><br><span class=\"line\">// 或</span><br><span class=\"line\">$ cd myapp &amp;&amp; npm install</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>相关文档</p>\n<p><a href=\"https://pro.ant.design/\">antdPro官网</a><br><a href=\"https://procomponents.ant.design/components/\">antdPro组件</a></p>\n"},{"title":"git知识点","date":"2022-07-04T02:09:03.000Z","_content":" \n总结下git版本管理\n\n1. git常用命令\n   1. git clone #克隆项目\n   2. git push #推送\n   3. git add #添加\n   4. git commit #提交\n   5. git checkout #切换分支\n   6. git pull #拉取\n\n2. 要用记不住的命令\n\n```angular2html\n* git reset --soft HEAD^ # 取消commit,保留修改的文件\n* git reset --hard HEAD^ # 取消commit,不保留修改的文件\n* git checkout -b shen-dev(本地分支名) origin/release_dev(远程分支名) #切换远程分支\n* git checkout . #恢复工作树文件\n* ssh-keygen -t rsa -C \"your_email@example.com\" #生成新的ssh key\n* git stash #git储藏\n* git stash list # 储藏列表\n* git stash pop # 恢复最近并删除\n* git stash drop #移除stash\n* git stash show #跟着stash名字\n* git stash clear #删除所有缓存的stash\n* git stash save #跟着stash名字\n* git update-index --assume-unchanged filenname #git 忽略已经追踪的文件\n* git update-index --no--assume-unchanged filenname #git 取消忽略已经追踪的文件\n```\n\n3. git的知识点\n\n4. 基于git的几大平台\n- github gitlab gitee\n\n5. 解决问题的命令\n---\ngit拉取github超时\n```angular2html\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\ngit config http.sslVerify \"false\"\n```\n\n6. commit规范\n\ntype用于说明 commit 的类别。\n\nfeat：新增功能\nfix：bug 修复\ndocs：文档更新\nstyle：不影响程序逻辑的代码修改(修改空白字符，格式缩进，补全缺失的分号等，没有改变代码逻辑)\nrefactor：重构代码(既没有新增功能，也没有修复 bug)\nperf：性能, 体验优化\ntest：新增测试用例或是更新现有测试\nbuild：主要目的是修改项目构建系统(例如 glup，webpack，rollup 的配置等)的提交\nci：主要目的是修改项目继续集成流程(例如 Travis，Jenkins，GitLab CI，Circle等)的提交\nchore：不属于以上类型的其他类，比如构建流程, 依赖管理\nrevert：回滚某个更早之前的提交\n\n相关的资料链接\n\n[git官网](https://git-scm.com/)\n\n[git官方中文文档](https://git-scm.com/book/zh/v2)\n\n官网下载速度慢,可以使用阿里云镜像.\n\n[阿里云git镜像](https://registry.npmmirror.com/binary.html?path=git-for-windows/)","source":"_posts/git知识点.md","raw":"---\ntitle: git知识点\ndate: 2022-07-04 10:09:03\ntags:\n - git \ncategory:\n - git\n\n---\n \n总结下git版本管理\n\n1. git常用命令\n   1. git clone #克隆项目\n   2. git push #推送\n   3. git add #添加\n   4. git commit #提交\n   5. git checkout #切换分支\n   6. git pull #拉取\n\n2. 要用记不住的命令\n\n```angular2html\n* git reset --soft HEAD^ # 取消commit,保留修改的文件\n* git reset --hard HEAD^ # 取消commit,不保留修改的文件\n* git checkout -b shen-dev(本地分支名) origin/release_dev(远程分支名) #切换远程分支\n* git checkout . #恢复工作树文件\n* ssh-keygen -t rsa -C \"your_email@example.com\" #生成新的ssh key\n* git stash #git储藏\n* git stash list # 储藏列表\n* git stash pop # 恢复最近并删除\n* git stash drop #移除stash\n* git stash show #跟着stash名字\n* git stash clear #删除所有缓存的stash\n* git stash save #跟着stash名字\n* git update-index --assume-unchanged filenname #git 忽略已经追踪的文件\n* git update-index --no--assume-unchanged filenname #git 取消忽略已经追踪的文件\n```\n\n3. git的知识点\n\n4. 基于git的几大平台\n- github gitlab gitee\n\n5. 解决问题的命令\n---\ngit拉取github超时\n```angular2html\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\ngit config http.sslVerify \"false\"\n```\n\n6. commit规范\n\ntype用于说明 commit 的类别。\n\nfeat：新增功能\nfix：bug 修复\ndocs：文档更新\nstyle：不影响程序逻辑的代码修改(修改空白字符，格式缩进，补全缺失的分号等，没有改变代码逻辑)\nrefactor：重构代码(既没有新增功能，也没有修复 bug)\nperf：性能, 体验优化\ntest：新增测试用例或是更新现有测试\nbuild：主要目的是修改项目构建系统(例如 glup，webpack，rollup 的配置等)的提交\nci：主要目的是修改项目继续集成流程(例如 Travis，Jenkins，GitLab CI，Circle等)的提交\nchore：不属于以上类型的其他类，比如构建流程, 依赖管理\nrevert：回滚某个更早之前的提交\n\n相关的资料链接\n\n[git官网](https://git-scm.com/)\n\n[git官方中文文档](https://git-scm.com/book/zh/v2)\n\n官网下载速度慢,可以使用阿里云镜像.\n\n[阿里云git镜像](https://registry.npmmirror.com/binary.html?path=git-for-windows/)","slug":"git知识点","published":1,"updated":"2023-06-13T11:34:27.839Z","_id":"cl764i3mr0003jww57syeewiw","comments":1,"layout":"post","photos":[],"link":"","content":"<p>总结下git版本管理</p>\n<ol>\n<li><p>git常用命令</p>\n<ol>\n<li>git clone #克隆项目</li>\n<li>git push #推送</li>\n<li>git add #添加</li>\n<li>git commit #提交</li>\n<li>git checkout #切换分支</li>\n<li>git pull #拉取</li>\n</ol>\n</li>\n<li><p>要用记不住的命令</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* git reset --soft HEAD^ # 取消commit,保留修改的文件</span><br><span class=\"line\">* git reset --hard HEAD^ # 取消commit,不保留修改的文件</span><br><span class=\"line\">* git checkout -b shen-dev(本地分支名) origin/release_dev(远程分支名) #切换远程分支</span><br><span class=\"line\">* git checkout . #恢复工作树文件</span><br><span class=\"line\">* ssh-keygen -t rsa -C &quot;your_email@example.com&quot; #生成新的ssh key</span><br><span class=\"line\">* git stash #git储藏</span><br><span class=\"line\">* git stash list # 储藏列表</span><br><span class=\"line\">* git stash pop # 恢复最近并删除</span><br><span class=\"line\">* git stash drop #移除stash</span><br><span class=\"line\">* git stash show #跟着stash名字</span><br><span class=\"line\">* git stash clear #删除所有缓存的stash</span><br><span class=\"line\">* git stash save #跟着stash名字</span><br><span class=\"line\">* git update-index --assume-unchanged filenname #git 忽略已经追踪的文件</span><br><span class=\"line\">* git update-index --no--assume-unchanged filenname #git 取消忽略已经追踪的文件</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>git的知识点</p>\n</li>\n<li><p>基于git的几大平台</p>\n</li>\n</ol>\n<ul>\n<li>github gitlab gitee</li>\n</ul>\n<ol start=\"5\">\n<li>解决问题的命令</li>\n</ol>\n<hr>\n<p>git拉取github超时</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\">git config --global --unset https.proxy</span><br><span class=\"line\">git config http.sslVerify &quot;false&quot;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>commit规范</li>\n</ol>\n<p>type用于说明 commit 的类别。</p>\n<p>feat：新增功能<br>fix：bug 修复<br>docs：文档更新<br>style：不影响程序逻辑的代码修改(修改空白字符，格式缩进，补全缺失的分号等，没有改变代码逻辑)<br>refactor：重构代码(既没有新增功能，也没有修复 bug)<br>perf：性能, 体验优化<br>test：新增测试用例或是更新现有测试<br>build：主要目的是修改项目构建系统(例如 glup，webpack，rollup 的配置等)的提交<br>ci：主要目的是修改项目继续集成流程(例如 Travis，Jenkins，GitLab CI，Circle等)的提交<br>chore：不属于以上类型的其他类，比如构建流程, 依赖管理<br>revert：回滚某个更早之前的提交</p>\n<p>相关的资料链接</p>\n<p><a href=\"https://git-scm.com/\">git官网</a></p>\n<p><a href=\"https://git-scm.com/book/zh/v2\">git官方中文文档</a></p>\n<p>官网下载速度慢,可以使用阿里云镜像.</p>\n<p><a href=\"https://registry.npmmirror.com/binary.html?path=git-for-windows/\">阿里云git镜像</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>总结下git版本管理</p>\n<ol>\n<li><p>git常用命令</p>\n<ol>\n<li>git clone #克隆项目</li>\n<li>git push #推送</li>\n<li>git add #添加</li>\n<li>git commit #提交</li>\n<li>git checkout #切换分支</li>\n<li>git pull #拉取</li>\n</ol>\n</li>\n<li><p>要用记不住的命令</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* git reset --soft HEAD^ # 取消commit,保留修改的文件</span><br><span class=\"line\">* git reset --hard HEAD^ # 取消commit,不保留修改的文件</span><br><span class=\"line\">* git checkout -b shen-dev(本地分支名) origin/release_dev(远程分支名) #切换远程分支</span><br><span class=\"line\">* git checkout . #恢复工作树文件</span><br><span class=\"line\">* ssh-keygen -t rsa -C &quot;your_email@example.com&quot; #生成新的ssh key</span><br><span class=\"line\">* git stash #git储藏</span><br><span class=\"line\">* git stash list # 储藏列表</span><br><span class=\"line\">* git stash pop # 恢复最近并删除</span><br><span class=\"line\">* git stash drop #移除stash</span><br><span class=\"line\">* git stash show #跟着stash名字</span><br><span class=\"line\">* git stash clear #删除所有缓存的stash</span><br><span class=\"line\">* git stash save #跟着stash名字</span><br><span class=\"line\">* git update-index --assume-unchanged filenname #git 忽略已经追踪的文件</span><br><span class=\"line\">* git update-index --no--assume-unchanged filenname #git 取消忽略已经追踪的文件</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>git的知识点</p>\n</li>\n<li><p>基于git的几大平台</p>\n</li>\n</ol>\n<ul>\n<li>github gitlab gitee</li>\n</ul>\n<ol start=\"5\">\n<li>解决问题的命令</li>\n</ol>\n<hr>\n<p>git拉取github超时</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\">git config --global --unset https.proxy</span><br><span class=\"line\">git config http.sslVerify &quot;false&quot;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>commit规范</li>\n</ol>\n<p>type用于说明 commit 的类别。</p>\n<p>feat：新增功能<br>fix：bug 修复<br>docs：文档更新<br>style：不影响程序逻辑的代码修改(修改空白字符，格式缩进，补全缺失的分号等，没有改变代码逻辑)<br>refactor：重构代码(既没有新增功能，也没有修复 bug)<br>perf：性能, 体验优化<br>test：新增测试用例或是更新现有测试<br>build：主要目的是修改项目构建系统(例如 glup，webpack，rollup 的配置等)的提交<br>ci：主要目的是修改项目继续集成流程(例如 Travis，Jenkins，GitLab CI，Circle等)的提交<br>chore：不属于以上类型的其他类，比如构建流程, 依赖管理<br>revert：回滚某个更早之前的提交</p>\n<p>相关的资料链接</p>\n<p><a href=\"https://git-scm.com/\">git官网</a></p>\n<p><a href=\"https://git-scm.com/book/zh/v2\">git官方中文文档</a></p>\n<p>官网下载速度慢,可以使用阿里云镜像.</p>\n<p><a href=\"https://registry.npmmirror.com/binary.html?path=git-for-windows/\">阿里云git镜像</a></p>\n"},{"layout":"categories","title":"go 环境的安装","date":"2022-06-22T16:30:28.000Z","_content":"\n安装golang\n\n1.下载地址\nhttps://golang.google.cn/dl/\n\n2.添加环境变量\nGo\\bin 添加到Path环境变量\n设置 go GOPROXY\n```\ngo env -w GO111MODULE=on\ngo env -w GOPROXY=https://goproxy.cn,direct\n```\n\n3.配置GOROOT和GOPATH\n\nGOROOT: 配置go的sdk目录\nGOPATH: 配置go项目都要放置到这个目录之下\n\n","source":"_posts/go 环境的安装.md","raw":"---\nlayout: categories\ntitle: go 环境的安装\ndate: 2022-06-23 00:30:28\ntags: \n- go\ncategories:\n- go\n---\n\n安装golang\n\n1.下载地址\nhttps://golang.google.cn/dl/\n\n2.添加环境变量\nGo\\bin 添加到Path环境变量\n设置 go GOPROXY\n```\ngo env -w GO111MODULE=on\ngo env -w GOPROXY=https://goproxy.cn,direct\n```\n\n3.配置GOROOT和GOPATH\n\nGOROOT: 配置go的sdk目录\nGOPATH: 配置go项目都要放置到这个目录之下\n\n","slug":"go 环境的安装","published":1,"updated":"2022-07-11T16:22:26.266Z","comments":1,"photos":[],"link":"","_id":"cl764i3mv0005jww59d1a4q48","content":"<p>安装golang</p>\n<p>1.下载地址<br><a href=\"https://golang.google.cn/dl/\">https://golang.google.cn/dl/</a></p>\n<p>2.添加环境变量<br>Go\\bin 添加到Path环境变量<br>设置 go GOPROXY</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go env -w GO111MODULE=on</span><br><span class=\"line\">go env -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure>\n\n<p>3.配置GOROOT和GOPATH</p>\n<p>GOROOT: 配置go的sdk目录<br>GOPATH: 配置go项目都要放置到这个目录之下</p>\n","site":{"data":{}},"excerpt":"","more":"<p>安装golang</p>\n<p>1.下载地址<br><a href=\"https://golang.google.cn/dl/\">https://golang.google.cn/dl/</a></p>\n<p>2.添加环境变量<br>Go\\bin 添加到Path环境变量<br>设置 go GOPROXY</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go env -w GO111MODULE=on</span><br><span class=\"line\">go env -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure>\n\n<p>3.配置GOROOT和GOPATH</p>\n<p>GOROOT: 配置go的sdk目录<br>GOPATH: 配置go项目都要放置到这个目录之下</p>\n"},{"title":"go的学习路线","date":"2022-07-10T15:37:36.000Z","_content":"\n---\n<img src=\"/static/go.jpg\" width=\"80%\" />\n\n","source":"_posts/go的学习路线.md","raw":"---\ntitle: go的学习路线\ndate: 2022-07-10 23:37:36\ntags:\ncategory:\n- go\n\n---\n\n---\n<img src=\"/static/go.jpg\" width=\"80%\" />\n\n","slug":"go的学习路线","published":1,"updated":"2023-06-13T11:34:27.799Z","_id":"cl764i3n00008jww53jik65wg","comments":1,"layout":"post","photos":[],"link":"","content":"<hr>\n<img src=\"/static/go.jpg\" width=\"80%\" />\n\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<img src=\"/static/go.jpg\" width=\"80%\" />\n\n"},{"title":"jetbrains编辑器快捷键","date":"2022-07-22T02:18:00.000Z","_content":"\n记录下jetbrains快捷键，提高效率。\n\n\n---\n### 【常规】\n```\nCtrl+Shift + Enter，语句完成\n“！”，否定完成，输入表达式时按 “！”键\nCtrl+E，最近的文件\nCtrl+Shift+E，最近更改的文件\nShift+Click，可以关闭文件\nCtrl+[ OR ]，可以跑到大括号的开头与结尾\nCtrl+F12，可以显示当前文件的结构\nCtrl+F7，可以查询当前元素在当前文件中的引用，然后按 F3 可以选择\nCtrl+N，可以快速打开类\nCtrl+Shift+N，可以快速打开文件\nAlt+Q，可以看到当前方法的声明\nCtrl+P，可以显示参数信息\nCtrl+Shift+Insert，可以选择剪贴板内容并插入\nAlt+Insert，可以生成构造器/Getter/Setter等\nCtrl+Alt+V，可以引入变量。例如：new String();  自动导入变量定义\nCtrl+Alt+T，可以把代码包在一个块内，例如：try/catch\nCtrl+Enter，导入包，自动修正\nCtrl+Alt+L，一键格式化代码\nCtrl+Alt+I，将选中的代码进行自动缩进编排，这个功能在编辑 JSP 文件时也可以工作\nCtrl+Alt+O，优化导入的类和包\nCtrl+R，替换文本\nCtrl+F，查找文本\nCtrl+Shift+Space，自动补全代码\nCtrl+空格，代码提示（与系统输入法快捷键冲突）\nCtrl+Shift+Alt+N，查找类中的方法或变量\nAlt+Shift+C，最近的更改\nAlt+Shift+Up/Down，上/下移一行\nShift+F6，重构 - 重命名\nCtrl+X，删除行\nCtrl+D，复制行\nCtrl+/或Ctrl+Shift+/，注释（//或者/**/）\nCtrl+J，自动代码（例如：serr）\nCtrl+Alt+J，用动态模板环绕\nCtrl+H，显示类结构图（类的继承层次）\nCtrl+Q，显示注释文档\nAlt+F1，查找代码所在位置\nAlt+1，快速打开或隐藏工程面板\nCtrl+Alt+left/right，返回至上次浏览的位置\nAlt+left/right，切换代码视图\nAlt+Up/Down，在方法间快速移动定位\nCtrl+Shift+Up/Down，向上/下移动语句\nF2 或 Shift+F2，高亮错误或警告快速定位\nTab，代码标签输入完成后，按 Tab，生成代码\nCtrl+Shift+F7，高亮显示所有该文本，按 Esc 高亮消失\nAlt+F3，逐个往下查找相同文本，并高亮显示\nCtrl+Up/Down，光标中转到第一行或最后一行下\nCtrl+B/Ctrl+Click，快速打开光标处的类或方法（跳转到定义处）\nCtrl+Alt+B，跳转到方法实现处\nCtrl+Shift+Backspace，跳转到上次编辑的地方\nCtrl+O，重写方法\nCtrl+Alt+Space，类名自动完成\nCtrl+Alt+Up/Down，快速跳转搜索结果\nCtrl+Shift+J，整合两行\nAlt+F8，计算变量值\nCtrl+Shift+V，可以将最近使用的剪贴板内容选择插入到文本\nCtrl+Alt+Shift+V，简单粘贴\nShift+Esc，不仅可以把焦点移到编辑器上，而且还可以隐藏当前（或最后活动的）工具窗口\nF12，把焦点从编辑器移到最近使用的工具窗口\nShift+F1，要打开编辑器光标字符处使用的类或者方法 Java 文档的浏览器\nCtrl+W，可以选择单词继而语句继而行继而函数\nCtrl+Shift+W，取消选择光标所在词\nAlt+F7，查找整个工程中使用地某一个类、方法或者变量的位置\nCtrl+I，实现方法\nCtrl+Shift+U，大小写转化\nCtrl+Y，删除当前行\nShift+Enter，向下插入新行\npsvm/sout，main/System.out.println(); Ctrl+J，查看更多\nCtrl+Shift+F，全局查找\nCtrl+F，查找/Shift+F3，向上查找/F3，向下查找\nCtrl+Shift+S，高级搜索\nCtrl+U，转到父类\nCtrl+Alt+S，打开设置对话框\nAlt+Shift+Inert，开启/关闭列选择模式\nCtrl+Alt+Shift+S，打开当前项目/模块属性\nCtrl+G，定位行\nAlt+Home，跳转到导航栏\nCtrl+Enter，上插一行\nCtrl+Backspace，按单词删除\nCtrl+\"+/-\"，当前方法展开、折叠\nCtrl+Shift+\"+/-\"，全部展开、折叠\n```\n\n### 【调试部分、编译】\n```angular2html\nCtrl+F2，停止\nAlt+Shift+F9，选择 Debug\nAlt+Shift+F10，选择 Run\nCtrl+Shift+F9，编译\nCtrl+Shift+F10，运行\nCtrl+Shift+F8，查看断点\nF8，步过\nF7，步入\nShift+F7，智能步入\nShift+F8，步出\nAlt+Shift+F8，强制步过\nAlt+Shift+F7，强制步入\nAlt+F9，运行至光标处\nCtrl+Alt+F9，强制运行至光标处\nF9，恢复程序\nAlt+F10，定位到断点\nCtrl+F8，切换行断点\nCtrl+F9，生成项目\nAlt+1，项目\nAlt+2，收藏\nAlt+6，TODO\nAlt+7，结构\nCtrl+Shift+C，复制路径\nCtrl+Alt+Shift+C，复制引用，必须选择类名\nCtrl+Alt+Y，同步\nCtrl+~，快速切换方案（界面外观、代码风格、快捷键映射等菜单）\nShift+F12，还原默认布局\nCtrl+Shift+F12，隐藏/恢复所有窗口\nCtrl+F4，关闭\nCtrl+Shift+F4，关闭活动选项卡\nCtrl+Tab，转到下一个拆分器\nCtrl+Shift+Tab，转到上一个拆分器\n```\n\n### 【重构】\n```angular2html\nCtrl+Alt+Shift+T，弹出重构菜单\nShift+F6，重命名\nF6，移动\nF5，复制\nAlt+Delete，安全删除\nCtrl+Alt+N，内联\n```\n\n### 【查找】\n```angular2html\nCtrl+F，查找\nCtrl+R，替换\nF3，查找下一个\nShift+F3，查找上一个\nCtrl+Shift+F，在路径中查找\nCtrl+Shift+R，在路径中替换\nCtrl+Shift+S，搜索结构\nCtrl+Shift+M，替换结构\nAlt+F7，查找用法\nCtrl+Alt+F7，显示用法\nCtrl+F7，在文件中查找用法\nCtrl+Shift+F7，在文件中高亮显示用法\n```\n\n### 【VCS】\n```angular2html\nAlt+~，VCS 操作菜单\nCtrl+K，提交更改\nCtrl+T，更新项目\nCtrl+Alt+Shift+D，显示变化\n```\n\n来源\n[JetBrains - IDEA 常用快捷键汇总](https://blog.csdn.net/qq_41289920/article/details/90750786#:~:text=JetBrains%20-%20IDEA%20%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB%201%20Ctrl%2BShift%20%2B%20Enter%EF%BC%8C%E8%AF%AD%E5%8F%A5%E5%AE%8C%E6%88%90,%E5%8F%AF%E4%BB%A5%E9%80%89%E6%8B%A9%209%20Ctrl%2BN%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E7%B1%BB%2010%20Ctrl%2BShift%2BN%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%20More%20items...%20)","source":"_posts/jetbrains编辑器快捷键.md","raw":"---\ntitle: jetbrains编辑器快捷键\ndate: 2022-07-22 10:18:00\ntags:\n---\n\n记录下jetbrains快捷键，提高效率。\n\n\n---\n### 【常规】\n```\nCtrl+Shift + Enter，语句完成\n“！”，否定完成，输入表达式时按 “！”键\nCtrl+E，最近的文件\nCtrl+Shift+E，最近更改的文件\nShift+Click，可以关闭文件\nCtrl+[ OR ]，可以跑到大括号的开头与结尾\nCtrl+F12，可以显示当前文件的结构\nCtrl+F7，可以查询当前元素在当前文件中的引用，然后按 F3 可以选择\nCtrl+N，可以快速打开类\nCtrl+Shift+N，可以快速打开文件\nAlt+Q，可以看到当前方法的声明\nCtrl+P，可以显示参数信息\nCtrl+Shift+Insert，可以选择剪贴板内容并插入\nAlt+Insert，可以生成构造器/Getter/Setter等\nCtrl+Alt+V，可以引入变量。例如：new String();  自动导入变量定义\nCtrl+Alt+T，可以把代码包在一个块内，例如：try/catch\nCtrl+Enter，导入包，自动修正\nCtrl+Alt+L，一键格式化代码\nCtrl+Alt+I，将选中的代码进行自动缩进编排，这个功能在编辑 JSP 文件时也可以工作\nCtrl+Alt+O，优化导入的类和包\nCtrl+R，替换文本\nCtrl+F，查找文本\nCtrl+Shift+Space，自动补全代码\nCtrl+空格，代码提示（与系统输入法快捷键冲突）\nCtrl+Shift+Alt+N，查找类中的方法或变量\nAlt+Shift+C，最近的更改\nAlt+Shift+Up/Down，上/下移一行\nShift+F6，重构 - 重命名\nCtrl+X，删除行\nCtrl+D，复制行\nCtrl+/或Ctrl+Shift+/，注释（//或者/**/）\nCtrl+J，自动代码（例如：serr）\nCtrl+Alt+J，用动态模板环绕\nCtrl+H，显示类结构图（类的继承层次）\nCtrl+Q，显示注释文档\nAlt+F1，查找代码所在位置\nAlt+1，快速打开或隐藏工程面板\nCtrl+Alt+left/right，返回至上次浏览的位置\nAlt+left/right，切换代码视图\nAlt+Up/Down，在方法间快速移动定位\nCtrl+Shift+Up/Down，向上/下移动语句\nF2 或 Shift+F2，高亮错误或警告快速定位\nTab，代码标签输入完成后，按 Tab，生成代码\nCtrl+Shift+F7，高亮显示所有该文本，按 Esc 高亮消失\nAlt+F3，逐个往下查找相同文本，并高亮显示\nCtrl+Up/Down，光标中转到第一行或最后一行下\nCtrl+B/Ctrl+Click，快速打开光标处的类或方法（跳转到定义处）\nCtrl+Alt+B，跳转到方法实现处\nCtrl+Shift+Backspace，跳转到上次编辑的地方\nCtrl+O，重写方法\nCtrl+Alt+Space，类名自动完成\nCtrl+Alt+Up/Down，快速跳转搜索结果\nCtrl+Shift+J，整合两行\nAlt+F8，计算变量值\nCtrl+Shift+V，可以将最近使用的剪贴板内容选择插入到文本\nCtrl+Alt+Shift+V，简单粘贴\nShift+Esc，不仅可以把焦点移到编辑器上，而且还可以隐藏当前（或最后活动的）工具窗口\nF12，把焦点从编辑器移到最近使用的工具窗口\nShift+F1，要打开编辑器光标字符处使用的类或者方法 Java 文档的浏览器\nCtrl+W，可以选择单词继而语句继而行继而函数\nCtrl+Shift+W，取消选择光标所在词\nAlt+F7，查找整个工程中使用地某一个类、方法或者变量的位置\nCtrl+I，实现方法\nCtrl+Shift+U，大小写转化\nCtrl+Y，删除当前行\nShift+Enter，向下插入新行\npsvm/sout，main/System.out.println(); Ctrl+J，查看更多\nCtrl+Shift+F，全局查找\nCtrl+F，查找/Shift+F3，向上查找/F3，向下查找\nCtrl+Shift+S，高级搜索\nCtrl+U，转到父类\nCtrl+Alt+S，打开设置对话框\nAlt+Shift+Inert，开启/关闭列选择模式\nCtrl+Alt+Shift+S，打开当前项目/模块属性\nCtrl+G，定位行\nAlt+Home，跳转到导航栏\nCtrl+Enter，上插一行\nCtrl+Backspace，按单词删除\nCtrl+\"+/-\"，当前方法展开、折叠\nCtrl+Shift+\"+/-\"，全部展开、折叠\n```\n\n### 【调试部分、编译】\n```angular2html\nCtrl+F2，停止\nAlt+Shift+F9，选择 Debug\nAlt+Shift+F10，选择 Run\nCtrl+Shift+F9，编译\nCtrl+Shift+F10，运行\nCtrl+Shift+F8，查看断点\nF8，步过\nF7，步入\nShift+F7，智能步入\nShift+F8，步出\nAlt+Shift+F8，强制步过\nAlt+Shift+F7，强制步入\nAlt+F9，运行至光标处\nCtrl+Alt+F9，强制运行至光标处\nF9，恢复程序\nAlt+F10，定位到断点\nCtrl+F8，切换行断点\nCtrl+F9，生成项目\nAlt+1，项目\nAlt+2，收藏\nAlt+6，TODO\nAlt+7，结构\nCtrl+Shift+C，复制路径\nCtrl+Alt+Shift+C，复制引用，必须选择类名\nCtrl+Alt+Y，同步\nCtrl+~，快速切换方案（界面外观、代码风格、快捷键映射等菜单）\nShift+F12，还原默认布局\nCtrl+Shift+F12，隐藏/恢复所有窗口\nCtrl+F4，关闭\nCtrl+Shift+F4，关闭活动选项卡\nCtrl+Tab，转到下一个拆分器\nCtrl+Shift+Tab，转到上一个拆分器\n```\n\n### 【重构】\n```angular2html\nCtrl+Alt+Shift+T，弹出重构菜单\nShift+F6，重命名\nF6，移动\nF5，复制\nAlt+Delete，安全删除\nCtrl+Alt+N，内联\n```\n\n### 【查找】\n```angular2html\nCtrl+F，查找\nCtrl+R，替换\nF3，查找下一个\nShift+F3，查找上一个\nCtrl+Shift+F，在路径中查找\nCtrl+Shift+R，在路径中替换\nCtrl+Shift+S，搜索结构\nCtrl+Shift+M，替换结构\nAlt+F7，查找用法\nCtrl+Alt+F7，显示用法\nCtrl+F7，在文件中查找用法\nCtrl+Shift+F7，在文件中高亮显示用法\n```\n\n### 【VCS】\n```angular2html\nAlt+~，VCS 操作菜单\nCtrl+K，提交更改\nCtrl+T，更新项目\nCtrl+Alt+Shift+D，显示变化\n```\n\n来源\n[JetBrains - IDEA 常用快捷键汇总](https://blog.csdn.net/qq_41289920/article/details/90750786#:~:text=JetBrains%20-%20IDEA%20%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB%201%20Ctrl%2BShift%20%2B%20Enter%EF%BC%8C%E8%AF%AD%E5%8F%A5%E5%AE%8C%E6%88%90,%E5%8F%AF%E4%BB%A5%E9%80%89%E6%8B%A9%209%20Ctrl%2BN%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E7%B1%BB%2010%20Ctrl%2BShift%2BN%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%20More%20items...%20)","slug":"jetbrains编辑器快捷键","published":1,"updated":"2022-07-22T02:23:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl764i3n3000bjww53zuefkoq","content":"<p>记录下jetbrains快捷键，提高效率。</p>\n<hr>\n<h3 id=\"【常规】\"><a href=\"#【常规】\" class=\"headerlink\" title=\"【常规】\"></a>【常规】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+Shift + Enter，语句完成</span><br><span class=\"line\">“！”，否定完成，输入表达式时按 “！”键</span><br><span class=\"line\">Ctrl+E，最近的文件</span><br><span class=\"line\">Ctrl+Shift+E，最近更改的文件</span><br><span class=\"line\">Shift+Click，可以关闭文件</span><br><span class=\"line\">Ctrl+[ OR ]，可以跑到大括号的开头与结尾</span><br><span class=\"line\">Ctrl+F12，可以显示当前文件的结构</span><br><span class=\"line\">Ctrl+F7，可以查询当前元素在当前文件中的引用，然后按 F3 可以选择</span><br><span class=\"line\">Ctrl+N，可以快速打开类</span><br><span class=\"line\">Ctrl+Shift+N，可以快速打开文件</span><br><span class=\"line\">Alt+Q，可以看到当前方法的声明</span><br><span class=\"line\">Ctrl+P，可以显示参数信息</span><br><span class=\"line\">Ctrl+Shift+Insert，可以选择剪贴板内容并插入</span><br><span class=\"line\">Alt+Insert，可以生成构造器/Getter/Setter等</span><br><span class=\"line\">Ctrl+Alt+V，可以引入变量。例如：new String();  自动导入变量定义</span><br><span class=\"line\">Ctrl+Alt+T，可以把代码包在一个块内，例如：try/catch</span><br><span class=\"line\">Ctrl+Enter，导入包，自动修正</span><br><span class=\"line\">Ctrl+Alt+L，一键格式化代码</span><br><span class=\"line\">Ctrl+Alt+I，将选中的代码进行自动缩进编排，这个功能在编辑 JSP 文件时也可以工作</span><br><span class=\"line\">Ctrl+Alt+O，优化导入的类和包</span><br><span class=\"line\">Ctrl+R，替换文本</span><br><span class=\"line\">Ctrl+F，查找文本</span><br><span class=\"line\">Ctrl+Shift+Space，自动补全代码</span><br><span class=\"line\">Ctrl+空格，代码提示（与系统输入法快捷键冲突）</span><br><span class=\"line\">Ctrl+Shift+Alt+N，查找类中的方法或变量</span><br><span class=\"line\">Alt+Shift+C，最近的更改</span><br><span class=\"line\">Alt+Shift+Up/Down，上/下移一行</span><br><span class=\"line\">Shift+F6，重构 - 重命名</span><br><span class=\"line\">Ctrl+X，删除行</span><br><span class=\"line\">Ctrl+D，复制行</span><br><span class=\"line\">Ctrl+/或Ctrl+Shift+/，注释（//或者/**/）</span><br><span class=\"line\">Ctrl+J，自动代码（例如：serr）</span><br><span class=\"line\">Ctrl+Alt+J，用动态模板环绕</span><br><span class=\"line\">Ctrl+H，显示类结构图（类的继承层次）</span><br><span class=\"line\">Ctrl+Q，显示注释文档</span><br><span class=\"line\">Alt+F1，查找代码所在位置</span><br><span class=\"line\">Alt+1，快速打开或隐藏工程面板</span><br><span class=\"line\">Ctrl+Alt+left/right，返回至上次浏览的位置</span><br><span class=\"line\">Alt+left/right，切换代码视图</span><br><span class=\"line\">Alt+Up/Down，在方法间快速移动定位</span><br><span class=\"line\">Ctrl+Shift+Up/Down，向上/下移动语句</span><br><span class=\"line\">F2 或 Shift+F2，高亮错误或警告快速定位</span><br><span class=\"line\">Tab，代码标签输入完成后，按 Tab，生成代码</span><br><span class=\"line\">Ctrl+Shift+F7，高亮显示所有该文本，按 Esc 高亮消失</span><br><span class=\"line\">Alt+F3，逐个往下查找相同文本，并高亮显示</span><br><span class=\"line\">Ctrl+Up/Down，光标中转到第一行或最后一行下</span><br><span class=\"line\">Ctrl+B/Ctrl+Click，快速打开光标处的类或方法（跳转到定义处）</span><br><span class=\"line\">Ctrl+Alt+B，跳转到方法实现处</span><br><span class=\"line\">Ctrl+Shift+Backspace，跳转到上次编辑的地方</span><br><span class=\"line\">Ctrl+O，重写方法</span><br><span class=\"line\">Ctrl+Alt+Space，类名自动完成</span><br><span class=\"line\">Ctrl+Alt+Up/Down，快速跳转搜索结果</span><br><span class=\"line\">Ctrl+Shift+J，整合两行</span><br><span class=\"line\">Alt+F8，计算变量值</span><br><span class=\"line\">Ctrl+Shift+V，可以将最近使用的剪贴板内容选择插入到文本</span><br><span class=\"line\">Ctrl+Alt+Shift+V，简单粘贴</span><br><span class=\"line\">Shift+Esc，不仅可以把焦点移到编辑器上，而且还可以隐藏当前（或最后活动的）工具窗口</span><br><span class=\"line\">F12，把焦点从编辑器移到最近使用的工具窗口</span><br><span class=\"line\">Shift+F1，要打开编辑器光标字符处使用的类或者方法 Java 文档的浏览器</span><br><span class=\"line\">Ctrl+W，可以选择单词继而语句继而行继而函数</span><br><span class=\"line\">Ctrl+Shift+W，取消选择光标所在词</span><br><span class=\"line\">Alt+F7，查找整个工程中使用地某一个类、方法或者变量的位置</span><br><span class=\"line\">Ctrl+I，实现方法</span><br><span class=\"line\">Ctrl+Shift+U，大小写转化</span><br><span class=\"line\">Ctrl+Y，删除当前行</span><br><span class=\"line\">Shift+Enter，向下插入新行</span><br><span class=\"line\">psvm/sout，main/System.out.println(); Ctrl+J，查看更多</span><br><span class=\"line\">Ctrl+Shift+F，全局查找</span><br><span class=\"line\">Ctrl+F，查找/Shift+F3，向上查找/F3，向下查找</span><br><span class=\"line\">Ctrl+Shift+S，高级搜索</span><br><span class=\"line\">Ctrl+U，转到父类</span><br><span class=\"line\">Ctrl+Alt+S，打开设置对话框</span><br><span class=\"line\">Alt+Shift+Inert，开启/关闭列选择模式</span><br><span class=\"line\">Ctrl+Alt+Shift+S，打开当前项目/模块属性</span><br><span class=\"line\">Ctrl+G，定位行</span><br><span class=\"line\">Alt+Home，跳转到导航栏</span><br><span class=\"line\">Ctrl+Enter，上插一行</span><br><span class=\"line\">Ctrl+Backspace，按单词删除</span><br><span class=\"line\">Ctrl+&quot;+/-&quot;，当前方法展开、折叠</span><br><span class=\"line\">Ctrl+Shift+&quot;+/-&quot;，全部展开、折叠</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"【调试部分、编译】\"><a href=\"#【调试部分、编译】\" class=\"headerlink\" title=\"【调试部分、编译】\"></a>【调试部分、编译】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+F2，停止</span><br><span class=\"line\">Alt+Shift+F9，选择 Debug</span><br><span class=\"line\">Alt+Shift+F10，选择 Run</span><br><span class=\"line\">Ctrl+Shift+F9，编译</span><br><span class=\"line\">Ctrl+Shift+F10，运行</span><br><span class=\"line\">Ctrl+Shift+F8，查看断点</span><br><span class=\"line\">F8，步过</span><br><span class=\"line\">F7，步入</span><br><span class=\"line\">Shift+F7，智能步入</span><br><span class=\"line\">Shift+F8，步出</span><br><span class=\"line\">Alt+Shift+F8，强制步过</span><br><span class=\"line\">Alt+Shift+F7，强制步入</span><br><span class=\"line\">Alt+F9，运行至光标处</span><br><span class=\"line\">Ctrl+Alt+F9，强制运行至光标处</span><br><span class=\"line\">F9，恢复程序</span><br><span class=\"line\">Alt+F10，定位到断点</span><br><span class=\"line\">Ctrl+F8，切换行断点</span><br><span class=\"line\">Ctrl+F9，生成项目</span><br><span class=\"line\">Alt+1，项目</span><br><span class=\"line\">Alt+2，收藏</span><br><span class=\"line\">Alt+6，TODO</span><br><span class=\"line\">Alt+7，结构</span><br><span class=\"line\">Ctrl+Shift+C，复制路径</span><br><span class=\"line\">Ctrl+Alt+Shift+C，复制引用，必须选择类名</span><br><span class=\"line\">Ctrl+Alt+Y，同步</span><br><span class=\"line\">Ctrl+~，快速切换方案（界面外观、代码风格、快捷键映射等菜单）</span><br><span class=\"line\">Shift+F12，还原默认布局</span><br><span class=\"line\">Ctrl+Shift+F12，隐藏/恢复所有窗口</span><br><span class=\"line\">Ctrl+F4，关闭</span><br><span class=\"line\">Ctrl+Shift+F4，关闭活动选项卡</span><br><span class=\"line\">Ctrl+Tab，转到下一个拆分器</span><br><span class=\"line\">Ctrl+Shift+Tab，转到上一个拆分器</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"【重构】\"><a href=\"#【重构】\" class=\"headerlink\" title=\"【重构】\"></a>【重构】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+Alt+Shift+T，弹出重构菜单</span><br><span class=\"line\">Shift+F6，重命名</span><br><span class=\"line\">F6，移动</span><br><span class=\"line\">F5，复制</span><br><span class=\"line\">Alt+Delete，安全删除</span><br><span class=\"line\">Ctrl+Alt+N，内联</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"【查找】\"><a href=\"#【查找】\" class=\"headerlink\" title=\"【查找】\"></a>【查找】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+F，查找</span><br><span class=\"line\">Ctrl+R，替换</span><br><span class=\"line\">F3，查找下一个</span><br><span class=\"line\">Shift+F3，查找上一个</span><br><span class=\"line\">Ctrl+Shift+F，在路径中查找</span><br><span class=\"line\">Ctrl+Shift+R，在路径中替换</span><br><span class=\"line\">Ctrl+Shift+S，搜索结构</span><br><span class=\"line\">Ctrl+Shift+M，替换结构</span><br><span class=\"line\">Alt+F7，查找用法</span><br><span class=\"line\">Ctrl+Alt+F7，显示用法</span><br><span class=\"line\">Ctrl+F7，在文件中查找用法</span><br><span class=\"line\">Ctrl+Shift+F7，在文件中高亮显示用法</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"【VCS】\"><a href=\"#【VCS】\" class=\"headerlink\" title=\"【VCS】\"></a>【VCS】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Alt+~，VCS 操作菜单</span><br><span class=\"line\">Ctrl+K，提交更改</span><br><span class=\"line\">Ctrl+T，更新项目</span><br><span class=\"line\">Ctrl+Alt+Shift+D，显示变化</span><br></pre></td></tr></table></figure>\n\n<p>来源<br><a href=\"https://blog.csdn.net/qq_41289920/article/details/90750786#:~:text=JetBrains%20-%20IDEA%20%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB%201%20Ctrl%2BShift%20%2B%20Enter%EF%BC%8C%E8%AF%AD%E5%8F%A5%E5%AE%8C%E6%88%90,%E5%8F%AF%E4%BB%A5%E9%80%89%E6%8B%A9%209%20Ctrl%2BN%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E7%B1%BB%2010%20Ctrl%2BShift%2BN%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%20More%20items...%20\">JetBrains - IDEA 常用快捷键汇总</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>记录下jetbrains快捷键，提高效率。</p>\n<hr>\n<h3 id=\"【常规】\"><a href=\"#【常规】\" class=\"headerlink\" title=\"【常规】\"></a>【常规】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+Shift + Enter，语句完成</span><br><span class=\"line\">“！”，否定完成，输入表达式时按 “！”键</span><br><span class=\"line\">Ctrl+E，最近的文件</span><br><span class=\"line\">Ctrl+Shift+E，最近更改的文件</span><br><span class=\"line\">Shift+Click，可以关闭文件</span><br><span class=\"line\">Ctrl+[ OR ]，可以跑到大括号的开头与结尾</span><br><span class=\"line\">Ctrl+F12，可以显示当前文件的结构</span><br><span class=\"line\">Ctrl+F7，可以查询当前元素在当前文件中的引用，然后按 F3 可以选择</span><br><span class=\"line\">Ctrl+N，可以快速打开类</span><br><span class=\"line\">Ctrl+Shift+N，可以快速打开文件</span><br><span class=\"line\">Alt+Q，可以看到当前方法的声明</span><br><span class=\"line\">Ctrl+P，可以显示参数信息</span><br><span class=\"line\">Ctrl+Shift+Insert，可以选择剪贴板内容并插入</span><br><span class=\"line\">Alt+Insert，可以生成构造器/Getter/Setter等</span><br><span class=\"line\">Ctrl+Alt+V，可以引入变量。例如：new String();  自动导入变量定义</span><br><span class=\"line\">Ctrl+Alt+T，可以把代码包在一个块内，例如：try/catch</span><br><span class=\"line\">Ctrl+Enter，导入包，自动修正</span><br><span class=\"line\">Ctrl+Alt+L，一键格式化代码</span><br><span class=\"line\">Ctrl+Alt+I，将选中的代码进行自动缩进编排，这个功能在编辑 JSP 文件时也可以工作</span><br><span class=\"line\">Ctrl+Alt+O，优化导入的类和包</span><br><span class=\"line\">Ctrl+R，替换文本</span><br><span class=\"line\">Ctrl+F，查找文本</span><br><span class=\"line\">Ctrl+Shift+Space，自动补全代码</span><br><span class=\"line\">Ctrl+空格，代码提示（与系统输入法快捷键冲突）</span><br><span class=\"line\">Ctrl+Shift+Alt+N，查找类中的方法或变量</span><br><span class=\"line\">Alt+Shift+C，最近的更改</span><br><span class=\"line\">Alt+Shift+Up/Down，上/下移一行</span><br><span class=\"line\">Shift+F6，重构 - 重命名</span><br><span class=\"line\">Ctrl+X，删除行</span><br><span class=\"line\">Ctrl+D，复制行</span><br><span class=\"line\">Ctrl+/或Ctrl+Shift+/，注释（//或者/**/）</span><br><span class=\"line\">Ctrl+J，自动代码（例如：serr）</span><br><span class=\"line\">Ctrl+Alt+J，用动态模板环绕</span><br><span class=\"line\">Ctrl+H，显示类结构图（类的继承层次）</span><br><span class=\"line\">Ctrl+Q，显示注释文档</span><br><span class=\"line\">Alt+F1，查找代码所在位置</span><br><span class=\"line\">Alt+1，快速打开或隐藏工程面板</span><br><span class=\"line\">Ctrl+Alt+left/right，返回至上次浏览的位置</span><br><span class=\"line\">Alt+left/right，切换代码视图</span><br><span class=\"line\">Alt+Up/Down，在方法间快速移动定位</span><br><span class=\"line\">Ctrl+Shift+Up/Down，向上/下移动语句</span><br><span class=\"line\">F2 或 Shift+F2，高亮错误或警告快速定位</span><br><span class=\"line\">Tab，代码标签输入完成后，按 Tab，生成代码</span><br><span class=\"line\">Ctrl+Shift+F7，高亮显示所有该文本，按 Esc 高亮消失</span><br><span class=\"line\">Alt+F3，逐个往下查找相同文本，并高亮显示</span><br><span class=\"line\">Ctrl+Up/Down，光标中转到第一行或最后一行下</span><br><span class=\"line\">Ctrl+B/Ctrl+Click，快速打开光标处的类或方法（跳转到定义处）</span><br><span class=\"line\">Ctrl+Alt+B，跳转到方法实现处</span><br><span class=\"line\">Ctrl+Shift+Backspace，跳转到上次编辑的地方</span><br><span class=\"line\">Ctrl+O，重写方法</span><br><span class=\"line\">Ctrl+Alt+Space，类名自动完成</span><br><span class=\"line\">Ctrl+Alt+Up/Down，快速跳转搜索结果</span><br><span class=\"line\">Ctrl+Shift+J，整合两行</span><br><span class=\"line\">Alt+F8，计算变量值</span><br><span class=\"line\">Ctrl+Shift+V，可以将最近使用的剪贴板内容选择插入到文本</span><br><span class=\"line\">Ctrl+Alt+Shift+V，简单粘贴</span><br><span class=\"line\">Shift+Esc，不仅可以把焦点移到编辑器上，而且还可以隐藏当前（或最后活动的）工具窗口</span><br><span class=\"line\">F12，把焦点从编辑器移到最近使用的工具窗口</span><br><span class=\"line\">Shift+F1，要打开编辑器光标字符处使用的类或者方法 Java 文档的浏览器</span><br><span class=\"line\">Ctrl+W，可以选择单词继而语句继而行继而函数</span><br><span class=\"line\">Ctrl+Shift+W，取消选择光标所在词</span><br><span class=\"line\">Alt+F7，查找整个工程中使用地某一个类、方法或者变量的位置</span><br><span class=\"line\">Ctrl+I，实现方法</span><br><span class=\"line\">Ctrl+Shift+U，大小写转化</span><br><span class=\"line\">Ctrl+Y，删除当前行</span><br><span class=\"line\">Shift+Enter，向下插入新行</span><br><span class=\"line\">psvm/sout，main/System.out.println(); Ctrl+J，查看更多</span><br><span class=\"line\">Ctrl+Shift+F，全局查找</span><br><span class=\"line\">Ctrl+F，查找/Shift+F3，向上查找/F3，向下查找</span><br><span class=\"line\">Ctrl+Shift+S，高级搜索</span><br><span class=\"line\">Ctrl+U，转到父类</span><br><span class=\"line\">Ctrl+Alt+S，打开设置对话框</span><br><span class=\"line\">Alt+Shift+Inert，开启/关闭列选择模式</span><br><span class=\"line\">Ctrl+Alt+Shift+S，打开当前项目/模块属性</span><br><span class=\"line\">Ctrl+G，定位行</span><br><span class=\"line\">Alt+Home，跳转到导航栏</span><br><span class=\"line\">Ctrl+Enter，上插一行</span><br><span class=\"line\">Ctrl+Backspace，按单词删除</span><br><span class=\"line\">Ctrl+&quot;+/-&quot;，当前方法展开、折叠</span><br><span class=\"line\">Ctrl+Shift+&quot;+/-&quot;，全部展开、折叠</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"【调试部分、编译】\"><a href=\"#【调试部分、编译】\" class=\"headerlink\" title=\"【调试部分、编译】\"></a>【调试部分、编译】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+F2，停止</span><br><span class=\"line\">Alt+Shift+F9，选择 Debug</span><br><span class=\"line\">Alt+Shift+F10，选择 Run</span><br><span class=\"line\">Ctrl+Shift+F9，编译</span><br><span class=\"line\">Ctrl+Shift+F10，运行</span><br><span class=\"line\">Ctrl+Shift+F8，查看断点</span><br><span class=\"line\">F8，步过</span><br><span class=\"line\">F7，步入</span><br><span class=\"line\">Shift+F7，智能步入</span><br><span class=\"line\">Shift+F8，步出</span><br><span class=\"line\">Alt+Shift+F8，强制步过</span><br><span class=\"line\">Alt+Shift+F7，强制步入</span><br><span class=\"line\">Alt+F9，运行至光标处</span><br><span class=\"line\">Ctrl+Alt+F9，强制运行至光标处</span><br><span class=\"line\">F9，恢复程序</span><br><span class=\"line\">Alt+F10，定位到断点</span><br><span class=\"line\">Ctrl+F8，切换行断点</span><br><span class=\"line\">Ctrl+F9，生成项目</span><br><span class=\"line\">Alt+1，项目</span><br><span class=\"line\">Alt+2，收藏</span><br><span class=\"line\">Alt+6，TODO</span><br><span class=\"line\">Alt+7，结构</span><br><span class=\"line\">Ctrl+Shift+C，复制路径</span><br><span class=\"line\">Ctrl+Alt+Shift+C，复制引用，必须选择类名</span><br><span class=\"line\">Ctrl+Alt+Y，同步</span><br><span class=\"line\">Ctrl+~，快速切换方案（界面外观、代码风格、快捷键映射等菜单）</span><br><span class=\"line\">Shift+F12，还原默认布局</span><br><span class=\"line\">Ctrl+Shift+F12，隐藏/恢复所有窗口</span><br><span class=\"line\">Ctrl+F4，关闭</span><br><span class=\"line\">Ctrl+Shift+F4，关闭活动选项卡</span><br><span class=\"line\">Ctrl+Tab，转到下一个拆分器</span><br><span class=\"line\">Ctrl+Shift+Tab，转到上一个拆分器</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"【重构】\"><a href=\"#【重构】\" class=\"headerlink\" title=\"【重构】\"></a>【重构】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+Alt+Shift+T，弹出重构菜单</span><br><span class=\"line\">Shift+F6，重命名</span><br><span class=\"line\">F6，移动</span><br><span class=\"line\">F5，复制</span><br><span class=\"line\">Alt+Delete，安全删除</span><br><span class=\"line\">Ctrl+Alt+N，内联</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"【查找】\"><a href=\"#【查找】\" class=\"headerlink\" title=\"【查找】\"></a>【查找】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+F，查找</span><br><span class=\"line\">Ctrl+R，替换</span><br><span class=\"line\">F3，查找下一个</span><br><span class=\"line\">Shift+F3，查找上一个</span><br><span class=\"line\">Ctrl+Shift+F，在路径中查找</span><br><span class=\"line\">Ctrl+Shift+R，在路径中替换</span><br><span class=\"line\">Ctrl+Shift+S，搜索结构</span><br><span class=\"line\">Ctrl+Shift+M，替换结构</span><br><span class=\"line\">Alt+F7，查找用法</span><br><span class=\"line\">Ctrl+Alt+F7，显示用法</span><br><span class=\"line\">Ctrl+F7，在文件中查找用法</span><br><span class=\"line\">Ctrl+Shift+F7，在文件中高亮显示用法</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"【VCS】\"><a href=\"#【VCS】\" class=\"headerlink\" title=\"【VCS】\"></a>【VCS】</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Alt+~，VCS 操作菜单</span><br><span class=\"line\">Ctrl+K，提交更改</span><br><span class=\"line\">Ctrl+T，更新项目</span><br><span class=\"line\">Ctrl+Alt+Shift+D，显示变化</span><br></pre></td></tr></table></figure>\n\n<p>来源<br><a href=\"https://blog.csdn.net/qq_41289920/article/details/90750786#:~:text=JetBrains%20-%20IDEA%20%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB%201%20Ctrl%2BShift%20%2B%20Enter%EF%BC%8C%E8%AF%AD%E5%8F%A5%E5%AE%8C%E6%88%90,%E5%8F%AF%E4%BB%A5%E9%80%89%E6%8B%A9%209%20Ctrl%2BN%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E7%B1%BB%2010%20Ctrl%2BShift%2BN%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%20More%20items...%20\">JetBrains - IDEA 常用快捷键汇总</a></p>\n"},{"title":"laravel多对多关联","date":"2022-07-15T01:41:26.000Z","_content":"\n### model层的多对多关系\n\n表结构\n要定义这种关联，需要三个数据库表： users，roles 和 role_user。role_user 表的命名是由关联的两个模型按照字母顺序来的，并且包含了 user_id 和 role_id 字段：\n\n```\nusers\nid - integer\nname - string\n\nroles\nid - integer\nname - string\n\nrole_user\nuser_id - integer\nrole_id - integer\n```\n模型结构\n多对多关联通过调用 belongsToMany 这个内部方法返回的结果来定义，例如，我们在 User 模型中定义 roles 方法：\n```\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass User extends Model\n{\n    /**\n     * 用户拥有的角色\n     */\n    public function roles()\n    {\n        return $this->belongsToMany('App\\Models\\Role');\n    }\n}\n```\n一旦关联关系被定义后，你可以通过 roles「动态属性」获取用户角色：\n```\n$user = App\\Models\\User::find(1);\n\nforeach ($user->roles as $role) {\n    //\n}\n```\n当然，像其它所有关联模型一样，你可以使用 roles 方法，利用链式调用对查询语句添加约束条件：\n```\n$roles = App\\Models\\User::find(1)->roles()->orderBy('name')->get();\n```\n正如前面所提到的，为了确定关联连接表的表名，Eloquent 会按照字母顺序连接两个关联模型的名字。当然，你也可以不使用这种约定，传递第二个参数到 belongsToMany 方法即可：\n```\nreturn $this->belongsToMany('App\\Models\\Role', 'role_user');\n```\n除了自定义连接表的表名，你还可以通过传递额外的参数到 belongsToMany 方法来定义该表中字段的键名。第三个参数是定义此关联的模型在连接表里的外键名，第四个参数是另一个模型在连接表里的外键名：\n```\nreturn $this->belongsToMany('App\\Models\\Role', 'role_user', 'user_id', 'role_id');\n```\n定义反向关联\n要定义多对多的反向关联， 你只需要在关联模型中调用 belongsToMany 方法。我们在 Role 模型中定义 users 方法：\n```\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Role extends Model\n{\n    /**\n     * 拥有此角色的用户\n     */\n    public function users()\n    {\n        return $this->belongsToMany('App\\Models\\User');\n    }\n}\n```\n如你所见，除了引入模型为 App\\Models\\User 外，其它与在 User 模型中定义的完全一样。由于我们重用了 belongsToMany 方法，自定义连接表表名和自定义连接表里的键的字段名称在这里同样适用。\n\n获取中间表字段\n就如你刚才所了解的一样，多对多的关联关系需要一个中间表来提供支持， Eloquent 提供了一些有用的方法来和这张表进行交互。例如，假设我们的 User 对象关联了多个 Role 对象。在获得这些关联对象后，可以使用模型的 pivot 属性访问中间表的属性：\n```\n$user = App\\Models\\User::find(1);\n\nforeach ($user->roles as $role) {\n    echo $role->pivot->created_at;\n}\n```\n需要注意的是，我们获取的每个 Role 模型对象，都会被自动赋予 pivot 属性，它代表中间表的一个模型对象，并且可以像其他的 Eloquent 模型一样使用。\n\n默认情况下，pivot 对象只包含两个关联模型的主键，如果你的中间表里还有其他额外字段，你必须在定义关联时明确指出：\n```\nreturn $this->belongsToMany('App\\Models\\Role')->withPivot('column1', 'column2');\n```\n如果你想让中间表自动维护 created_at 和 updated_at 时间戳，那么在定义关联时附加上 withTimestamps 方法即可：\n```\nreturn $this->belongsToMany('App\\Models\\Role')->withTimestamps();\n```\n注意：在数据透视表上使用时间戳时，该表必须同时具有 created_at 和 updated_at 时间戳字段。\n\n自定义 pivot 属性名称\n如前所述，来自中间表的属性可以使用 pivot 属性访问。但是，你可以自由定制此属性的名称，以便更好的反应其在应用中的用途。\n\n例如，如果你的应用中包含可能订阅的用户，则用户与博客之间可能存在多对多的关系。如果是这种情况，你可能希望将中间表访问器命名为 subscription 取代 pivot。这可以在定义关系时使用 as 方法完成：\n```\nreturn $this->belongsToMany('App\\Models\\Podcast')\n                ->as('subscription')\n                ->withTimestamps();\n```\n一旦定义完成，你可以使用自定义名称访问中间表数据：\n```\n$users = User::with('podcasts')->get();\n\nforeach ($users->flatMap->podcasts as $podcast) {\n    echo $podcast->subscription->created_at;\n}\n```\n通过中间表过滤关系\n在定义关系时，你还可以使用 wherePivot 和 wherePivotIn 方法来过滤 belongsToMany 返回的结果：\n```\nreturn $this->belongsToMany('App\\Models\\Role')->wherePivot('approved', 1);\n\nreturn $this->belongsToMany('App\\Models\\Role')->wherePivotIn('priority', [1, 2]);\n\nreturn $this->belongsToMany('App\\Models\\Role')->wherePivotNotIn('priority', [1, 2]);\n```\n定义中间表模型\n如果你想定义一个自定义模型来表示关联关系中的中间表，可以在定义关联时调用 using 方法。自定义多对多中间表模型都必须扩展自 Illuminate\\Database\\Eloquent\\Relations\\Pivot 类，自定义多对多（多态）中间表模型必须继承 Illuminate\\Database\\Eloquent\\Relations\\MorphPivot 类。例如，我们在写 Role 模型的关联时，使用自定义中间表模型 RoleUser：\n```\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Role extends Model\n{\n    /**\n     * 拥有此角色的所有用户\n     */\n    public function users()\n    {\n        return $this->belongsToMany('App\\Models\\User')->using('App\\Models\\RoleUser');\n    }\n}\n```\n当定义 RoleUser 模型时，我们要扩展 Pivot 类：\n```\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Relations\\Pivot;\n\nclass RoleUser extends Pivot\n{\n    //\n}\n```\n你可以组合使用 using 和 withPivot 从中间表来检索列。例如，通过将列名传递给 withPivot 方法，就可以从 UserRole 中间表中检索出 created_by 和 updated_by 两列数据：\n```\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Role extends Model\n{\n    /**\n     * 拥有此角色的用户\n     */\n    public function users()\n    {\n        return $this->belongsToMany('App\\Models\\User')\n                        ->using('App\\Models\\RoleUser')\n                        ->withPivot([\n                            'created_by',\n                            'updated_by',\n                        ]);\n    }\n}\n```\n注意: Pivot 模型可能不使用 SoftDeletes 特性。 如果您需要软删除数据关联记录，请考虑将您的数据关联模型转换为实际的 Eloquent 模型。\n\n带有递增 ID 的自定义中继模型\n如果你用一个自定义的中继模型定义了多对多的关系，而且这个中继模型拥有一个自增的主键，你应当确保这个自定义中继模型类中定义了一个 incrementing 属性其值为 true。\n\n```\n/**\n * 标识 ID 是否自增\n *\n * @var bool\n */\npublic $incrementing = true;\n```\n\n文章来源:\nhttps://learnku.com/docs/laravel/8.x/eloquent-relationships/9407#000a62","source":"_posts/laravel多对多关联.md","raw":"---\ntitle: laravel多对多关联\ndate: 2022-07-15 09:41:26\ntags:\n - laravel \ncategory:\n - laravel\n---\n\n### model层的多对多关系\n\n表结构\n要定义这种关联，需要三个数据库表： users，roles 和 role_user。role_user 表的命名是由关联的两个模型按照字母顺序来的，并且包含了 user_id 和 role_id 字段：\n\n```\nusers\nid - integer\nname - string\n\nroles\nid - integer\nname - string\n\nrole_user\nuser_id - integer\nrole_id - integer\n```\n模型结构\n多对多关联通过调用 belongsToMany 这个内部方法返回的结果来定义，例如，我们在 User 模型中定义 roles 方法：\n```\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass User extends Model\n{\n    /**\n     * 用户拥有的角色\n     */\n    public function roles()\n    {\n        return $this->belongsToMany('App\\Models\\Role');\n    }\n}\n```\n一旦关联关系被定义后，你可以通过 roles「动态属性」获取用户角色：\n```\n$user = App\\Models\\User::find(1);\n\nforeach ($user->roles as $role) {\n    //\n}\n```\n当然，像其它所有关联模型一样，你可以使用 roles 方法，利用链式调用对查询语句添加约束条件：\n```\n$roles = App\\Models\\User::find(1)->roles()->orderBy('name')->get();\n```\n正如前面所提到的，为了确定关联连接表的表名，Eloquent 会按照字母顺序连接两个关联模型的名字。当然，你也可以不使用这种约定，传递第二个参数到 belongsToMany 方法即可：\n```\nreturn $this->belongsToMany('App\\Models\\Role', 'role_user');\n```\n除了自定义连接表的表名，你还可以通过传递额外的参数到 belongsToMany 方法来定义该表中字段的键名。第三个参数是定义此关联的模型在连接表里的外键名，第四个参数是另一个模型在连接表里的外键名：\n```\nreturn $this->belongsToMany('App\\Models\\Role', 'role_user', 'user_id', 'role_id');\n```\n定义反向关联\n要定义多对多的反向关联， 你只需要在关联模型中调用 belongsToMany 方法。我们在 Role 模型中定义 users 方法：\n```\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Role extends Model\n{\n    /**\n     * 拥有此角色的用户\n     */\n    public function users()\n    {\n        return $this->belongsToMany('App\\Models\\User');\n    }\n}\n```\n如你所见，除了引入模型为 App\\Models\\User 外，其它与在 User 模型中定义的完全一样。由于我们重用了 belongsToMany 方法，自定义连接表表名和自定义连接表里的键的字段名称在这里同样适用。\n\n获取中间表字段\n就如你刚才所了解的一样，多对多的关联关系需要一个中间表来提供支持， Eloquent 提供了一些有用的方法来和这张表进行交互。例如，假设我们的 User 对象关联了多个 Role 对象。在获得这些关联对象后，可以使用模型的 pivot 属性访问中间表的属性：\n```\n$user = App\\Models\\User::find(1);\n\nforeach ($user->roles as $role) {\n    echo $role->pivot->created_at;\n}\n```\n需要注意的是，我们获取的每个 Role 模型对象，都会被自动赋予 pivot 属性，它代表中间表的一个模型对象，并且可以像其他的 Eloquent 模型一样使用。\n\n默认情况下，pivot 对象只包含两个关联模型的主键，如果你的中间表里还有其他额外字段，你必须在定义关联时明确指出：\n```\nreturn $this->belongsToMany('App\\Models\\Role')->withPivot('column1', 'column2');\n```\n如果你想让中间表自动维护 created_at 和 updated_at 时间戳，那么在定义关联时附加上 withTimestamps 方法即可：\n```\nreturn $this->belongsToMany('App\\Models\\Role')->withTimestamps();\n```\n注意：在数据透视表上使用时间戳时，该表必须同时具有 created_at 和 updated_at 时间戳字段。\n\n自定义 pivot 属性名称\n如前所述，来自中间表的属性可以使用 pivot 属性访问。但是，你可以自由定制此属性的名称，以便更好的反应其在应用中的用途。\n\n例如，如果你的应用中包含可能订阅的用户，则用户与博客之间可能存在多对多的关系。如果是这种情况，你可能希望将中间表访问器命名为 subscription 取代 pivot。这可以在定义关系时使用 as 方法完成：\n```\nreturn $this->belongsToMany('App\\Models\\Podcast')\n                ->as('subscription')\n                ->withTimestamps();\n```\n一旦定义完成，你可以使用自定义名称访问中间表数据：\n```\n$users = User::with('podcasts')->get();\n\nforeach ($users->flatMap->podcasts as $podcast) {\n    echo $podcast->subscription->created_at;\n}\n```\n通过中间表过滤关系\n在定义关系时，你还可以使用 wherePivot 和 wherePivotIn 方法来过滤 belongsToMany 返回的结果：\n```\nreturn $this->belongsToMany('App\\Models\\Role')->wherePivot('approved', 1);\n\nreturn $this->belongsToMany('App\\Models\\Role')->wherePivotIn('priority', [1, 2]);\n\nreturn $this->belongsToMany('App\\Models\\Role')->wherePivotNotIn('priority', [1, 2]);\n```\n定义中间表模型\n如果你想定义一个自定义模型来表示关联关系中的中间表，可以在定义关联时调用 using 方法。自定义多对多中间表模型都必须扩展自 Illuminate\\Database\\Eloquent\\Relations\\Pivot 类，自定义多对多（多态）中间表模型必须继承 Illuminate\\Database\\Eloquent\\Relations\\MorphPivot 类。例如，我们在写 Role 模型的关联时，使用自定义中间表模型 RoleUser：\n```\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Role extends Model\n{\n    /**\n     * 拥有此角色的所有用户\n     */\n    public function users()\n    {\n        return $this->belongsToMany('App\\Models\\User')->using('App\\Models\\RoleUser');\n    }\n}\n```\n当定义 RoleUser 模型时，我们要扩展 Pivot 类：\n```\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Relations\\Pivot;\n\nclass RoleUser extends Pivot\n{\n    //\n}\n```\n你可以组合使用 using 和 withPivot 从中间表来检索列。例如，通过将列名传递给 withPivot 方法，就可以从 UserRole 中间表中检索出 created_by 和 updated_by 两列数据：\n```\n<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Role extends Model\n{\n    /**\n     * 拥有此角色的用户\n     */\n    public function users()\n    {\n        return $this->belongsToMany('App\\Models\\User')\n                        ->using('App\\Models\\RoleUser')\n                        ->withPivot([\n                            'created_by',\n                            'updated_by',\n                        ]);\n    }\n}\n```\n注意: Pivot 模型可能不使用 SoftDeletes 特性。 如果您需要软删除数据关联记录，请考虑将您的数据关联模型转换为实际的 Eloquent 模型。\n\n带有递增 ID 的自定义中继模型\n如果你用一个自定义的中继模型定义了多对多的关系，而且这个中继模型拥有一个自增的主键，你应当确保这个自定义中继模型类中定义了一个 incrementing 属性其值为 true。\n\n```\n/**\n * 标识 ID 是否自增\n *\n * @var bool\n */\npublic $incrementing = true;\n```\n\n文章来源:\nhttps://learnku.com/docs/laravel/8.x/eloquent-relationships/9407#000a62","slug":"laravel多对多关联","published":1,"updated":"2023-06-13T11:34:27.839Z","_id":"cl764i3n6000djww5cu2s1kau","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"model层的多对多关系\"><a href=\"#model层的多对多关系\" class=\"headerlink\" title=\"model层的多对多关系\"></a>model层的多对多关系</h3><p>表结构<br>要定义这种关联，需要三个数据库表： users，roles 和 role_user。role_user 表的命名是由关联的两个模型按照字母顺序来的，并且包含了 user_id 和 role_id 字段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">users</span><br><span class=\"line\">id - integer</span><br><span class=\"line\">name - string</span><br><span class=\"line\"></span><br><span class=\"line\">roles</span><br><span class=\"line\">id - integer</span><br><span class=\"line\">name - string</span><br><span class=\"line\"></span><br><span class=\"line\">role_user</span><br><span class=\"line\">user_id - integer</span><br><span class=\"line\">role_id - integer</span><br></pre></td></tr></table></figure>\n<p>模型结构<br>多对多关联通过调用 belongsToMany 这个内部方法返回的结果来定义，例如，我们在 User 模型中定义 roles 方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">namespace App\\Models;</span><br><span class=\"line\"></span><br><span class=\"line\">use Illuminate\\Database\\Eloquent\\Model;</span><br><span class=\"line\"></span><br><span class=\"line\">class User extends Model</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 用户拥有的角色</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public function roles()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一旦关联关系被定义后，你可以通过 roles「动态属性」获取用户角色：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$user = App\\Models\\User::find(1);</span><br><span class=\"line\"></span><br><span class=\"line\">foreach ($user-&gt;roles as $role) &#123;</span><br><span class=\"line\">    //</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当然，像其它所有关联模型一样，你可以使用 roles 方法，利用链式调用对查询语句添加约束条件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$roles = App\\Models\\User::find(1)-&gt;roles()-&gt;orderBy(&#x27;name&#x27;)-&gt;get();</span><br></pre></td></tr></table></figure>\n<p>正如前面所提到的，为了确定关联连接表的表名，Eloquent 会按照字母顺序连接两个关联模型的名字。当然，你也可以不使用这种约定，传递第二个参数到 belongsToMany 方法即可：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;, &#x27;role_user&#x27;);</span><br></pre></td></tr></table></figure>\n<p>除了自定义连接表的表名，你还可以通过传递额外的参数到 belongsToMany 方法来定义该表中字段的键名。第三个参数是定义此关联的模型在连接表里的外键名，第四个参数是另一个模型在连接表里的外键名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;, &#x27;role_user&#x27;, &#x27;user_id&#x27;, &#x27;role_id&#x27;);</span><br></pre></td></tr></table></figure>\n<p>定义反向关联<br>要定义多对多的反向关联， 你只需要在关联模型中调用 belongsToMany 方法。我们在 Role 模型中定义 users 方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">namespace App\\Models;</span><br><span class=\"line\"></span><br><span class=\"line\">use Illuminate\\Database\\Eloquent\\Model;</span><br><span class=\"line\"></span><br><span class=\"line\">class Role extends Model</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 拥有此角色的用户</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public function users()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return $this-&gt;belongsToMany(&#x27;App\\Models\\User&#x27;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如你所见，除了引入模型为 App\\Models\\User 外，其它与在 User 模型中定义的完全一样。由于我们重用了 belongsToMany 方法，自定义连接表表名和自定义连接表里的键的字段名称在这里同样适用。</p>\n<p>获取中间表字段<br>就如你刚才所了解的一样，多对多的关联关系需要一个中间表来提供支持， Eloquent 提供了一些有用的方法来和这张表进行交互。例如，假设我们的 User 对象关联了多个 Role 对象。在获得这些关联对象后，可以使用模型的 pivot 属性访问中间表的属性：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$user = App\\Models\\User::find(1);</span><br><span class=\"line\"></span><br><span class=\"line\">foreach ($user-&gt;roles as $role) &#123;</span><br><span class=\"line\">    echo $role-&gt;pivot-&gt;created_at;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，我们获取的每个 Role 模型对象，都会被自动赋予 pivot 属性，它代表中间表的一个模型对象，并且可以像其他的 Eloquent 模型一样使用。</p>\n<p>默认情况下，pivot 对象只包含两个关联模型的主键，如果你的中间表里还有其他额外字段，你必须在定义关联时明确指出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;)-&gt;withPivot(&#x27;column1&#x27;, &#x27;column2&#x27;);</span><br></pre></td></tr></table></figure>\n<p>如果你想让中间表自动维护 created_at 和 updated_at 时间戳，那么在定义关联时附加上 withTimestamps 方法即可：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;)-&gt;withTimestamps();</span><br></pre></td></tr></table></figure>\n<p>注意：在数据透视表上使用时间戳时，该表必须同时具有 created_at 和 updated_at 时间戳字段。</p>\n<p>自定义 pivot 属性名称<br>如前所述，来自中间表的属性可以使用 pivot 属性访问。但是，你可以自由定制此属性的名称，以便更好的反应其在应用中的用途。</p>\n<p>例如，如果你的应用中包含可能订阅的用户，则用户与博客之间可能存在多对多的关系。如果是这种情况，你可能希望将中间表访问器命名为 subscription 取代 pivot。这可以在定义关系时使用 as 方法完成：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Podcast&#x27;)</span><br><span class=\"line\">                -&gt;as(&#x27;subscription&#x27;)</span><br><span class=\"line\">                -&gt;withTimestamps();</span><br></pre></td></tr></table></figure>\n<p>一旦定义完成，你可以使用自定义名称访问中间表数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$users = User::with(&#x27;podcasts&#x27;)-&gt;get();</span><br><span class=\"line\"></span><br><span class=\"line\">foreach ($users-&gt;flatMap-&gt;podcasts as $podcast) &#123;</span><br><span class=\"line\">    echo $podcast-&gt;subscription-&gt;created_at;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过中间表过滤关系<br>在定义关系时，你还可以使用 wherePivot 和 wherePivotIn 方法来过滤 belongsToMany 返回的结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;)-&gt;wherePivot(&#x27;approved&#x27;, 1);</span><br><span class=\"line\"></span><br><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;)-&gt;wherePivotIn(&#x27;priority&#x27;, [1, 2]);</span><br><span class=\"line\"></span><br><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;)-&gt;wherePivotNotIn(&#x27;priority&#x27;, [1, 2]);</span><br></pre></td></tr></table></figure>\n<p>定义中间表模型<br>如果你想定义一个自定义模型来表示关联关系中的中间表，可以在定义关联时调用 using 方法。自定义多对多中间表模型都必须扩展自 Illuminate\\Database\\Eloquent\\Relations\\Pivot 类，自定义多对多（多态）中间表模型必须继承 Illuminate\\Database\\Eloquent\\Relations\\MorphPivot 类。例如，我们在写 Role 模型的关联时，使用自定义中间表模型 RoleUser：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">namespace App\\Models;</span><br><span class=\"line\"></span><br><span class=\"line\">use Illuminate\\Database\\Eloquent\\Model;</span><br><span class=\"line\"></span><br><span class=\"line\">class Role extends Model</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 拥有此角色的所有用户</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public function users()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return $this-&gt;belongsToMany(&#x27;App\\Models\\User&#x27;)-&gt;using(&#x27;App\\Models\\RoleUser&#x27;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当定义 RoleUser 模型时，我们要扩展 Pivot 类：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">namespace App\\Models;</span><br><span class=\"line\"></span><br><span class=\"line\">use Illuminate\\Database\\Eloquent\\Relations\\Pivot;</span><br><span class=\"line\"></span><br><span class=\"line\">class RoleUser extends Pivot</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你可以组合使用 using 和 withPivot 从中间表来检索列。例如，通过将列名传递给 withPivot 方法，就可以从 UserRole 中间表中检索出 created_by 和 updated_by 两列数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">namespace App\\Models;</span><br><span class=\"line\"></span><br><span class=\"line\">use Illuminate\\Database\\Eloquent\\Model;</span><br><span class=\"line\"></span><br><span class=\"line\">class Role extends Model</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 拥有此角色的用户</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public function users()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return $this-&gt;belongsToMany(&#x27;App\\Models\\User&#x27;)</span><br><span class=\"line\">                        -&gt;using(&#x27;App\\Models\\RoleUser&#x27;)</span><br><span class=\"line\">                        -&gt;withPivot([</span><br><span class=\"line\">                            &#x27;created_by&#x27;,</span><br><span class=\"line\">                            &#x27;updated_by&#x27;,</span><br><span class=\"line\">                        ]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意: Pivot 模型可能不使用 SoftDeletes 特性。 如果您需要软删除数据关联记录，请考虑将您的数据关联模型转换为实际的 Eloquent 模型。</p>\n<p>带有递增 ID 的自定义中继模型<br>如果你用一个自定义的中继模型定义了多对多的关系，而且这个中继模型拥有一个自增的主键，你应当确保这个自定义中继模型类中定义了一个 incrementing 属性其值为 true。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 标识 ID 是否自增</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @var bool</span><br><span class=\"line\"> */</span><br><span class=\"line\">public $incrementing = true;</span><br></pre></td></tr></table></figure>\n\n<p>文章来源:<br><a href=\"https://learnku.com/docs/laravel/8.x/eloquent-relationships/9407#000a62\">https://learnku.com/docs/laravel/8.x/eloquent-relationships/9407#000a62</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"model层的多对多关系\"><a href=\"#model层的多对多关系\" class=\"headerlink\" title=\"model层的多对多关系\"></a>model层的多对多关系</h3><p>表结构<br>要定义这种关联，需要三个数据库表： users，roles 和 role_user。role_user 表的命名是由关联的两个模型按照字母顺序来的，并且包含了 user_id 和 role_id 字段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">users</span><br><span class=\"line\">id - integer</span><br><span class=\"line\">name - string</span><br><span class=\"line\"></span><br><span class=\"line\">roles</span><br><span class=\"line\">id - integer</span><br><span class=\"line\">name - string</span><br><span class=\"line\"></span><br><span class=\"line\">role_user</span><br><span class=\"line\">user_id - integer</span><br><span class=\"line\">role_id - integer</span><br></pre></td></tr></table></figure>\n<p>模型结构<br>多对多关联通过调用 belongsToMany 这个内部方法返回的结果来定义，例如，我们在 User 模型中定义 roles 方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">namespace App\\Models;</span><br><span class=\"line\"></span><br><span class=\"line\">use Illuminate\\Database\\Eloquent\\Model;</span><br><span class=\"line\"></span><br><span class=\"line\">class User extends Model</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 用户拥有的角色</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public function roles()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一旦关联关系被定义后，你可以通过 roles「动态属性」获取用户角色：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$user = App\\Models\\User::find(1);</span><br><span class=\"line\"></span><br><span class=\"line\">foreach ($user-&gt;roles as $role) &#123;</span><br><span class=\"line\">    //</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当然，像其它所有关联模型一样，你可以使用 roles 方法，利用链式调用对查询语句添加约束条件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$roles = App\\Models\\User::find(1)-&gt;roles()-&gt;orderBy(&#x27;name&#x27;)-&gt;get();</span><br></pre></td></tr></table></figure>\n<p>正如前面所提到的，为了确定关联连接表的表名，Eloquent 会按照字母顺序连接两个关联模型的名字。当然，你也可以不使用这种约定，传递第二个参数到 belongsToMany 方法即可：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;, &#x27;role_user&#x27;);</span><br></pre></td></tr></table></figure>\n<p>除了自定义连接表的表名，你还可以通过传递额外的参数到 belongsToMany 方法来定义该表中字段的键名。第三个参数是定义此关联的模型在连接表里的外键名，第四个参数是另一个模型在连接表里的外键名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;, &#x27;role_user&#x27;, &#x27;user_id&#x27;, &#x27;role_id&#x27;);</span><br></pre></td></tr></table></figure>\n<p>定义反向关联<br>要定义多对多的反向关联， 你只需要在关联模型中调用 belongsToMany 方法。我们在 Role 模型中定义 users 方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">namespace App\\Models;</span><br><span class=\"line\"></span><br><span class=\"line\">use Illuminate\\Database\\Eloquent\\Model;</span><br><span class=\"line\"></span><br><span class=\"line\">class Role extends Model</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 拥有此角色的用户</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public function users()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return $this-&gt;belongsToMany(&#x27;App\\Models\\User&#x27;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如你所见，除了引入模型为 App\\Models\\User 外，其它与在 User 模型中定义的完全一样。由于我们重用了 belongsToMany 方法，自定义连接表表名和自定义连接表里的键的字段名称在这里同样适用。</p>\n<p>获取中间表字段<br>就如你刚才所了解的一样，多对多的关联关系需要一个中间表来提供支持， Eloquent 提供了一些有用的方法来和这张表进行交互。例如，假设我们的 User 对象关联了多个 Role 对象。在获得这些关联对象后，可以使用模型的 pivot 属性访问中间表的属性：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$user = App\\Models\\User::find(1);</span><br><span class=\"line\"></span><br><span class=\"line\">foreach ($user-&gt;roles as $role) &#123;</span><br><span class=\"line\">    echo $role-&gt;pivot-&gt;created_at;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，我们获取的每个 Role 模型对象，都会被自动赋予 pivot 属性，它代表中间表的一个模型对象，并且可以像其他的 Eloquent 模型一样使用。</p>\n<p>默认情况下，pivot 对象只包含两个关联模型的主键，如果你的中间表里还有其他额外字段，你必须在定义关联时明确指出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;)-&gt;withPivot(&#x27;column1&#x27;, &#x27;column2&#x27;);</span><br></pre></td></tr></table></figure>\n<p>如果你想让中间表自动维护 created_at 和 updated_at 时间戳，那么在定义关联时附加上 withTimestamps 方法即可：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;)-&gt;withTimestamps();</span><br></pre></td></tr></table></figure>\n<p>注意：在数据透视表上使用时间戳时，该表必须同时具有 created_at 和 updated_at 时间戳字段。</p>\n<p>自定义 pivot 属性名称<br>如前所述，来自中间表的属性可以使用 pivot 属性访问。但是，你可以自由定制此属性的名称，以便更好的反应其在应用中的用途。</p>\n<p>例如，如果你的应用中包含可能订阅的用户，则用户与博客之间可能存在多对多的关系。如果是这种情况，你可能希望将中间表访问器命名为 subscription 取代 pivot。这可以在定义关系时使用 as 方法完成：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Podcast&#x27;)</span><br><span class=\"line\">                -&gt;as(&#x27;subscription&#x27;)</span><br><span class=\"line\">                -&gt;withTimestamps();</span><br></pre></td></tr></table></figure>\n<p>一旦定义完成，你可以使用自定义名称访问中间表数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$users = User::with(&#x27;podcasts&#x27;)-&gt;get();</span><br><span class=\"line\"></span><br><span class=\"line\">foreach ($users-&gt;flatMap-&gt;podcasts as $podcast) &#123;</span><br><span class=\"line\">    echo $podcast-&gt;subscription-&gt;created_at;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过中间表过滤关系<br>在定义关系时，你还可以使用 wherePivot 和 wherePivotIn 方法来过滤 belongsToMany 返回的结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;)-&gt;wherePivot(&#x27;approved&#x27;, 1);</span><br><span class=\"line\"></span><br><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;)-&gt;wherePivotIn(&#x27;priority&#x27;, [1, 2]);</span><br><span class=\"line\"></span><br><span class=\"line\">return $this-&gt;belongsToMany(&#x27;App\\Models\\Role&#x27;)-&gt;wherePivotNotIn(&#x27;priority&#x27;, [1, 2]);</span><br></pre></td></tr></table></figure>\n<p>定义中间表模型<br>如果你想定义一个自定义模型来表示关联关系中的中间表，可以在定义关联时调用 using 方法。自定义多对多中间表模型都必须扩展自 Illuminate\\Database\\Eloquent\\Relations\\Pivot 类，自定义多对多（多态）中间表模型必须继承 Illuminate\\Database\\Eloquent\\Relations\\MorphPivot 类。例如，我们在写 Role 模型的关联时，使用自定义中间表模型 RoleUser：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">namespace App\\Models;</span><br><span class=\"line\"></span><br><span class=\"line\">use Illuminate\\Database\\Eloquent\\Model;</span><br><span class=\"line\"></span><br><span class=\"line\">class Role extends Model</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 拥有此角色的所有用户</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public function users()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return $this-&gt;belongsToMany(&#x27;App\\Models\\User&#x27;)-&gt;using(&#x27;App\\Models\\RoleUser&#x27;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当定义 RoleUser 模型时，我们要扩展 Pivot 类：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">namespace App\\Models;</span><br><span class=\"line\"></span><br><span class=\"line\">use Illuminate\\Database\\Eloquent\\Relations\\Pivot;</span><br><span class=\"line\"></span><br><span class=\"line\">class RoleUser extends Pivot</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你可以组合使用 using 和 withPivot 从中间表来检索列。例如，通过将列名传递给 withPivot 方法，就可以从 UserRole 中间表中检索出 created_by 和 updated_by 两列数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">namespace App\\Models;</span><br><span class=\"line\"></span><br><span class=\"line\">use Illuminate\\Database\\Eloquent\\Model;</span><br><span class=\"line\"></span><br><span class=\"line\">class Role extends Model</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 拥有此角色的用户</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public function users()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return $this-&gt;belongsToMany(&#x27;App\\Models\\User&#x27;)</span><br><span class=\"line\">                        -&gt;using(&#x27;App\\Models\\RoleUser&#x27;)</span><br><span class=\"line\">                        -&gt;withPivot([</span><br><span class=\"line\">                            &#x27;created_by&#x27;,</span><br><span class=\"line\">                            &#x27;updated_by&#x27;,</span><br><span class=\"line\">                        ]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意: Pivot 模型可能不使用 SoftDeletes 特性。 如果您需要软删除数据关联记录，请考虑将您的数据关联模型转换为实际的 Eloquent 模型。</p>\n<p>带有递增 ID 的自定义中继模型<br>如果你用一个自定义的中继模型定义了多对多的关系，而且这个中继模型拥有一个自增的主键，你应当确保这个自定义中继模型类中定义了一个 incrementing 属性其值为 true。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 标识 ID 是否自增</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @var bool</span><br><span class=\"line\"> */</span><br><span class=\"line\">public $incrementing = true;</span><br></pre></td></tr></table></figure>\n\n<p>文章来源:<br><a href=\"https://learnku.com/docs/laravel/8.x/eloquent-relationships/9407#000a62\">https://learnku.com/docs/laravel/8.x/eloquent-relationships/9407#000a62</a></p>\n"},{"title":"js replaceAll方法有兼容性问题(记录下坑)","date":"2022-08-23T11:11:22.000Z","_content":"\n旧版本游览器不支持该写法,可以转化成\n\nreplace方法\n\n```\nvar str = \"wordwordwordword\";\nvar strNew = str.replace(/word/g,\"Excel\")\nstrNew = replaceAll(str);\n```\n","source":"_posts/js-replaceAll方法有兼容性问题.md","raw":"---\ntitle: js replaceAll方法有兼容性问题(记录下坑)\ndate: 2022-08-23 19:11:22\ntags: js\n---\n\n旧版本游览器不支持该写法,可以转化成\n\nreplace方法\n\n```\nvar str = \"wordwordwordword\";\nvar strNew = str.replace(/word/g,\"Excel\")\nstrNew = replaceAll(str);\n```\n","slug":"js-replaceAll方法有兼容性问题","published":1,"updated":"2022-08-23T11:15:39.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl764i3na000hjww53ngp38kn","content":"<p>旧版本游览器不支持该写法,可以转化成</p>\n<p>replace方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var str = &quot;wordwordwordword&quot;;</span><br><span class=\"line\">var strNew = str.replace(/word/g,&quot;Excel&quot;)</span><br><span class=\"line\">strNew = replaceAll(str);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>旧版本游览器不支持该写法,可以转化成</p>\n<p>replace方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var str = &quot;wordwordwordword&quot;;</span><br><span class=\"line\">var strNew = str.replace(/word/g,&quot;Excel&quot;)</span><br><span class=\"line\">strNew = replaceAll(str);</span><br></pre></td></tr></table></figure>\n"},{"title":"laravel route缓存坑","date":"2022-07-05T02:46:26.000Z","_content":"\n本地访问没有问题,到测试服务器,一直访问不了,路由错误.\n查看route文件路由没问题\n\n---\n最终发现是laravel路由缓存问题\n顺便说一下,路由缓存可以大大提高路由注册的速度.\n引用Laravel社区Wiki:\n路由缓存会大大减少注册所有路由所需的时间。在某些情况下，路由注册的速度甚至能快上 100 倍。\n要生成路由缓存，只需执行 artisan 命令\n\n生成路由缓存命令:\nphp artisan route:cache\n清除路由缓存命令:\nphp artisan route:clear","source":"_posts/laravel-route缓存坑.md","raw":"---\ntitle: laravel route缓存坑\ndate: 2022-07-05 10:46:26\ntags:\n - laravel\ncategories:\n - laravel\n---\n\n本地访问没有问题,到测试服务器,一直访问不了,路由错误.\n查看route文件路由没问题\n\n---\n最终发现是laravel路由缓存问题\n顺便说一下,路由缓存可以大大提高路由注册的速度.\n引用Laravel社区Wiki:\n路由缓存会大大减少注册所有路由所需的时间。在某些情况下，路由注册的速度甚至能快上 100 倍。\n要生成路由缓存，只需执行 artisan 命令\n\n生成路由缓存命令:\nphp artisan route:cache\n清除路由缓存命令:\nphp artisan route:clear","slug":"laravel-route缓存坑","published":1,"updated":"2022-07-07T01:50:45.828Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl764i3nb000ijww5c5agej6q","content":"<p>本地访问没有问题,到测试服务器,一直访问不了,路由错误.<br>查看route文件路由没问题</p>\n<hr>\n<p>最终发现是laravel路由缓存问题<br>顺便说一下,路由缓存可以大大提高路由注册的速度.<br>引用Laravel社区Wiki:<br>路由缓存会大大减少注册所有路由所需的时间。在某些情况下，路由注册的速度甚至能快上 100 倍。<br>要生成路由缓存，只需执行 artisan 命令</p>\n<p>生成路由缓存命令:<br>php artisan route:cache<br>清除路由缓存命令:<br>php artisan route:clear</p>\n","site":{"data":{}},"excerpt":"","more":"<p>本地访问没有问题,到测试服务器,一直访问不了,路由错误.<br>查看route文件路由没问题</p>\n<hr>\n<p>最终发现是laravel路由缓存问题<br>顺便说一下,路由缓存可以大大提高路由注册的速度.<br>引用Laravel社区Wiki:<br>路由缓存会大大减少注册所有路由所需的时间。在某些情况下，路由注册的速度甚至能快上 100 倍。<br>要生成路由缓存，只需执行 artisan 命令</p>\n<p>生成路由缓存命令:<br>php artisan route:cache<br>清除路由缓存命令:<br>php artisan route:clear</p>\n"},{"title":"mysql相关知识","date":"2022-07-11T01:50:07.000Z","_content":"\n### mysql优化\n    - 目前主要是索引的优化\n    - 给查询的字段添加索引,主键索引,外键索引,唯一索引.\n    - 数据量不是特别大的时候,足够了\n    - explain 来查是否命中索引\n    - 分库分表\n\nmysql基础语句\n\n\nmysql索引\n\n\nmysql锁\n\n\nmysql备份\n\n\nmysql分表\n\n","source":"_posts/mysql相关知识.md","raw":"---\ntitle: mysql相关知识\ndate: 2022-07-11 09:50:07\ntags:\n - mysql\ncategory:\n - 数据库\n---\n\n### mysql优化\n    - 目前主要是索引的优化\n    - 给查询的字段添加索引,主键索引,外键索引,唯一索引.\n    - 数据量不是特别大的时候,足够了\n    - explain 来查是否命中索引\n    - 分库分表\n\nmysql基础语句\n\n\nmysql索引\n\n\nmysql锁\n\n\nmysql备份\n\n\nmysql分表\n\n","slug":"mysql相关知识","published":1,"updated":"2022-07-19T02:09:48.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl764i3nd000kjww51dq5e8j9","content":"<h3 id=\"mysql优化\"><a href=\"#mysql优化\" class=\"headerlink\" title=\"mysql优化\"></a>mysql优化</h3><pre><code>- 目前主要是索引的优化\n- 给查询的字段添加索引,主键索引,外键索引,唯一索引.\n- 数据量不是特别大的时候,足够了\n- explain 来查是否命中索引\n- 分库分表\n</code></pre>\n<p>mysql基础语句</p>\n<p>mysql索引</p>\n<p>mysql锁</p>\n<p>mysql备份</p>\n<p>mysql分表</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"mysql优化\"><a href=\"#mysql优化\" class=\"headerlink\" title=\"mysql优化\"></a>mysql优化</h3><pre><code>- 目前主要是索引的优化\n- 给查询的字段添加索引,主键索引,外键索引,唯一索引.\n- 数据量不是特别大的时候,足够了\n- explain 来查是否命中索引\n- 分库分表\n</code></pre>\n<p>mysql基础语句</p>\n<p>mysql索引</p>\n<p>mysql锁</p>\n<p>mysql备份</p>\n<p>mysql分表</p>\n"},{"title":"postMan设置切换本地开发线上环境","date":"2022-08-22T03:52:03.000Z","_content":"\n### 设置环境变量来实现域名和token的变化\n\n开发经常需要切换端口,域名,token等.\n\n手动改太麻烦了\n\n设置环境变量快速切换环境\n\n1.添加环境如图\n<img src=\"/static/images/img_1.png\" width=\"80%\" />\n\n2.使用变量作为token和host\n<img src=\"/static/images/img.png\" width=\"80%\" />\n\n4.就可以快速切换环境\n<img src=\"/static/images/img_2.png\" width=\"80%\" />","source":"_posts/postMan设置切换本地开发线上环境.md","raw":"---\ntitle: postMan设置切换本地开发线上环境\ndate: 2022-08-22 11:52:03\ntags: postman 环境变量\n---\n\n### 设置环境变量来实现域名和token的变化\n\n开发经常需要切换端口,域名,token等.\n\n手动改太麻烦了\n\n设置环境变量快速切换环境\n\n1.添加环境如图\n<img src=\"/static/images/img_1.png\" width=\"80%\" />\n\n2.使用变量作为token和host\n<img src=\"/static/images/img.png\" width=\"80%\" />\n\n4.就可以快速切换环境\n<img src=\"/static/images/img_2.png\" width=\"80%\" />","slug":"postMan设置切换本地开发线上环境","published":1,"updated":"2022-08-22T06:06:45.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl764i3ng000ojww5bv2lfuyp","content":"<h3 id=\"设置环境变量来实现域名和token的变化\"><a href=\"#设置环境变量来实现域名和token的变化\" class=\"headerlink\" title=\"设置环境变量来实现域名和token的变化\"></a>设置环境变量来实现域名和token的变化</h3><p>开发经常需要切换端口,域名,token等.</p>\n<p>手动改太麻烦了</p>\n<p>设置环境变量快速切换环境</p>\n<p>1.添加环境如图<br><img src=\"/static/images/img_1.png\" width=\"80%\" /></p>\n<p>2.使用变量作为token和host<br><img src=\"/static/images/img.png\" width=\"80%\" /></p>\n<p>4.就可以快速切换环境<br><img src=\"/static/images/img_2.png\" width=\"80%\" /></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"设置环境变量来实现域名和token的变化\"><a href=\"#设置环境变量来实现域名和token的变化\" class=\"headerlink\" title=\"设置环境变量来实现域名和token的变化\"></a>设置环境变量来实现域名和token的变化</h3><p>开发经常需要切换端口,域名,token等.</p>\n<p>手动改太麻烦了</p>\n<p>设置环境变量快速切换环境</p>\n<p>1.添加环境如图<br><img src=\"/static/images/img_1.png\" width=\"80%\" /></p>\n<p>2.使用变量作为token和host<br><img src=\"/static/images/img.png\" width=\"80%\" /></p>\n<p>4.就可以快速切换环境<br><img src=\"/static/images/img_2.png\" width=\"80%\" /></p>\n"},{"title":"第一篇文章(当然是利用githubPage和hexo搭建博客)","date":"2022-06-22T02:55:17.000Z","_content":"\n简单的介绍下好了,不做为教程.\n---\n### 环境介绍\n * git node \n\n```angular2html\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo server\n```\n\n五行命令就可以本地运行Hexo博客了,就是这么简单.你学会了吗?\n\n    hexo g \n\n- 生成 public 目录,放到服务器上,就完成了自已的个人博客.\n\n### 服务器需要钱?\n可以利用 githubPages | giteePages |gitlabPages\n免费搭建自已的博客\n\n本博客就是利用 githubPages\n- 域名可以自已在阿里云或者腾讯云等购买,解析到对应的网址.\n- 就可以拥有自已域名的免费博客.\n\n\n### 文中涉及的相关内容,官方相关资料直通车.\n\n[Hexo中文官网](https://hexo.io/zh-cn/index.html)\n[githubPages](https://pages.github.com/)","source":"_posts/博客第一篇文章.md","raw":"---\ntitle: 第一篇文章(当然是利用githubPage和hexo搭建博客)\ndate: 2022-06-22 10:55:17\ntags: hexo\n---\n\n简单的介绍下好了,不做为教程.\n---\n### 环境介绍\n * git node \n\n```angular2html\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo server\n```\n\n五行命令就可以本地运行Hexo博客了,就是这么简单.你学会了吗?\n\n    hexo g \n\n- 生成 public 目录,放到服务器上,就完成了自已的个人博客.\n\n### 服务器需要钱?\n可以利用 githubPages | giteePages |gitlabPages\n免费搭建自已的博客\n\n本博客就是利用 githubPages\n- 域名可以自已在阿里云或者腾讯云等购买,解析到对应的网址.\n- 就可以拥有自已域名的免费博客.\n\n\n### 文中涉及的相关内容,官方相关资料直通车.\n\n[Hexo中文官网](https://hexo.io/zh-cn/index.html)\n[githubPages](https://pages.github.com/)","slug":"博客第一篇文章","published":1,"updated":"2022-06-30T02:12:59.097Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl764i3np0011jww59n8hg047","content":"<h2 id=\"简单的介绍下好了-不做为教程\"><a href=\"#简单的介绍下好了-不做为教程\" class=\"headerlink\" title=\"简单的介绍下好了,不做为教程.\"></a>简单的介绍下好了,不做为教程.</h2><h3 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h3><ul>\n<li>git node </li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\">cd blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p>五行命令就可以本地运行Hexo博客了,就是这么简单.你学会了吗?</p>\n<pre><code>hexo g \n</code></pre>\n<ul>\n<li>生成 public 目录,放到服务器上,就完成了自已的个人博客.</li>\n</ul>\n<h3 id=\"服务器需要钱\"><a href=\"#服务器需要钱\" class=\"headerlink\" title=\"服务器需要钱?\"></a>服务器需要钱?</h3><p>可以利用 githubPages | giteePages |gitlabPages<br>免费搭建自已的博客</p>\n<p>本博客就是利用 githubPages</p>\n<ul>\n<li>域名可以自已在阿里云或者腾讯云等购买,解析到对应的网址.</li>\n<li>就可以拥有自已域名的免费博客.</li>\n</ul>\n<h3 id=\"文中涉及的相关内容-官方相关资料直通车\"><a href=\"#文中涉及的相关内容-官方相关资料直通车\" class=\"headerlink\" title=\"文中涉及的相关内容,官方相关资料直通车.\"></a>文中涉及的相关内容,官方相关资料直通车.</h3><p><a href=\"https://hexo.io/zh-cn/index.html\">Hexo中文官网</a><br><a href=\"https://pages.github.com/\">githubPages</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简单的介绍下好了-不做为教程\"><a href=\"#简单的介绍下好了-不做为教程\" class=\"headerlink\" title=\"简单的介绍下好了,不做为教程.\"></a>简单的介绍下好了,不做为教程.</h2><h3 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h3><ul>\n<li>git node </li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\">cd blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p>五行命令就可以本地运行Hexo博客了,就是这么简单.你学会了吗?</p>\n<pre><code>hexo g \n</code></pre>\n<ul>\n<li>生成 public 目录,放到服务器上,就完成了自已的个人博客.</li>\n</ul>\n<h3 id=\"服务器需要钱\"><a href=\"#服务器需要钱\" class=\"headerlink\" title=\"服务器需要钱?\"></a>服务器需要钱?</h3><p>可以利用 githubPages | giteePages |gitlabPages<br>免费搭建自已的博客</p>\n<p>本博客就是利用 githubPages</p>\n<ul>\n<li>域名可以自已在阿里云或者腾讯云等购买,解析到对应的网址.</li>\n<li>就可以拥有自已域名的免费博客.</li>\n</ul>\n<h3 id=\"文中涉及的相关内容-官方相关资料直通车\"><a href=\"#文中涉及的相关内容-官方相关资料直通车\" class=\"headerlink\" title=\"文中涉及的相关内容,官方相关资料直通车.\"></a>文中涉及的相关内容,官方相关资料直通车.</h3><p><a href=\"https://hexo.io/zh-cn/index.html\">Hexo中文官网</a><br><a href=\"https://pages.github.com/\">githubPages</a></p>\n"},{"title":"层次划分","date":"2022-08-17T12:48:23.000Z","_content":"\n## 简单思考下代码的层次感\n\n---\n\n回顾自已代码,总结出太多问题了.\n有多余的,有沉余的,也有层次不对的.\n仅仅实现了功能.\n好的写法也不是说多难.\n而是好的习惯和思考及经验不足.\n未来还是要写高质量的代码.\n坚持规范自已的代码\n\n路由-->中间件-->参数验证-->逻辑-->数据交互-->前置处理--->后置处理-->异常处理-->返回\n\n代码要有条理,要高质量.\n有层次感\n重复代码封装\n合理分层\n\n\n\n","source":"_posts/层次划分.md","raw":"---\ntitle: 层次划分\ndate: 2022-08-17 20:48:23\ntags:\n---\n\n## 简单思考下代码的层次感\n\n---\n\n回顾自已代码,总结出太多问题了.\n有多余的,有沉余的,也有层次不对的.\n仅仅实现了功能.\n好的写法也不是说多难.\n而是好的习惯和思考及经验不足.\n未来还是要写高质量的代码.\n坚持规范自已的代码\n\n路由-->中间件-->参数验证-->逻辑-->数据交互-->前置处理--->后置处理-->异常处理-->返回\n\n代码要有条理,要高质量.\n有层次感\n重复代码封装\n合理分层\n\n\n\n","slug":"层次划分","published":1,"updated":"2022-08-17T13:45:34.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl764i3ns0012jww5hhlo4wa4","content":"<h2 id=\"简单思考下代码的层次感\"><a href=\"#简单思考下代码的层次感\" class=\"headerlink\" title=\"简单思考下代码的层次感\"></a>简单思考下代码的层次感</h2><hr>\n<p>回顾自已代码,总结出太多问题了.<br>有多余的,有沉余的,也有层次不对的.<br>仅仅实现了功能.<br>好的写法也不是说多难.<br>而是好的习惯和思考及经验不足.<br>未来还是要写高质量的代码.<br>坚持规范自已的代码</p>\n<p>路由–&gt;中间件–&gt;参数验证–&gt;逻辑–&gt;数据交互–&gt;前置处理—&gt;后置处理–&gt;异常处理–&gt;返回</p>\n<p>代码要有条理,要高质量.<br>有层次感<br>重复代码封装<br>合理分层</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简单思考下代码的层次感\"><a href=\"#简单思考下代码的层次感\" class=\"headerlink\" title=\"简单思考下代码的层次感\"></a>简单思考下代码的层次感</h2><hr>\n<p>回顾自已代码,总结出太多问题了.<br>有多余的,有沉余的,也有层次不对的.<br>仅仅实现了功能.<br>好的写法也不是说多难.<br>而是好的习惯和思考及经验不足.<br>未来还是要写高质量的代码.<br>坚持规范自已的代码</p>\n<p>路由–&gt;中间件–&gt;参数验证–&gt;逻辑–&gt;数据交互–&gt;前置处理—&gt;后置处理–&gt;异常处理–&gt;返回</p>\n<p>代码要有条理,要高质量.<br>有层次感<br>重复代码封装<br>合理分层</p>\n"},{"title":"回调接口高并发","date":"2022-06-30T16:37:00.000Z","_content":"## 一次高频率请求的优化\n\n第三方平台的高频率回调事件\n每分钟1k以上的请求\n导致不断的502报错\n\n1.首先接触laravel的频率限制,防止业务不能正常执行.\n2.这种回调事件都是可以异步的,因此使用队列,从而快速响应请求防止连接数过多.\n3.数据库的表索引优化\n4.单独的容器(服务器处理回调事件)\n","source":"_posts/回调接口高并发.md","raw":"---\ntitle: 回调接口高并发\ndate: 2022-07-01 00:37:00\ntags:\n - php\n - laravel \ncategories:\n - laravel\n---\n## 一次高频率请求的优化\n\n第三方平台的高频率回调事件\n每分钟1k以上的请求\n导致不断的502报错\n\n1.首先接触laravel的频率限制,防止业务不能正常执行.\n2.这种回调事件都是可以异步的,因此使用队列,从而快速响应请求防止连接数过多.\n3.数据库的表索引优化\n4.单独的容器(服务器处理回调事件)\n","slug":"回调接口高并发","published":1,"updated":"2022-07-10T15:34:23.073Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl764i3nu0014jww53m2c5ogs","content":"<h2 id=\"一次高频率请求的优化\"><a href=\"#一次高频率请求的优化\" class=\"headerlink\" title=\"一次高频率请求的优化\"></a>一次高频率请求的优化</h2><p>第三方平台的高频率回调事件<br>每分钟1k以上的请求<br>导致不断的502报错</p>\n<p>1.首先接触laravel的频率限制,防止业务不能正常执行.<br>2.这种回调事件都是可以异步的,因此使用队列,从而快速响应请求防止连接数过多.<br>3.数据库的表索引优化<br>4.单独的容器(服务器处理回调事件)</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一次高频率请求的优化\"><a href=\"#一次高频率请求的优化\" class=\"headerlink\" title=\"一次高频率请求的优化\"></a>一次高频率请求的优化</h2><p>第三方平台的高频率回调事件<br>每分钟1k以上的请求<br>导致不断的502报错</p>\n<p>1.首先接触laravel的频率限制,防止业务不能正常执行.<br>2.这种回调事件都是可以异步的,因此使用队列,从而快速响应请求防止连接数过多.<br>3.数据库的表索引优化<br>4.单独的容器(服务器处理回调事件)</p>\n"},{"title":"go运行的DockerFile文件","date":"2022-09-07T04:02:11.000Z","_content":"\ngo的dockerFile文件\n\n    1. /src/pxj/courseSystem 目录要修改成自已的项目目录\n    2. ENTRYPOINT [\"./courseSystem\"] 要修改成自已的目录\n\n```angular2html\nFROM golang:latest\n\nENV GO111MODULE=on \\\n    CGO_ENABLED=0 \\\n    GOPROXY=https://goproxy.cn,direct \\\n    ENV=prod\n\n\nWORKDIR $GOPATH/src/pxj/courseSystem\nCOPY . $GOPATH/src/pxj/courseSystem\nRUN go build .\n\nEXPOSE 8087\nENTRYPOINT [\"./courseSystem\"]\n```\n","source":"_posts/go运行的DockerFile文件.md","raw":"---\ntitle: go运行的DockerFile文件\ndate: 2022-09-07 12:02:11\ntags:\n - docker\n - go\n - dockerFile\ncategory:\n- go\n---\n\ngo的dockerFile文件\n\n    1. /src/pxj/courseSystem 目录要修改成自已的项目目录\n    2. ENTRYPOINT [\"./courseSystem\"] 要修改成自已的目录\n\n```angular2html\nFROM golang:latest\n\nENV GO111MODULE=on \\\n    CGO_ENABLED=0 \\\n    GOPROXY=https://goproxy.cn,direct \\\n    ENV=prod\n\n\nWORKDIR $GOPATH/src/pxj/courseSystem\nCOPY . $GOPATH/src/pxj/courseSystem\nRUN go build .\n\nEXPOSE 8087\nENTRYPOINT [\"./courseSystem\"]\n```\n","slug":"go运行的DockerFile文件","published":1,"updated":"2023-06-13T11:34:27.824Z","_id":"cl7r3lwg20000dww52ogc7vsg","comments":1,"layout":"post","photos":[],"link":"","content":"<p>go的dockerFile文件</p>\n<pre><code>1. /src/pxj/courseSystem 目录要修改成自已的项目目录\n2. ENTRYPOINT [&quot;./courseSystem&quot;] 要修改成自已的目录\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM golang:latest</span><br><span class=\"line\"></span><br><span class=\"line\">ENV GO111MODULE=on \\</span><br><span class=\"line\">    CGO_ENABLED=0 \\</span><br><span class=\"line\">    GOPROXY=https://goproxy.cn,direct \\</span><br><span class=\"line\">    ENV=prod</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">WORKDIR $GOPATH/src/pxj/courseSystem</span><br><span class=\"line\">COPY . $GOPATH/src/pxj/courseSystem</span><br><span class=\"line\">RUN go build .</span><br><span class=\"line\"></span><br><span class=\"line\">EXPOSE 8087</span><br><span class=\"line\">ENTRYPOINT [&quot;./courseSystem&quot;]</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>go的dockerFile文件</p>\n<pre><code>1. /src/pxj/courseSystem 目录要修改成自已的项目目录\n2. ENTRYPOINT [&quot;./courseSystem&quot;] 要修改成自已的目录\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM golang:latest</span><br><span class=\"line\"></span><br><span class=\"line\">ENV GO111MODULE=on \\</span><br><span class=\"line\">    CGO_ENABLED=0 \\</span><br><span class=\"line\">    GOPROXY=https://goproxy.cn,direct \\</span><br><span class=\"line\">    ENV=prod</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">WORKDIR $GOPATH/src/pxj/courseSystem</span><br><span class=\"line\">COPY . $GOPATH/src/pxj/courseSystem</span><br><span class=\"line\">RUN go build .</span><br><span class=\"line\"></span><br><span class=\"line\">EXPOSE 8087</span><br><span class=\"line\">ENTRYPOINT [&quot;./courseSystem&quot;]</span><br></pre></td></tr></table></figure>\n"},{"title":"计算东西(分类)","date":"2022-09-23T09:01:01.000Z","_content":"\n思考是否需要重复的计算\n\n1.如果不需要存起来\n\n2.需要的才动态计算\n    看需要的数据和时间，是否需要队列和后台执行等方案优化。\n\n计算单独的模块\n","source":"_posts/计算东西-分类.md","raw":"---\ntitle: 计算东西(分类)\ndate: 2022-09-23 17:01:01\ntags:\n---\n\n思考是否需要重复的计算\n\n1.如果不需要存起来\n\n2.需要的才动态计算\n    看需要的数据和时间，是否需要队列和后台执行等方案优化。\n\n计算单独的模块\n","slug":"计算东西-分类","published":1,"updated":"2022-12-07T09:06:12.718Z","_id":"cl8e9b8ib0000lkw5fimz00l0","comments":1,"layout":"post","photos":[],"link":"","content":"<p>思考是否需要重复的计算</p>\n<p>1.如果不需要存起来</p>\n<p>2.需要的才动态计算<br>    看需要的数据和时间，是否需要队列和后台执行等方案优化。</p>\n<p>计算单独的模块</p>\n","site":{"data":{}},"excerpt":"","more":"<p>思考是否需要重复的计算</p>\n<p>1.如果不需要存起来</p>\n<p>2.需要的才动态计算<br>    看需要的数据和时间，是否需要队列和后台执行等方案优化。</p>\n<p>计算单独的模块</p>\n"},{"title":"科学上网","date":"2022-09-25T04:26:22.000Z","_content":"\n\n```angular2html\nsudo ufw disable \\\nwget https://git.io/vpnsetup -O vpnsetup.sh && sudo \\\nVPN_IPSEC_PSK='myvpn' \\\nVPN_USER='myvpn' \\\nVPN_PASSWORD='myvpn' \\\nsh vpnsetup.sh\n```\n\n[来源](https://github.com/hwdsl2/setup-ipsec-vpn)\n","source":"_posts/科学上网.md","raw":"---\ntitle: 科学上网\ndate: 2022-09-25 12:26:22\ntags:\n---\n\n\n```angular2html\nsudo ufw disable \\\nwget https://git.io/vpnsetup -O vpnsetup.sh && sudo \\\nVPN_IPSEC_PSK='myvpn' \\\nVPN_USER='myvpn' \\\nVPN_PASSWORD='myvpn' \\\nsh vpnsetup.sh\n```\n\n[来源](https://github.com/hwdsl2/setup-ipsec-vpn)\n","slug":"科学上网","published":1,"updated":"2022-12-07T09:06:12.718Z","_id":"cl8gucd300000wgw54sylhue5","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw disable \\</span><br><span class=\"line\">wget https://git.io/vpnsetup -O vpnsetup.sh &amp;&amp; sudo \\</span><br><span class=\"line\">VPN_IPSEC_PSK=&#x27;myvpn&#x27; \\</span><br><span class=\"line\">VPN_USER=&#x27;myvpn&#x27; \\</span><br><span class=\"line\">VPN_PASSWORD=&#x27;myvpn&#x27; \\</span><br><span class=\"line\">sh vpnsetup.sh</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/hwdsl2/setup-ipsec-vpn\">来源</a></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw disable \\</span><br><span class=\"line\">wget https://git.io/vpnsetup -O vpnsetup.sh &amp;&amp; sudo \\</span><br><span class=\"line\">VPN_IPSEC_PSK=&#x27;myvpn&#x27; \\</span><br><span class=\"line\">VPN_USER=&#x27;myvpn&#x27; \\</span><br><span class=\"line\">VPN_PASSWORD=&#x27;myvpn&#x27; \\</span><br><span class=\"line\">sh vpnsetup.sh</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/hwdsl2/setup-ipsec-vpn\">来源</a></p>\n"},{"title":"goland2021.3破解","date":"2022-12-13T02:44:50.000Z","_content":"\n### 下载破解\n\n[zhile_agent_po.zip](https://pangxuejun.cn/static/zhile_agent_po.zip)\n\n### 进入goland bin 目录\n\n* 打开 goland64.exe.vmoptions\n* 最下方，复制-javaagent:d:/zhile_agent_po/ja-netfilter.jar\n* 复制key.txt的激活码，确认。","source":"_posts/goland2021-3破解.md","raw":"---\ntitle: goland2021.3破解\ndate: 2022-12-13 10:44:50\ntags:\n    - goland\n---\n\n### 下载破解\n\n[zhile_agent_po.zip](https://pangxuejun.cn/static/zhile_agent_po.zip)\n\n### 进入goland bin 目录\n\n* 打开 goland64.exe.vmoptions\n* 最下方，复制-javaagent:d:/zhile_agent_po/ja-netfilter.jar\n* 复制key.txt的激活码，确认。","slug":"goland2021-3破解","published":1,"updated":"2022-12-13T02:51:57.587Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clblmohq80000asv1c9raad2h","content":"<h3 id=\"下载破解\"><a href=\"#下载破解\" class=\"headerlink\" title=\"下载破解\"></a>下载破解</h3><p><a href=\"https://pangxuejun.cn/static/zhile_agent_po.zip\">zhile_agent_po.zip</a></p>\n<h3 id=\"进入goland-bin-目录\"><a href=\"#进入goland-bin-目录\" class=\"headerlink\" title=\"进入goland bin 目录\"></a>进入goland bin 目录</h3><ul>\n<li>打开 goland64.exe.vmoptions</li>\n<li>最下方，复制-javaagent:d:/zhile_agent_po/ja-netfilter.jar</li>\n<li>复制key.txt的激活码，确认。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"下载破解\"><a href=\"#下载破解\" class=\"headerlink\" title=\"下载破解\"></a>下载破解</h3><p><a href=\"https://pangxuejun.cn/static/zhile_agent_po.zip\">zhile_agent_po.zip</a></p>\n<h3 id=\"进入goland-bin-目录\"><a href=\"#进入goland-bin-目录\" class=\"headerlink\" title=\"进入goland bin 目录\"></a>进入goland bin 目录</h3><ul>\n<li>打开 goland64.exe.vmoptions</li>\n<li>最下方，复制-javaagent:d:/zhile_agent_po/ja-netfilter.jar</li>\n<li>复制key.txt的激活码，确认。</li>\n</ul>\n"},{"title":"docker常用命令","date":"2023-06-12T07:56:15.000Z","_content":"\n[docker 文档](https://docs.docker.com/engine/reference/run/)\n\n[csdn docker常用命令](https://blog.csdn.net/qiaoshaw/article/details/117048140)\n\n\n贴两个别人的链接\n","source":"_posts/docker常用命令.md","raw":"---\ntitle: docker常用命令\ndate: 2023-06-12 15:56:15\ntags:\n    - docker\n    - 容器\ncategory:\n- docker\n\n\n---\n\n[docker 文档](https://docs.docker.com/engine/reference/run/)\n\n[csdn docker常用命令](https://blog.csdn.net/qiaoshaw/article/details/117048140)\n\n\n贴两个别人的链接\n","slug":"docker常用命令","published":1,"updated":"2023-06-13T11:34:27.807Z","_id":"clislbha200005ov1e6c8frah","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://docs.docker.com/engine/reference/run/\">docker 文档</a></p>\n<p><a href=\"https://blog.csdn.net/qiaoshaw/article/details/117048140\">csdn docker常用命令</a></p>\n<p>贴两个别人的链接</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://docs.docker.com/engine/reference/run/\">docker 文档</a></p>\n<p><a href=\"https://blog.csdn.net/qiaoshaw/article/details/117048140\">csdn docker常用命令</a></p>\n<p>贴两个别人的链接</p>\n"},{"title":"apiPost自动获取token","date":"2023-06-08T11:50:47.000Z","_content":" \n提高生产力和效率，往往是把基础的东西做好，搭建好。\n\n学习永远是官方文档优先\n\n[ApiPost文档](https://v7-wiki.apipost.cn/docs/2)\n\n环境的切换 \n* 本地\n* 测试 \n* 正式\n\n\n变量的使用\n{{变量名}}\n\n目录公共模块预执行脚本\n\n```angular2html\n\n    await $.ajax({\n    \"url\": apt.environment.getPreUrl() + \"/admin/login/account\",\n    \"method\": \"POST\",\n    \"content-type\": \"appication/json\",\n    \"data\": JSON.stringify({\n    \"type\": \"account\",\n    \"password\": \"admin\",\n    \"username\": \"admin\"\n    }),\n    \"success\": function (response) {\n    response = typeof response == \"object\" ? response : JSON.parse(response);\n    console.log(response);\n    apt.variables.set(\"bearerToken\", response.token);\n    }\n    });\n\n```\n\n利用请求参数&响应值可快速生成api文档\n","source":"_posts/apiPost自动获取token.md","raw":"---\ntitle: apiPost自动获取token\ndate: 2023-06-08 19:50:47\ntags:\n - apiPost\n---\n \n提高生产力和效率，往往是把基础的东西做好，搭建好。\n\n学习永远是官方文档优先\n\n[ApiPost文档](https://v7-wiki.apipost.cn/docs/2)\n\n环境的切换 \n* 本地\n* 测试 \n* 正式\n\n\n变量的使用\n{{变量名}}\n\n目录公共模块预执行脚本\n\n```angular2html\n\n    await $.ajax({\n    \"url\": apt.environment.getPreUrl() + \"/admin/login/account\",\n    \"method\": \"POST\",\n    \"content-type\": \"appication/json\",\n    \"data\": JSON.stringify({\n    \"type\": \"account\",\n    \"password\": \"admin\",\n    \"username\": \"admin\"\n    }),\n    \"success\": function (response) {\n    response = typeof response == \"object\" ? response : JSON.parse(response);\n    console.log(response);\n    apt.variables.set(\"bearerToken\", response.token);\n    }\n    });\n\n```\n\n利用请求参数&响应值可快速生成api文档\n","slug":"apiPost自动获取token","published":1,"updated":"2023-06-12T07:53:18.989Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clislbhab00045ov14lfq3q0d","content":"<p>提高生产力和效率，往往是把基础的东西做好，搭建好。</p>\n<p>学习永远是官方文档优先</p>\n<p><a href=\"https://v7-wiki.apipost.cn/docs/2\">ApiPost文档</a></p>\n<p>环境的切换 </p>\n<ul>\n<li>本地</li>\n<li>测试 </li>\n<li>正式</li>\n</ul>\n<p>变量的使用</p>\n\n\n<p>目录公共模块预执行脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">await $.ajax(&#123;</span><br><span class=\"line\">&quot;url&quot;: apt.environment.getPreUrl() + &quot;/admin/login/account&quot;,</span><br><span class=\"line\">&quot;method&quot;: &quot;POST&quot;,</span><br><span class=\"line\">&quot;content-type&quot;: &quot;appication/json&quot;,</span><br><span class=\"line\">&quot;data&quot;: JSON.stringify(&#123;</span><br><span class=\"line\">&quot;type&quot;: &quot;account&quot;,</span><br><span class=\"line\">&quot;password&quot;: &quot;admin&quot;,</span><br><span class=\"line\">&quot;username&quot;: &quot;admin&quot;</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\">&quot;success&quot;: function (response) &#123;</span><br><span class=\"line\">response = typeof response == &quot;object&quot; ? response : JSON.parse(response);</span><br><span class=\"line\">console.log(response);</span><br><span class=\"line\">apt.variables.set(&quot;bearerToken&quot;, response.token);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>利用请求参数&amp;响应值可快速生成api文档</p>\n","site":{"data":{}},"excerpt":"","more":"<p>提高生产力和效率，往往是把基础的东西做好，搭建好。</p>\n<p>学习永远是官方文档优先</p>\n<p><a href=\"https://v7-wiki.apipost.cn/docs/2\">ApiPost文档</a></p>\n<p>环境的切换 </p>\n<ul>\n<li>本地</li>\n<li>测试 </li>\n<li>正式</li>\n</ul>\n<p>变量的使用</p>\n\n\n<p>目录公共模块预执行脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">await $.ajax(&#123;</span><br><span class=\"line\">&quot;url&quot;: apt.environment.getPreUrl() + &quot;/admin/login/account&quot;,</span><br><span class=\"line\">&quot;method&quot;: &quot;POST&quot;,</span><br><span class=\"line\">&quot;content-type&quot;: &quot;appication/json&quot;,</span><br><span class=\"line\">&quot;data&quot;: JSON.stringify(&#123;</span><br><span class=\"line\">&quot;type&quot;: &quot;account&quot;,</span><br><span class=\"line\">&quot;password&quot;: &quot;admin&quot;,</span><br><span class=\"line\">&quot;username&quot;: &quot;admin&quot;</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\">&quot;success&quot;: function (response) &#123;</span><br><span class=\"line\">response = typeof response == &quot;object&quot; ? response : JSON.parse(response);</span><br><span class=\"line\">console.log(response);</span><br><span class=\"line\">apt.variables.set(&quot;bearerToken&quot;, response.token);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>利用请求参数&amp;响应值可快速生成api文档</p>\n"},{"title":"花生壳内网穿透","date":"2023-06-08T09:15:31.000Z","_content":"\n\n最近想起自已的旧笔记本，本着不浪费的原则和学习的需求。\n放宿舍当linux服务器使用，ubuntu搭建远程数据库使用，方便。\n\n花生壳 linux教程安装使用教程\n[文档](https://service.oray.com/question/11630.html)\n下载 phddns-5.0.0-amd64.deb\n\n安装：dpkg -i phddns-5.0.0-amd64.deb\n\n卸载：dpkg -r phddns\n\n6061端口开放\n\nufw allow 6061\n\n\n\n相关命令\n    * phddns start（启动）| status（状态）| stop（停止）|restart（重启）| reset（重置）|enable（开机自启动）|disable（关闭开机自启动）|version（版本）**\n\n\n1、浏览器访问http://b.oray.com ，输入花生壳Linux 5.0在安装时产生SN码与默认登录密码admin登录。\n\n选择SN码登录\n\n\n免费的只能映射两个端口：\n    - 使用了ssh远程\n    - mysql数据库\n\n作为学习已经足够了\n\n","source":"_posts/花生壳内网穿透.md","raw":"---\ntitle: 花生壳内网穿透\ndate: 2023-06-08 17:15:31\ntags:\n - 花生壳\n - 内网穿透\n---\n\n\n最近想起自已的旧笔记本，本着不浪费的原则和学习的需求。\n放宿舍当linux服务器使用，ubuntu搭建远程数据库使用，方便。\n\n花生壳 linux教程安装使用教程\n[文档](https://service.oray.com/question/11630.html)\n下载 phddns-5.0.0-amd64.deb\n\n安装：dpkg -i phddns-5.0.0-amd64.deb\n\n卸载：dpkg -r phddns\n\n6061端口开放\n\nufw allow 6061\n\n\n\n相关命令\n    * phddns start（启动）| status（状态）| stop（停止）|restart（重启）| reset（重置）|enable（开机自启动）|disable（关闭开机自启动）|version（版本）**\n\n\n1、浏览器访问http://b.oray.com ，输入花生壳Linux 5.0在安装时产生SN码与默认登录密码admin登录。\n\n选择SN码登录\n\n\n免费的只能映射两个端口：\n    - 使用了ssh远程\n    - mysql数据库\n\n作为学习已经足够了\n\n","slug":"花生壳内网穿透","published":1,"updated":"2023-09-05T16:45:29.774Z","_id":"clislbhab00055ov123e3d451","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近想起自已的旧笔记本，本着不浪费的原则和学习的需求。<br>放宿舍当linux服务器使用，ubuntu搭建远程数据库使用，方便。</p>\n<p>花生壳 linux教程安装使用教程<br><a href=\"https://service.oray.com/question/11630.html\">文档</a><br>下载 phddns-5.0.0-amd64.deb</p>\n<p>安装：dpkg -i phddns-5.0.0-amd64.deb</p>\n<p>卸载：dpkg -r phddns</p>\n<p>6061端口开放</p>\n<p>ufw allow 6061</p>\n<p>相关命令<br>    * phddns start（启动）| status（状态）| stop（停止）|restart（重启）| reset（重置）|enable（开机自启动）|disable（关闭开机自启动）|version（版本）**</p>\n<p>1、浏览器访问<a href=\"http://b.oray.com/\">http://b.oray.com</a> ，输入花生壳Linux 5.0在安装时产生SN码与默认登录密码admin登录。</p>\n<p>选择SN码登录</p>\n<p>免费的只能映射两个端口：<br>    - 使用了ssh远程<br>    - mysql数据库</p>\n<p>作为学习已经足够了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近想起自已的旧笔记本，本着不浪费的原则和学习的需求。<br>放宿舍当linux服务器使用，ubuntu搭建远程数据库使用，方便。</p>\n<p>花生壳 linux教程安装使用教程<br><a href=\"https://service.oray.com/question/11630.html\">文档</a><br>下载 phddns-5.0.0-amd64.deb</p>\n<p>安装：dpkg -i phddns-5.0.0-amd64.deb</p>\n<p>卸载：dpkg -r phddns</p>\n<p>6061端口开放</p>\n<p>ufw allow 6061</p>\n<p>相关命令<br>    * phddns start（启动）| status（状态）| stop（停止）|restart（重启）| reset（重置）|enable（开机自启动）|disable（关闭开机自启动）|version（版本）**</p>\n<p>1、浏览器访问<a href=\"http://b.oray.com/\">http://b.oray.com</a> ，输入花生壳Linux 5.0在安装时产生SN码与默认登录密码admin登录。</p>\n<p>选择SN码登录</p>\n<p>免费的只能映射两个端口：<br>    - 使用了ssh远程<br>    - mysql数据库</p>\n<p>作为学习已经足够了</p>\n"},{"title":"docker安装mysql8远程访问","date":"2023-06-08T10:04:29.000Z","_content":"花生壳 内网穿透\n用来作为自已的测试数据库\n\n```angular2html\n拉取mysql镜像\n\ndocker pull msyql:latset\n\n运行\n\ndocker run -it -d --name mysql -p 3306:3306 \\\n-e MYSQL_ROOT_PASSWORD=123456 \\\n-v /root/mysql/config:/etc/mysql/conf.d \\\n-v /root/mysql/data:/var/lib/mysql \\\n-e TZ=Asia/Shanghai mysql\n\n进入容器\ndocker exec -it mysql /bin/bash\n\n登录mysql\n\nmysql -uroot -p\n输入密码\n\n\n授权远程访问\ngrant all privileges on *.* to 'root'@'%';\n\n修改密码\nALTER user 'root'@'%' IDENTIFIED BY '密码';\n刷新数据库权限\n\nflush privileges;\n\n```\n\n\n","source":"_posts/docker安装mysql8远程访问.md","raw":"---\ntitle: docker安装mysql8远程访问\ndate: 2023-06-08 18:04:29\ntags:\n - mysql\n - mysql8\n - docker \ncategory:\n - docker\n\n\n---\n花生壳 内网穿透\n用来作为自已的测试数据库\n\n```angular2html\n拉取mysql镜像\n\ndocker pull msyql:latset\n\n运行\n\ndocker run -it -d --name mysql -p 3306:3306 \\\n-e MYSQL_ROOT_PASSWORD=123456 \\\n-v /root/mysql/config:/etc/mysql/conf.d \\\n-v /root/mysql/data:/var/lib/mysql \\\n-e TZ=Asia/Shanghai mysql\n\n进入容器\ndocker exec -it mysql /bin/bash\n\n登录mysql\n\nmysql -uroot -p\n输入密码\n\n\n授权远程访问\ngrant all privileges on *.* to 'root'@'%';\n\n修改密码\nALTER user 'root'@'%' IDENTIFIED BY '密码';\n刷新数据库权限\n\nflush privileges;\n\n```\n\n\n","slug":"docker安装mysql8远程访问","published":1,"updated":"2023-06-13T11:34:27.824Z","_id":"clislbhac00075ov1egv72pi8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>花生壳 内网穿透<br>用来作为自已的测试数据库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">拉取mysql镜像</span><br><span class=\"line\"></span><br><span class=\"line\">docker pull msyql:latset</span><br><span class=\"line\"></span><br><span class=\"line\">运行</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -it -d --name mysql -p 3306:3306 \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=123456 \\</span><br><span class=\"line\">-v /root/mysql/config:/etc/mysql/conf.d \\</span><br><span class=\"line\">-v /root/mysql/data:/var/lib/mysql \\</span><br><span class=\"line\">-e TZ=Asia/Shanghai mysql</span><br><span class=\"line\"></span><br><span class=\"line\">进入容器</span><br><span class=\"line\">docker exec -it mysql /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">登录mysql</span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\">输入密码</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">授权远程访问</span><br><span class=\"line\">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">修改密码</span><br><span class=\"line\">ALTER user &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;密码&#x27;;</span><br><span class=\"line\">刷新数据库权限</span><br><span class=\"line\"></span><br><span class=\"line\">flush privileges;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>花生壳 内网穿透<br>用来作为自已的测试数据库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">拉取mysql镜像</span><br><span class=\"line\"></span><br><span class=\"line\">docker pull msyql:latset</span><br><span class=\"line\"></span><br><span class=\"line\">运行</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -it -d --name mysql -p 3306:3306 \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=123456 \\</span><br><span class=\"line\">-v /root/mysql/config:/etc/mysql/conf.d \\</span><br><span class=\"line\">-v /root/mysql/data:/var/lib/mysql \\</span><br><span class=\"line\">-e TZ=Asia/Shanghai mysql</span><br><span class=\"line\"></span><br><span class=\"line\">进入容器</span><br><span class=\"line\">docker exec -it mysql /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">登录mysql</span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\">输入密码</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">授权远程访问</span><br><span class=\"line\">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">修改密码</span><br><span class=\"line\">ALTER user &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;密码&#x27;;</span><br><span class=\"line\">刷新数据库权限</span><br><span class=\"line\"></span><br><span class=\"line\">flush privileges;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"docker安装RabbitMQ","date":"2023-06-13T11:30:05.000Z","_content":"\n\n### RabbitMQ\n[RabbitMQ 中文文档](https://rabbitmq.mr-ping.com/)\n\n\n\nphp laravel + RabbitMQ\n\ngo + RabbitMQ\n\npython + RabbitMQ\n\n相关应用","source":"_posts/docker安装RabbitMQ.md","raw":"---\ntitle: docker安装RabbitMQ\ndate: 2023-06-13 19:30:05\ntags:\n - docker\n - RabbitMQ\ncategory:\n - RabbitMQ\n---\n\n\n### RabbitMQ\n[RabbitMQ 中文文档](https://rabbitmq.mr-ping.com/)\n\n\n\nphp laravel + RabbitMQ\n\ngo + RabbitMQ\n\npython + RabbitMQ\n\n相关应用","slug":"docker安装RabbitMQ","published":1,"updated":"2023-06-13T11:50:13.667Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliu81n7q0000ygv1637w5ahv","content":"<h3 id=\"RabbitMQ\"><a href=\"#RabbitMQ\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><p><a href=\"https://rabbitmq.mr-ping.com/\">RabbitMQ 中文文档</a></p>\n<p>php laravel + RabbitMQ</p>\n<p>go + RabbitMQ</p>\n<p>python + RabbitMQ</p>\n<p>相关应用</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"RabbitMQ\"><a href=\"#RabbitMQ\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><p><a href=\"https://rabbitmq.mr-ping.com/\">RabbitMQ 中文文档</a></p>\n<p>php laravel + RabbitMQ</p>\n<p>go + RabbitMQ</p>\n<p>python + RabbitMQ</p>\n<p>相关应用</p>\n"},{"title":"坚持学习","date":"2023-06-19T10:03:37.000Z","_content":"\n\n### 坚持学习，不断提升自我，是一件特别特别特别艰难的事情。\n\n未来\n\n    php go python\n\n    docker k8s\n\n    机器学习、大数据分析\n\n只能说不断的提升自我是一件异常艰难的事情\n\n希望自已可以坚持10年\n","source":"_posts/坚持学习.md","raw":"---\ntitle: 坚持学习\ndate: 2023-06-19 18:03:37\ntags:\n---\n\n\n### 坚持学习，不断提升自我，是一件特别特别特别艰难的事情。\n\n未来\n\n    php go python\n\n    docker k8s\n\n    机器学习、大数据分析\n\n只能说不断的提升自我是一件异常艰难的事情\n\n希望自已可以坚持10年\n","slug":"坚持学习","published":1,"updated":"2023-06-19T10:06:17.877Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljc85dlh0000skv1czrsbixd","content":"<h3 id=\"坚持学习，不断提升自我，是一件特别特别特别艰难的事情。\"><a href=\"#坚持学习，不断提升自我，是一件特别特别特别艰难的事情。\" class=\"headerlink\" title=\"坚持学习，不断提升自我，是一件特别特别特别艰难的事情。\"></a>坚持学习，不断提升自我，是一件特别特别特别艰难的事情。</h3><p>未来</p>\n<pre><code>php go python\n\ndocker k8s\n\n机器学习、大数据分析\n</code></pre>\n<p>只能说不断的提升自我是一件异常艰难的事情</p>\n<p>希望自已可以坚持10年</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"坚持学习，不断提升自我，是一件特别特别特别艰难的事情。\"><a href=\"#坚持学习，不断提升自我，是一件特别特别特别艰难的事情。\" class=\"headerlink\" title=\"坚持学习，不断提升自我，是一件特别特别特别艰难的事情。\"></a>坚持学习，不断提升自我，是一件特别特别特别艰难的事情。</h3><p>未来</p>\n<pre><code>php go python\n\ndocker k8s\n\n机器学习、大数据分析\n</code></pre>\n<p>只能说不断的提升自我是一件异常艰难的事情</p>\n<p>希望自已可以坚持10年</p>\n"},{"title":"阿里云云解析DNSapi","date":"2023-07-18T03:34:07.000Z","_content":"\n\n相关资料：\n\n* [阿里云云解析DNS文档](https://help.aliyun.com/document_detail/2355661.html?spm=a2c4g.29726.0.0.32786527v9N04Y)\n\n* [云解析openApi sdk](https://next.api.aliyun.com/api-tools/sdk/Alidns?version=2015-01-09&language=go-tea)\n\n* [阿里云accessKey](https://help.aliyun.com/document_detail/116401.html?spm=a2c4g.2355661.0.0.14ee6dc8w998EX)\n\ngo实现监听自已的电脑ip，动态解析。\n* [go仓库]()\n\n","source":"_posts/阿里云云解析DNSapi.md","raw":"---\ntitle: 阿里云云解析DNSapi\ndate: 2023-07-18 11:34:07\ntags:\n---\n\n\n相关资料：\n\n* [阿里云云解析DNS文档](https://help.aliyun.com/document_detail/2355661.html?spm=a2c4g.29726.0.0.32786527v9N04Y)\n\n* [云解析openApi sdk](https://next.api.aliyun.com/api-tools/sdk/Alidns?version=2015-01-09&language=go-tea)\n\n* [阿里云accessKey](https://help.aliyun.com/document_detail/116401.html?spm=a2c4g.2355661.0.0.14ee6dc8w998EX)\n\ngo实现监听自已的电脑ip，动态解析。\n* [go仓库]()\n\n","slug":"阿里云云解析DNSapi","published":1,"updated":"2023-07-18T03:39:21.920Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clk9xc1by0000hwv1ejkh91ey","content":"<p>相关资料：</p>\n<ul>\n<li><p><a href=\"https://help.aliyun.com/document_detail/2355661.html?spm=a2c4g.29726.0.0.32786527v9N04Y\">阿里云云解析DNS文档</a></p>\n</li>\n<li><p><a href=\"https://next.api.aliyun.com/api-tools/sdk/Alidns?version=2015-01-09&language=go-tea\">云解析openApi sdk</a></p>\n</li>\n<li><p><a href=\"https://help.aliyun.com/document_detail/116401.html?spm=a2c4g.2355661.0.0.14ee6dc8w998EX\">阿里云accessKey</a></p>\n</li>\n</ul>\n<p>go实现监听自已的电脑ip，动态解析。</p>\n<ul>\n<li><a href=\"\">go仓库</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>相关资料：</p>\n<ul>\n<li><p><a href=\"https://help.aliyun.com/document_detail/2355661.html?spm=a2c4g.29726.0.0.32786527v9N04Y\">阿里云云解析DNS文档</a></p>\n</li>\n<li><p><a href=\"https://next.api.aliyun.com/api-tools/sdk/Alidns?version=2015-01-09&language=go-tea\">云解析openApi sdk</a></p>\n</li>\n<li><p><a href=\"https://help.aliyun.com/document_detail/116401.html?spm=a2c4g.2355661.0.0.14ee6dc8w998EX\">阿里云accessKey</a></p>\n</li>\n</ul>\n<p>go实现监听自已的电脑ip，动态解析。</p>\n<ul>\n<li><a href=\"\">go仓库</a></li>\n</ul>\n"},{"title":"Ubuntu安装docker","date":"2023-09-04T16:50:11.000Z","_content":"","source":"_posts/Ubuntu安装docker.md","raw":"---\ntitle: Ubuntu安装docker\ndate: 2023-09-05 00:50:11\ntags:\n---\n","slug":"Ubuntu安装docker","published":1,"updated":"2023-09-04T16:50:11.866Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm76xgmy0000bwv1dk63bqtn","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"docker阿里云镜像加速","date":"2023-09-05T17:04:02.000Z","_content":"\n[阿里云镜像加速器](https://cr.console.aliyun.com/cn-shenzhen/instances/mirrors)\n\n阿里云文档\n\n```angular2html\n配置镜像加速器\n针对Docker客户端版本大于 1.10.0 的用户\n\n您可以通过修改daemon配置文件/etc/docker/daemon.json来使用加速器\n\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://cevlvoox.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```","source":"_posts/docker阿里云镜像加速.md","raw":"---\ntitle: docker阿里云镜像加速\ndate: 2023-09-06 01:04:02\ntags:\n  - docker\ncategory:\n  - 运维\n---\n\n[阿里云镜像加速器](https://cr.console.aliyun.com/cn-shenzhen/instances/mirrors)\n\n阿里云文档\n\n```angular2html\n配置镜像加速器\n针对Docker客户端版本大于 1.10.0 的用户\n\n您可以通过修改daemon配置文件/etc/docker/daemon.json来使用加速器\n\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://cevlvoox.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```","slug":"docker阿里云镜像加速","published":1,"updated":"2023-09-05T17:06:30.362Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm76xgn30001bwv1as2542pf","content":"<p><a href=\"https://cr.console.aliyun.com/cn-shenzhen/instances/mirrors\">阿里云镜像加速器</a></p>\n<p>阿里云文档</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置镜像加速器</span><br><span class=\"line\">针对Docker客户端版本大于 1.10.0 的用户</span><br><span class=\"line\"></span><br><span class=\"line\">您可以通过修改daemon配置文件/etc/docker/daemon.json来使用加速器</span><br><span class=\"line\"></span><br><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [&quot;https://cevlvoox.mirror.aliyuncs.com&quot;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://cr.console.aliyun.com/cn-shenzhen/instances/mirrors\">阿里云镜像加速器</a></p>\n<p>阿里云文档</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置镜像加速器</span><br><span class=\"line\">针对Docker客户端版本大于 1.10.0 的用户</span><br><span class=\"line\"></span><br><span class=\"line\">您可以通过修改daemon配置文件/etc/docker/daemon.json来使用加速器</span><br><span class=\"line\"></span><br><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [&quot;https://cevlvoox.mirror.aliyuncs.com&quot;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>"},{"title":"分类&标签","date":"2023-09-04T16:50:54.000Z","_content":"\n### 博客文章的分类\n* 编程语言\n* 服务器\n* 数据库\n* 集群\n* 运维\n* 后端\n* 前端\n\n### 博客文章的分类下标签\n\n* 编程语言分类\n  * go\n  * php\n  * c\n  * java\n  * python\n* 服务器\n  * ubuntu\n* 数据库\n  * mysql\n  * redis\n* 集群\n  * k8s\n* 运维\n  * docker\n* 后端\n  * \n* 前端\n  * vue\n  * react\n  * js\n  * uniapp","source":"_posts/分类-标签.md","raw":"---\ntitle: 分类&标签\ndate: 2023-09-05 00:50:54\ntags:\n---\n\n### 博客文章的分类\n* 编程语言\n* 服务器\n* 数据库\n* 集群\n* 运维\n* 后端\n* 前端\n\n### 博客文章的分类下标签\n\n* 编程语言分类\n  * go\n  * php\n  * c\n  * java\n  * python\n* 服务器\n  * ubuntu\n* 数据库\n  * mysql\n  * redis\n* 集群\n  * k8s\n* 运维\n  * docker\n* 后端\n  * \n* 前端\n  * vue\n  * react\n  * js\n  * uniapp","slug":"分类-标签","published":1,"updated":"2023-09-04T16:57:06.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm76xgn40002bwv1ebn6a0n2","content":"<h3 id=\"博客文章的分类\"><a href=\"#博客文章的分类\" class=\"headerlink\" title=\"博客文章的分类\"></a>博客文章的分类</h3><ul>\n<li>编程语言</li>\n<li>服务器</li>\n<li>数据库</li>\n<li>集群</li>\n<li>运维</li>\n<li>后端</li>\n<li>前端</li>\n</ul>\n<h3 id=\"博客文章的分类下标签\"><a href=\"#博客文章的分类下标签\" class=\"headerlink\" title=\"博客文章的分类下标签\"></a>博客文章的分类下标签</h3><ul>\n<li>编程语言分类<ul>\n<li>go</li>\n<li>php</li>\n<li>c</li>\n<li>java</li>\n<li>python</li>\n</ul>\n</li>\n<li>服务器<ul>\n<li>ubuntu</li>\n</ul>\n</li>\n<li>数据库<ul>\n<li>mysql</li>\n<li>redis</li>\n</ul>\n</li>\n<li>集群<ul>\n<li>k8s</li>\n</ul>\n</li>\n<li>运维<ul>\n<li>docker</li>\n</ul>\n</li>\n<li>后端<br>* </li>\n<li>前端<ul>\n<li>vue</li>\n<li>react</li>\n<li>js</li>\n<li>uniapp</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"博客文章的分类\"><a href=\"#博客文章的分类\" class=\"headerlink\" title=\"博客文章的分类\"></a>博客文章的分类</h3><ul>\n<li>编程语言</li>\n<li>服务器</li>\n<li>数据库</li>\n<li>集群</li>\n<li>运维</li>\n<li>后端</li>\n<li>前端</li>\n</ul>\n<h3 id=\"博客文章的分类下标签\"><a href=\"#博客文章的分类下标签\" class=\"headerlink\" title=\"博客文章的分类下标签\"></a>博客文章的分类下标签</h3><ul>\n<li>编程语言分类<ul>\n<li>go</li>\n<li>php</li>\n<li>c</li>\n<li>java</li>\n<li>python</li>\n</ul>\n</li>\n<li>服务器<ul>\n<li>ubuntu</li>\n</ul>\n</li>\n<li>数据库<ul>\n<li>mysql</li>\n<li>redis</li>\n</ul>\n</li>\n<li>集群<ul>\n<li>k8s</li>\n</ul>\n</li>\n<li>运维<ul>\n<li>docker</li>\n</ul>\n</li>\n<li>后端<br>* </li>\n<li>前端<ul>\n<li>vue</li>\n<li>react</li>\n<li>js</li>\n<li>uniapp</li>\n</ul>\n</li>\n</ul>\n"},{"title":"linux常用命令","date":"2023-09-05T17:07:40.000Z","_content":"\n\n### ubuntu\n\n * 防火墙ufw\n    \n```angular2html\nsudo ufw allow ssh #配置允许 SSH 远程连接\nsudo ufw allow 6061 #配置允许 端口6061（花生壳）\nsudo ufw enable #启动\nsudo ufw disable #禁止\nsudo ufw status #状态\nufw allow port_number/protocol #例如sudo ufw allow 6061/tcp\nsudo ufw allow 7100:7200/tcp # 范围端口\nsudo ufw allow 7100:7200/udp\n```\n\n关联链接：https://zhuanlan.zhihu.com/p/139381645\n","source":"_posts/linux常用命令.md","raw":"---\ntitle: linux常用命令\ndate: 2023-09-06 01:07:40\ntags:\n---\n\n\n### ubuntu\n\n * 防火墙ufw\n    \n```angular2html\nsudo ufw allow ssh #配置允许 SSH 远程连接\nsudo ufw allow 6061 #配置允许 端口6061（花生壳）\nsudo ufw enable #启动\nsudo ufw disable #禁止\nsudo ufw status #状态\nufw allow port_number/protocol #例如sudo ufw allow 6061/tcp\nsudo ufw allow 7100:7200/tcp # 范围端口\nsudo ufw allow 7100:7200/udp\n```\n\n关联链接：https://zhuanlan.zhihu.com/p/139381645\n","slug":"linux常用命令","published":1,"updated":"2023-09-05T17:13:40.167Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm76xgn80005bwv1b6vjgzqg","content":"<h3 id=\"ubuntu\"><a href=\"#ubuntu\" class=\"headerlink\" title=\"ubuntu\"></a>ubuntu</h3><ul>\n<li>防火墙ufw</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw allow ssh #配置允许 SSH 远程连接</span><br><span class=\"line\">sudo ufw allow 6061 #配置允许 端口6061（花生壳）</span><br><span class=\"line\">sudo ufw enable #启动</span><br><span class=\"line\">sudo ufw disable #禁止</span><br><span class=\"line\">sudo ufw status #状态</span><br><span class=\"line\">ufw allow port_number/protocol #例如sudo ufw allow 6061/tcp</span><br><span class=\"line\">sudo ufw allow 7100:7200/tcp # 范围端口</span><br><span class=\"line\">sudo ufw allow 7100:7200/udp</span><br></pre></td></tr></table></figure>\n\n<p>关联链接：<a href=\"https://zhuanlan.zhihu.com/p/139381645\">https://zhuanlan.zhihu.com/p/139381645</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"ubuntu\"><a href=\"#ubuntu\" class=\"headerlink\" title=\"ubuntu\"></a>ubuntu</h3><ul>\n<li>防火墙ufw</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw allow ssh #配置允许 SSH 远程连接</span><br><span class=\"line\">sudo ufw allow 6061 #配置允许 端口6061（花生壳）</span><br><span class=\"line\">sudo ufw enable #启动</span><br><span class=\"line\">sudo ufw disable #禁止</span><br><span class=\"line\">sudo ufw status #状态</span><br><span class=\"line\">ufw allow port_number/protocol #例如sudo ufw allow 6061/tcp</span><br><span class=\"line\">sudo ufw allow 7100:7200/tcp # 范围端口</span><br><span class=\"line\">sudo ufw allow 7100:7200/udp</span><br></pre></td></tr></table></figure>\n\n<p>关联链接：<a href=\"https://zhuanlan.zhihu.com/p/139381645\">https://zhuanlan.zhihu.com/p/139381645</a></p>\n"},{"title":"【Ubuntu 22.04 LTS】设置笔记本合并盖子不休眠","date":"2023-09-04T16:43:26.000Z","_content":"配置文件\n```angular2html\n/etc/systemd/logind.conf\n```\n\n配置说明\n* HandlePowerKey: 按下电源键后的行为，默认power off \n* HandleSleepKey: 按下挂起键后的行为，默认suspend \n* HandleHibernateKey: 按下休眠键后的行为，默认hibernate \n* HandleLidSwitch: 合上笔记本盖后的行为，默认suspend\n\n只监视带有 “power-switch” 标签的 输入设备的 key(按下按钮)/lid(合上盖子) 事件。\n\n如果主机插入了一个扩展坞(docking station) 或者连接了多个显示器， 那么\"合上盖子\"将执行 HandleLidSwitchDocked= 动作；\n\n如果主机使用外部电源， 并且 HandleLidSwitchExternalPower= 不是默认值(“ignore”)， 那么\"合上盖子\"将执行 HandleLidSwitchExternalPower= 动作； 否则将执行 HandleLidSwitch= 动作。\n\n参数说明:\n```angular2html\nignore(无操作),\npoweroff(关闭系统并切断电源),\nreboot(重新启动),\nhalt(关闭系统但不切断电源),\nkexec(调用内核\"kexec\"函数),\nsuspend(休眠到内存),\nhibernate(休眠到硬盘),\nhybrid-sleep(同时休眠到内存与硬盘),\nsuspend-then-hibernate(先休眠到内存超时后再休眠到硬盘),\nlock(锁屏)\n```\n\n```angular2html\nHandleLidSwitch=ignore\nHandleLidSwitch=lock\nservice systemd-logind restart\n```\n\n\n引用：https://blog.csdn.net/qq_31635851/article/details/124627990","source":"_posts/【Ubuntu-22-04-LTS】设置笔记本合并盖子不休眠.md","raw":"---\ntitle: 【Ubuntu 22.04 LTS】设置笔记本合并盖子不休眠\ndate: 2023-09-05 00:43:26\ntags:\n  - ubuntu\n---\n配置文件\n```angular2html\n/etc/systemd/logind.conf\n```\n\n配置说明\n* HandlePowerKey: 按下电源键后的行为，默认power off \n* HandleSleepKey: 按下挂起键后的行为，默认suspend \n* HandleHibernateKey: 按下休眠键后的行为，默认hibernate \n* HandleLidSwitch: 合上笔记本盖后的行为，默认suspend\n\n只监视带有 “power-switch” 标签的 输入设备的 key(按下按钮)/lid(合上盖子) 事件。\n\n如果主机插入了一个扩展坞(docking station) 或者连接了多个显示器， 那么\"合上盖子\"将执行 HandleLidSwitchDocked= 动作；\n\n如果主机使用外部电源， 并且 HandleLidSwitchExternalPower= 不是默认值(“ignore”)， 那么\"合上盖子\"将执行 HandleLidSwitchExternalPower= 动作； 否则将执行 HandleLidSwitch= 动作。\n\n参数说明:\n```angular2html\nignore(无操作),\npoweroff(关闭系统并切断电源),\nreboot(重新启动),\nhalt(关闭系统但不切断电源),\nkexec(调用内核\"kexec\"函数),\nsuspend(休眠到内存),\nhibernate(休眠到硬盘),\nhybrid-sleep(同时休眠到内存与硬盘),\nsuspend-then-hibernate(先休眠到内存超时后再休眠到硬盘),\nlock(锁屏)\n```\n\n```angular2html\nHandleLidSwitch=ignore\nHandleLidSwitch=lock\nservice systemd-logind restart\n```\n\n\n引用：https://blog.csdn.net/qq_31635851/article/details/124627990","slug":"【Ubuntu-22-04-LTS】设置笔记本合并盖子不休眠","published":1,"updated":"2023-09-04T16:49:24.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm76xgn90006bwv18jpe01mj","content":"<p>配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/systemd/logind.conf</span><br></pre></td></tr></table></figure>\n\n<p>配置说明</p>\n<ul>\n<li>HandlePowerKey: 按下电源键后的行为，默认power off </li>\n<li>HandleSleepKey: 按下挂起键后的行为，默认suspend </li>\n<li>HandleHibernateKey: 按下休眠键后的行为，默认hibernate </li>\n<li>HandleLidSwitch: 合上笔记本盖后的行为，默认suspend</li>\n</ul>\n<p>只监视带有 “power-switch” 标签的 输入设备的 key(按下按钮)/lid(合上盖子) 事件。</p>\n<p>如果主机插入了一个扩展坞(docking station) 或者连接了多个显示器， 那么”合上盖子”将执行 HandleLidSwitchDocked= 动作；</p>\n<p>如果主机使用外部电源， 并且 HandleLidSwitchExternalPower= 不是默认值(“ignore”)， 那么”合上盖子”将执行 HandleLidSwitchExternalPower= 动作； 否则将执行 HandleLidSwitch= 动作。</p>\n<p>参数说明:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ignore(无操作),</span><br><span class=\"line\">poweroff(关闭系统并切断电源),</span><br><span class=\"line\">reboot(重新启动),</span><br><span class=\"line\">halt(关闭系统但不切断电源),</span><br><span class=\"line\">kexec(调用内核&quot;kexec&quot;函数),</span><br><span class=\"line\">suspend(休眠到内存),</span><br><span class=\"line\">hibernate(休眠到硬盘),</span><br><span class=\"line\">hybrid-sleep(同时休眠到内存与硬盘),</span><br><span class=\"line\">suspend-then-hibernate(先休眠到内存超时后再休眠到硬盘),</span><br><span class=\"line\">lock(锁屏)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HandleLidSwitch=ignore</span><br><span class=\"line\">HandleLidSwitch=lock</span><br><span class=\"line\">service systemd-logind restart</span><br></pre></td></tr></table></figure>\n\n\n<p>引用：<a href=\"https://blog.csdn.net/qq_31635851/article/details/124627990\">https://blog.csdn.net/qq_31635851/article/details/124627990</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/systemd/logind.conf</span><br></pre></td></tr></table></figure>\n\n<p>配置说明</p>\n<ul>\n<li>HandlePowerKey: 按下电源键后的行为，默认power off </li>\n<li>HandleSleepKey: 按下挂起键后的行为，默认suspend </li>\n<li>HandleHibernateKey: 按下休眠键后的行为，默认hibernate </li>\n<li>HandleLidSwitch: 合上笔记本盖后的行为，默认suspend</li>\n</ul>\n<p>只监视带有 “power-switch” 标签的 输入设备的 key(按下按钮)/lid(合上盖子) 事件。</p>\n<p>如果主机插入了一个扩展坞(docking station) 或者连接了多个显示器， 那么”合上盖子”将执行 HandleLidSwitchDocked= 动作；</p>\n<p>如果主机使用外部电源， 并且 HandleLidSwitchExternalPower= 不是默认值(“ignore”)， 那么”合上盖子”将执行 HandleLidSwitchExternalPower= 动作； 否则将执行 HandleLidSwitch= 动作。</p>\n<p>参数说明:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ignore(无操作),</span><br><span class=\"line\">poweroff(关闭系统并切断电源),</span><br><span class=\"line\">reboot(重新启动),</span><br><span class=\"line\">halt(关闭系统但不切断电源),</span><br><span class=\"line\">kexec(调用内核&quot;kexec&quot;函数),</span><br><span class=\"line\">suspend(休眠到内存),</span><br><span class=\"line\">hibernate(休眠到硬盘),</span><br><span class=\"line\">hybrid-sleep(同时休眠到内存与硬盘),</span><br><span class=\"line\">suspend-then-hibernate(先休眠到内存超时后再休眠到硬盘),</span><br><span class=\"line\">lock(锁屏)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HandleLidSwitch=ignore</span><br><span class=\"line\">HandleLidSwitch=lock</span><br><span class=\"line\">service systemd-logind restart</span><br></pre></td></tr></table></figure>\n\n\n<p>引用：<a href=\"https://blog.csdn.net/qq_31635851/article/details/124627990\">https://blog.csdn.net/qq_31635851/article/details/124627990</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl764i3mv0005jww59d1a4q48","category_id":"cl764i3n10009jww58b5qhhq6","_id":"cl764i3nf000ljww5abss994c"},{"post_id":"cl764i3nb000ijww5c5agej6q","category_id":"cl764i3nf000njww5fswa3pea","_id":"cl764i3nk000ujww55322fs2j"},{"post_id":"cl764i3nd000kjww51dq5e8j9","category_id":"cl764i3ni000rjww5g3gw6hi0","_id":"cl764i3nm000xjww56o9y1wz6"},{"post_id":"cl764i3nu0014jww53m2c5ogs","category_id":"cl764i3nf000njww5fswa3pea","_id":"cl764i3nw0017jww5gu6ohgrr"},{"post_id":"cliu81n7q0000ygv1637w5ahv","category_id":"cliu81n7x0001ygv1hfuabbo7","_id":"cliu81n840005ygv17amb14lc"},{"post_id":"cl764i3n00008jww53jik65wg","category_id":"cl764i3n10009jww58b5qhhq6","_id":"cliu81n8g0008ygv14hqaekp3"},{"post_id":"clislbha200005ov1e6c8frah","category_id":"cliu81n8a0006ygv16rp8awwq","_id":"cliu81n8h000aygv1hddj4fcr"},{"post_id":"cl7r3lwg20000dww52ogc7vsg","category_id":"cl764i3n10009jww58b5qhhq6","_id":"cliu81n8i000bygv1749x0lou"},{"post_id":"cl764i3n6000djww5cu2s1kau","category_id":"cl764i3nf000njww5fswa3pea","_id":"cliu81n8i000cygv1a1mc84ep"},{"post_id":"clislbhac00075ov1egv72pi8","category_id":"cliu81n8a0006ygv16rp8awwq","_id":"cliu81n8i000dygv1es3j647h"},{"post_id":"cl764i3mr0003jww57syeewiw","category_id":"cliu81n8h0009ygv1e5pwg9bf","_id":"cliu81n8i000eygv1f6ndedkp"},{"post_id":"clm76xgn30001bwv1as2542pf","category_id":"clm76xgn50003bwv19l14d1oh","_id":"clm76xgnb0008bwv190uu5ev0"}],"PostTag":[{"post_id":"cl764i3mr0003jww57syeewiw","tag_id":"cl764i3mx0006jww5cqdkdm6d","_id":"cl764i3n9000fjww5e13f8oem"},{"post_id":"cl764i3mv0005jww59d1a4q48","tag_id":"cl764i3n8000ejww58gy93u8m","_id":"cl764i3nf000mjww55pvs7rik"},{"post_id":"cl764i3n6000djww5cu2s1kau","tag_id":"cl764i3nc000jjww5a2xkamcv","_id":"cl764i3nh000qjww5eyvkga5d"},{"post_id":"cl764i3na000hjww53ngp38kn","tag_id":"cl764i3nh000pjww5bka2f0ez","_id":"cl764i3nk000tjww52bm2e6hi"},{"post_id":"cl764i3nb000ijww5c5agej6q","tag_id":"cl764i3nc000jjww5a2xkamcv","_id":"cl764i3nm000wjww578zk1l8j"},{"post_id":"cl764i3nd000kjww51dq5e8j9","tag_id":"cl764i3nk000vjww5eknuhu87","_id":"cl764i3nn000zjww5a4eh44b0"},{"post_id":"cl764i3ng000ojww5bv2lfuyp","tag_id":"cl764i3nm000yjww53pqd9lms","_id":"cl764i3nn0010jww55qydc564"},{"post_id":"cl764i3np0011jww59n8hg047","tag_id":"cl764i3nt0013jww5asvqbu0s","_id":"cl764i3nw0016jww5azkig0ih"},{"post_id":"cl764i3nu0014jww53m2c5ogs","tag_id":"cl764i3nv0015jww52kojejee","_id":"cl764i3nx0018jww5ctekftd1"},{"post_id":"cl764i3nu0014jww53m2c5ogs","tag_id":"cl764i3nc000jjww5a2xkamcv","_id":"cl764i3nx0019jww5fx2rgztx"},{"post_id":"cl7r3lwg20000dww52ogc7vsg","tag_id":"cl7r3lwg80001dww5bucq2wju","_id":"cl7r3lwgd0003dww52pf8avsi"},{"post_id":"cl7r3lwg20000dww52ogc7vsg","tag_id":"cl764i3n8000ejww58gy93u8m","_id":"cl7r3lwge0004dww5fcpl6j4f"},{"post_id":"cl7r3lwg20000dww52ogc7vsg","tag_id":"cl7r3lwgd0002dww57fzxbozl","_id":"cl7r3lwge0005dww5dpfsg1fa"},{"post_id":"clblmohq80000asv1c9raad2h","tag_id":"clblmohqb0001asv1gphwd0li","_id":"clblmohqe0002asv17u9l38p5"},{"post_id":"clislbha200005ov1e6c8frah","tag_id":"cl7r3lwg80001dww5bucq2wju","_id":"clislbhaa00025ov1cvt08ihe"},{"post_id":"clislbha200005ov1e6c8frah","tag_id":"clislbha600015ov12bf4huyj","_id":"clislbhaa00035ov15t1c0663"},{"post_id":"clislbhab00045ov14lfq3q0d","tag_id":"clislbhac00065ov1a1gj6mlf","_id":"clislbhad00095ov1ft0ndry7"},{"post_id":"clislbhab00055ov123e3d451","tag_id":"clislbhad00085ov19h697qe6","_id":"clislbhae000c5ov13xurdnf5"},{"post_id":"clislbhab00055ov123e3d451","tag_id":"clislbhad000a5ov17b2m5ikq","_id":"clislbhae000d5ov1axn118k2"},{"post_id":"clislbhac00075ov1egv72pi8","tag_id":"cl764i3nk000vjww5eknuhu87","_id":"clislbhae000e5ov1fu7idkmt"},{"post_id":"clislbhac00075ov1egv72pi8","tag_id":"clislbhae000b5ov1789x5l31","_id":"clislbhae000f5ov1gk641ke4"},{"post_id":"clislbhac00075ov1egv72pi8","tag_id":"cl7r3lwg80001dww5bucq2wju","_id":"clislbhae000g5ov175mlbmhw"},{"post_id":"cliu81n7q0000ygv1637w5ahv","tag_id":"cl7r3lwg80001dww5bucq2wju","_id":"cliu81n840003ygv1azstbiwy"},{"post_id":"cliu81n7q0000ygv1637w5ahv","tag_id":"cliu81n830002ygv15wk14bxd","_id":"cliu81n840004ygv15azlbph7"},{"post_id":"clm76xgn30001bwv1as2542pf","tag_id":"cl7r3lwg80001dww5bucq2wju","_id":"clm76xgn80004bwv16nutfsze"},{"post_id":"clm76xgn90006bwv18jpe01mj","tag_id":"clm76xgnb0007bwv19zc6alyv","_id":"clm76xgnc0009bwv1823mgrvl"}],"Tag":[{"name":"git","_id":"cl764i3mx0006jww5cqdkdm6d"},{"name":"go","_id":"cl764i3n8000ejww58gy93u8m"},{"name":"laravel","_id":"cl764i3nc000jjww5a2xkamcv"},{"name":"js","_id":"cl764i3nh000pjww5bka2f0ez"},{"name":"mysql","_id":"cl764i3nk000vjww5eknuhu87"},{"name":"postman 环境变量","_id":"cl764i3nm000yjww53pqd9lms"},{"name":"hexo","_id":"cl764i3nt0013jww5asvqbu0s"},{"name":"php","_id":"cl764i3nv0015jww52kojejee"},{"name":"docker","_id":"cl7r3lwg80001dww5bucq2wju"},{"name":"dockerFile","_id":"cl7r3lwgd0002dww57fzxbozl"},{"name":"goland","_id":"clblmohqb0001asv1gphwd0li"},{"name":"容器","_id":"clislbha600015ov12bf4huyj"},{"name":"apiPost","_id":"clislbhac00065ov1a1gj6mlf"},{"name":"花生壳","_id":"clislbhad00085ov19h697qe6"},{"name":"内网穿透","_id":"clislbhad000a5ov17b2m5ikq"},{"name":"mysql8","_id":"clislbhae000b5ov1789x5l31"},{"name":"RabbitMQ","_id":"cliu81n830002ygv15wk14bxd"},{"name":"ubuntu","_id":"clm76xgnb0007bwv19zc6alyv"}]}}